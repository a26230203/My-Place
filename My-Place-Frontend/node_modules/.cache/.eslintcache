[{"/home/lin/phase5/My-Place-Frontend/my-place/src/index.js":"1","/home/lin/phase5/My-Place-Frontend/my-place/src/App.js":"2","/home/lin/phase5/My-Place-Frontend/my-place/src/reportWebVitals.js":"3","/home/lin/phase5/My-Place-Frontend/my-place/src/Component/Login.js":"4","/home/lin/phase5/My-Place-Frontend/my-place/src/Component/HomePage.js":"5","/home/lin/phase5/My-Place-Frontend/my-place/src/Component/NavBar.js":"6","/home/lin/phase5/My-Place-Frontend/my-place/src/Component/Journal.js":"7","/home/lin/phase5/My-Place-Frontend/my-place/src/Component/Container/JournalDetail.js":"8","/home/lin/phase5/My-Place-Frontend/my-place/src/Component/Music.js":"9","/home/lin/phase5/My-Place-Frontend/my-place/src/Component/Photo.js":"10","/home/lin/phase5/My-Place-Frontend/my-place/src/Component/SignUp.js":"11","/home/lin/phase5/My-Place-Frontend/my-place/src/Component/Convas.js":"12","/home/lin/phase5/My-Place-Frontend/my-place/src/Component/Container/JournalList.js":"13","/home/lin/phase5/My-Place-Frontend/my-place/src/Component/Container/JouranlEdit.js":"14","/home/lin/phase5/My-Place-Frontend/my-place/src/Component/Container/JournalDraft.js":"15","/home/lin/phase5/My-Place-Frontend/my-place/src/Component/test.js":"16","/home/lin/phase5/My-Place-Frontend/my-place/src/Component/Container/PhotoList.js":"17","/home/lin/phase5/My-Place-Frontend/my-place/src/Component/Album.js":"18","/home/lin/phase5/My-Place-Frontend/my-place/src/Component/Container/AlbumList.js":"19","/home/lin/phase5/My-Place-Frontend/my-place/src/Component/Container/AlbumDetail.js":"20","/home/lin/phase5/My-Place-Frontend/my-place/src/Component/Weather.js":"21","/home/lin/phase5/My-Place-Frontend/my-place/src/Component/Container/Photo3D.js":"22","/home/lin/phase5/My-Place-Frontend/my-place/src/Component/Notes.js":"23","/home/lin/phase5/My-Place-Frontend/my-place/src/Component/Profile.js":"24"},{"size":598,"mtime":1626007118410,"results":"25","hashOfConfig":"26"},{"size":4025,"mtime":1626292576760,"results":"27","hashOfConfig":"26"},{"size":362,"mtime":1624974287920,"results":"28","hashOfConfig":"26"},{"size":2023,"mtime":1626293280120,"results":"29","hashOfConfig":"26"},{"size":3498,"mtime":1626292266560,"results":"30","hashOfConfig":"26"},{"size":1802,"mtime":1626441888450,"results":"31","hashOfConfig":"26"},{"size":7056,"mtime":1626292390870,"results":"32","hashOfConfig":"26"},{"size":1697,"mtime":1626212213760,"results":"33","hashOfConfig":"26"},{"size":21925,"mtime":1626219316250,"results":"34","hashOfConfig":"26"},{"size":10225,"mtime":1626437445840,"results":"35","hashOfConfig":"26"},{"size":7403,"mtime":1626280787560,"results":"36","hashOfConfig":"26"},{"size":3308,"mtime":1625061688980,"results":"37","hashOfConfig":"26"},{"size":1800,"mtime":1626026950690,"results":"38","hashOfConfig":"26"},{"size":6989,"mtime":1626386477710,"results":"39","hashOfConfig":"26"},{"size":6465,"mtime":1626292420850,"results":"40","hashOfConfig":"26"},{"size":9756,"mtime":1626192690200,"results":"41","hashOfConfig":"26"},{"size":1815,"mtime":1626437429910,"results":"42","hashOfConfig":"26"},{"size":5143,"mtime":1626292541210,"results":"43","hashOfConfig":"26"},{"size":1048,"mtime":1626281585050,"results":"44","hashOfConfig":"26"},{"size":1874,"mtime":1626215061950,"results":"45","hashOfConfig":"26"},{"size":6381,"mtime":1626386011200,"results":"46","hashOfConfig":"26"},{"size":1906,"mtime":1626175713650,"results":"47","hashOfConfig":"26"},{"size":9618,"mtime":1626292567550,"results":"48","hashOfConfig":"26"},{"size":17084,"mtime":1626387149980,"results":"49","hashOfConfig":"26"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},"1294yho",{"filePath":"53","messages":"54","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"55","usedDeprecatedRules":"52"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"60","usedDeprecatedRules":"52"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"63","usedDeprecatedRules":"52"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"66","messages":"67","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"70","usedDeprecatedRules":"52"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"73","usedDeprecatedRules":"52"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"76","messages":"77","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"78","usedDeprecatedRules":"52"},{"filePath":"79","messages":"80","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"81","messages":"82","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"83","usedDeprecatedRules":"52"},{"filePath":"84","messages":"85","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"86","messages":"87","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"88","messages":"89","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"90","usedDeprecatedRules":"52"},{"filePath":"91","messages":"92","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"93","messages":"94","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"95","messages":"96","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"97","usedDeprecatedRules":"52"},{"filePath":"98","messages":"99","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"100","usedDeprecatedRules":"52"},{"filePath":"101","messages":"102","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"103","usedDeprecatedRules":"52"},{"filePath":"104","messages":"105","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"106","usedDeprecatedRules":"52"},{"filePath":"107","messages":"108","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"109","usedDeprecatedRules":"52"},{"filePath":"110","messages":"111","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"112","usedDeprecatedRules":"52"},"/home/lin/phase5/My-Place-Frontend/my-place/src/index.js",[],["113","114"],"/home/lin/phase5/My-Place-Frontend/my-place/src/App.js",["115","116"],"import './App.css';\nimport { BrowserRouter as Router, Route, Switch } from \"react-router-dom\";\nimport React, { useState } from 'react';\nimport Login from './Component/Login'\nimport SignUp from './Component/SignUp'\nimport HomePage from './Component/HomePage'\nimport NavBar from './Component/NavBar';\nimport Journal from './Component/Journal'\nimport JournalEdit from './Component/Container/JouranlEdit';\nimport JournalDraft from './Component/Container/JournalDraft';\nimport JournalDetial from './Component/Container/JournalDetail'\nimport Photo from './Component/Photo';\nimport Album from './Component/Album';\nimport Music from './Component/Music';\nimport Notes from './Component/Notes';\nimport Profile from './Component/Profile';\nimport Test from './Component/test'\n\n\n\nfunction App() {\n  const [loginUser, setLoginUser] = useState({})\n  const [currentJouranl, setCurrentJouranl] = useState({})\n  const [hideMusic, SetHideMusic] = useState(true)\n  const [view, setView] = useState(true)\n\n  const handleLoignUser = (LoginUserObj) => {\n    setLoginUser(LoginUserObj)\n  }\n\n  const handleCurrentJouranl = (jouranlObj) => {\n    setCurrentJouranl(jouranlObj)\n  }\n\n  const handleViewHideMusic = () => {\n    setView(!view)\n    SetHideMusic(!hideMusic)\n  }\n\n  const handlehideMusic = (boolean) => {\n    SetHideMusic(boolean)\n  }\n  \n  return (\n    <Router>\n    <div className=\"App\">\n      <Switch>\n      <Route exact path=\"/\" component={(props) => (\n        <Login {...props} handleLoignUser={handleLoignUser} loginUser={loginUser}/> \n        )} \n        />\n\n      <Route exact path=\"/signup\" component={(props) => (\n        <SignUp {...props} /> \n        )} \n        />\n\n      <Route exact path=\"/homepage\" component={(props) => (\n        <HomePage {...props} loginUser={loginUser} handlehideMusic={handlehideMusic} handleLoignUser={handleLoignUser}/> \n        )} \n        />\n\n      <Route exact path=\"/journal\" component={(props) => (\n        <Journal {...props} loginUser={loginUser} handleCurrentJouranl={handleCurrentJouranl} handlehideMusic={handlehideMusic} handleLoignUser={handleLoignUser}/> \n        )} \n        />\n\n      <Route exact path=\"/journaldraft\" component={(props) => (\n        <JournalDraft {...props} loginUser={loginUser} currentJouranl={currentJouranl} handleCurrentJouranl={handleCurrentJouranl} handlehideMusic={handlehideMusic}\n        handleLoignUser={handleLoignUser}/> \n        )} \n        />\n      <Route exact path=\"/journaldetail\" component={(props) => (\n        <JournalDetial {...props} loginUser={loginUser} currentJouranl={currentJouranl} handlehideMusic={handlehideMusic}/> \n        )} \n        />\n\n      <Route exact path=\"/journaledit\" component={(props) => (\n        <JournalEdit {...props} currentJouranl={currentJouranl} loginUser={loginUser} handlehideMusic={handlehideMusic}/> \n        )} \n        />\n      \n      <Route exact path=\"/photo\" component={(props) => (\n        <Photo {...props}  loginUser={loginUser} handleViewHideMusic={handleViewHideMusic} view={view} handlehideMusic={handlehideMusic} handleLoignUser={handleLoignUser}/> \n        )} \n        />\n\n      <Route exact path=\"/album\" component={(props) => (\n        <Album {...props}  loginUser={loginUser} handlehideMusic={handlehideMusic} handleLoignUser={handleLoignUser}/> \n        )} \n        />\n\n      <Route exact path=\"/notes\" component={(props) => (\n        <Notes {...props} loginUser={loginUser} handlehideMusic={handlehideMusic} handleLoignUser={handleLoignUser}/> \n        )} \n        />\n\n      <Route exact path=\"/profile\" component={(props) => (\n        <Profile {...props} loginUser={loginUser} handlehideMusic={handlehideMusic} handleLoignUser={handleLoignUser} handleLoignUser={handleLoignUser}/> \n        )} \n        />\n\n\n        <Route exact path=\"/test\" component={(props) => (\n        <Test /> \n        )}  \n        />\n \n      </Switch>\n      {Object.keys(loginUser).length > 0 \n        ?<Music loginUser={loginUser} hideMusic={hideMusic}/>\n        :null}\n    </div>\n    </Router>\n  );\n}\n\nexport default App;\n","/home/lin/phase5/My-Place-Frontend/my-place/src/reportWebVitals.js",[],"/home/lin/phase5/My-Place-Frontend/my-place/src/Component/Login.js",["117"],"import React, { useState, useEffect } from \"react\";\nimport Canvas from \"./Convas\";\n\nfunction Login (props) {\n\n    let [username, setUsername] = useState(\"\")\n    let [password, setPassword] = useState(\"\")\n\n    const handleSignupClick = () => {\n        props.history.push(\"/signup\")\n    }\n\n    const handleLogin = (e) => {\n        e.preventDefault()\n        fetch('http://localhost:3000/login', {\n            method: \"POST\",\n            headers: {\n              \"Content-Type\": \"application/json\",\n            },\n            body: JSON.stringify({\n                username: username,\n                password: password\n            })\n        })\n        .then(res => res.json())\n        .then(user => {\n            localStorage.token = user.token\n\n            if(localStorage.token !== \"undefined\"){\n                props.handleLoignUser(user.user)\n                props.history.push('/homepage')\n            }else {\n                alert(\"Username or password is not correct\")\n            }\n        })\n    }\n\n    return (\n        <div className=\"login-page\">\n            <div className=\"switch\"><h2>Sign up？</h2></div>\n            <input type=\"checkbox\" id=\"change\" />\n            <label  onClick={() => handleSignupClick()}>Sign up</label>\n                <div className=\"login\">\n                    <form className=\"login\" onSubmit={(e) => handleLogin(e)}>\n                        <h1>My Place</h1>\n                        <input type=\"text\" value={username} placeholder=\"Please enter your username\" onChange={(e) => setUsername(e.target.value)} /> \n                        <input type=\"password\" value={password} placeholder=\"Please enter your password\" onChange={(e) => setPassword(e.target.value)}/>\n                        <input type=\"submit\" className=\"btn\" value=\"Login\"/>\n                    </form>\n                </div>\n                {\n                Object.keys(props.loginUser).length === 0\n                ?<Canvas/>\n                :null\n                }\n        </div>\n    ) \n\n}\n\nexport default Login;","/home/lin/phase5/My-Place-Frontend/my-place/src/Component/HomePage.js",["118","119"],"import React, {Component} from \"react\";\nimport { Image, Card, Calendar  } from 'antd'\nimport Navbar from './NavBar'\nimport Weather from \"./Weather\";\n\n\n\nconst { Meta } = Card;\nexport default class HomePage extends Component  {\n\n  state = {\n    photos: [],\n    journals: []\n  }\n\n  componentDidMount() {\n    fetch(\"http://localhost:3000/photos\")\n    .then(res => res.json())\n    .then(photos =>{\n       if(photos.length > 3) {\n         const recentPhoto = photos.slice(-3)\n            this.setState({\n              photos: recentPhoto\n            })\n       }else{\n            this.setState({photos})\n       }\n    })\n\n    fetch(\"http://localhost:3000/journals\")\n    .then(res => res.json())\n    .then(journals => {\n      if(journals.length > 3) {\n        const recentJournal = journals.slice(-3)\n          this.setState({\n            journals: recentJournal\n          })\n      }else {\n        this.setState({journals})\n      } \n    })\n  }\n  \n  render() {\n    const userPhoto = this.state.photos.filter(photo => photo.user_id === this.props.loginUser.id)\n    const userjournal = this.state.journals.filter(journal => journal.user_id === this.props.loginUser.id)\n    return (\n      <div className=\"home-page\">\n        {\n        Object.keys(this.props.loginUser).length > 0\n        ?<div>\n          <h1>My <span>Place</span></h1>\n          <Navbar loginUser={this.props.loginUser} handlehideMusic={this.props.handlehideMusic} handleLoignUser={this.props.handleLoignUser}/>\n          <Weather className=\"weather\" loginUser={this.props.loginUser}/>\n\n                <h4 className=\"recent-pohot\">Recent Story</h4>\n              <Card className=\"photo-card\">\n              {userPhoto.length > 0\n                ?<Image.PreviewGroup>\n                  <div className=\"photo-row\">\n                    {userPhoto.map((photo, index) => {\n                      return<div \n                      className={`photo-colum${index}`} \n                      key={index}\n                      >\n                          <Image\n                          className={`img${index}` }               \n                          src={photo.image}>\n                          </Image>\n                      </div>\n                    })\n                  }\n                </div>\n                </Image.PreviewGroup>\n              : <img src='https://upload.wikimedia.org/wikipedia/commons/thumb/6/65/No-Image-Placeholder.svg/488px-No-Image-Placeholder.svg.png' \n                  style={{width: '450px',height: '450px'}}\n                />\n              }\n              <div className=\"site-calendar\">\n              </div>\n              {userjournal.length > 0 \n              ?<div className=\"journal-div\">\n                    {userjournal.map(journal => {\n                      return <div className=\"jounral-detial\" key={journal.id}>\n                                {journal.title !== \"\"\n                                ?<div className=\"journal-detial-title\">{journal.title}</div>\n                                :<div>No Title</div>\n                                }\n                                 <p className=\"jounral-detial-p\">{journal.content}</p>\n                            </div>\n                    })\n                    }\n              </div>   \n              :null\n              }\n            </Card>\n              <div className=\"site-calendar\">\n               <Calendar fullscreen={false}/>  \n              </div>\n        </div>\n        : this.props.history.push('/')\n        }\n      </div>\n      );\n    }\n  }\n","/home/lin/phase5/My-Place-Frontend/my-place/src/Component/NavBar.js",[],"/home/lin/phase5/My-Place-Frontend/my-place/src/Component/Journal.js",[],"/home/lin/phase5/My-Place-Frontend/my-place/src/Component/Container/JournalDetail.js",["120","121"],"import React, { useState } from 'react';\nimport { IoIosJournal  } from \"react-icons/io\";\nimport { RiDraftFill } from \"react-icons/ri\";\nimport Navbar from '../NavBar'\n\n\nfunction JournalDetial(props) {\n  let [title, setTitle] = useState(props.currentJouranl.title)\n  let [content, setContent] = useState(props.currentJouranl.content)\n  const date = new Date(props.currentJouranl.created_at)\n\n  const handDraftClick = () => {\n    props.history.push('/journaldraft')\n  }\n\n  const handJournalClick = () => {\n    props.history.push('/journal')\n  }\n\n\n    return (\n      <div >\n        {Object.keys(props.loginUser).length > 0 \n          ?<div div className=\"journal-page\">\n            <div className=\"journal-header\"></div>\n          <Navbar loginUser={props.loginUser} handlehideMusic={props.handlehideMusic}/>\n          <div className=\"journal-sub-navbar\">\n                  <li onClick={() => handJournalClick()}><IoIosJournal style={{fontSize: '24px', marginRight: '5px', marginBottom: '3px'}} />Journal</li>\n                  <li onClick={() => handDraftClick()}><RiDraftFill style={{fontSize: '24px', marginRight: '5px', marginBottom: '3px'}} />Draft</li>\n          </div>\n          <div className=\"journal-detail-list-container\">\n          <div className=\"sub\">\n            <h1 className=\"sub-title\">{title}</h1>\n            <li className=\"sub-date\" >{date.toLocaleDateString()}</li>\n          </div>  \n          <div className=\"journal-detail-list-detial\"> \n                  <h2>{title}</h2>\n                  <p>{content}</p>\n                </div>\n            </div>\n          </div>\n            :props.history.push('/')    \n          }\n      </div>\n\n    );\n  }\n  export default JournalDetial;","/home/lin/phase5/My-Place-Frontend/my-place/src/Component/Music.js",["122","123","124","125","126","127","128"],"import React, { Component } from \"react\";\nimport { Upload, Input, Button } from 'antd';\nimport {  CloseOutlined, UploadOutlined } from '@ant-design/icons';\nimport _ from \"lodash\";\nimport \"../static/style.css\";\n\n\n\n\n  const props = {\n    action: 'http://localhost:3000/musicpreview'\n  };\n\n\nexport default class Music extends Component {\n\n    state = {\n      isPause: false,\n      musicList: [],\n      currentMusic: {},\n      totalTime: \"00:00\",\n      currentTime: \"00:00\",\n      processItemMove: false,\n      volumeProcessItemMove: false,\n      volumeControl: false,\n      playMode: 1,\n      isMusicListShow: false,\n      addMusic: false,\n      placement: 'top',\n      fileList: [],\n      upFiles: [],\n      title: \"\",\n      author: \"\",\n      img: \"\",\n      description: \"\",\n\n    };\n\n  componentDidUpdate(prevProps, prevState, snapshot) {\n    if(this.state.musicList.length > 0) {\n      if (prevState.currentMusic.id !== this.state.currentMusic.id) {\n        this.resetProcess();\n        if (this.state.isPause) {\n          this.onPlay();\n        }\n      }\n    }\n  }\n\n  componentDidMount() {\n\n    fetch('http://localhost:3000/musics')\n      .then(res => res.json())\n      .then(musicList => {\n        const userMusicList = musicList.filter(musicList => musicList.user_id === this.props.loginUser.id)\n        this.setState({\n          musicList: userMusicList,\n          currentMusic: userMusicList[0]\n      })\n    })\n\n    const audio = this.audio;\n    audio.addEventListener(\"canplay\", () => {\n      const totalTime = parseInt(audio.duration);\n      this.setState({\n        totalTime: this.getTime(totalTime)\n      });\n    });\n    audio.addEventListener(\"timeupdate\", () => {\n      const { processItemMove } = this.state;\n      const currentTime = parseInt(audio.currentTime);\n      const buffered = audio.buffered;\n      let bufferTime = 0;\n      if (buffered.length !== 0) {\n        bufferTime = buffered.end(buffered.length - 1);\n      }\n      const bufferWidth = 500 * (bufferTime / audio.duration);\n      const playWidth = 500 * (audio.currentTime / audio.duration);\n        if(this.processPlayed.style || this.processItem.style){\n          if (!processItemMove) {\n            this.processPlayed.style.width = `${playWidth}px`;\n            this.processItem.style.left = `${playWidth - 4}px`;\n            this.setState({\n              currentTime: this.getTime(currentTime)\n              });\n            }\n          }\n      this.processBuffered.style.width = `${bufferWidth}px`;\n    });\n\n    audio.addEventListener(\"ended\", () => {\n      this.endedPlayMusic();\n    });\n    this.initVolumeProcess();\n  }\n\n  getTime = time => {\n    if (time) {\n      const minute = parseInt((time / 60) % 60);\n      const second = parseInt(time % 60);\n      let minuteText = `${minute}`;\n      let secondText = `${second}`;\n      if (minute < 10) {\n        minuteText = `0${minute}`;\n      }\n      if (second < 10) {\n        secondText = `0${second}`;\n      }\n      return `${minuteText}:${secondText}`;\n    } else {\n      return \"00:00\";\n    }\n  };\n\n  onPlay = () => {\n    const audio = this.audio;\n    this.setState({ isPause: true });\n    audio.play();\n  };\n\n  onPause = () => {\n    const audio = this.audio;\n    this.setState({ isPause: false });\n    audio.pause();\n  };\n\n  onProcessClick = e => {\n    this.setProcess(e, \"click\");\n  };\n\n  setProcess = (e, key) => {\n    let offsetWidth = e.pageX - this.processPlayed.getBoundingClientRect().left;\n    if (offsetWidth < 0) {\n      offsetWidth = 0;\n    }\n    if (offsetWidth > this.process.offsetWidth) {\n      offsetWidth = this.process.offsetWidth;\n    }\n    const offsetPercentage = offsetWidth / this.process.offsetWidth;\n    const currentTime = this.audio.duration * offsetPercentage;\n    if (key == \"click\" || key == \"dragMove\") {\n        this.processPlayed.style.width = `${offsetWidth}px`;\n        this.processItem.style.left = `${offsetWidth - 4}px`;\n        this.setState({ currentTime: this.getTime(currentTime) });\n    }\n    if (key == \"dragEnd\" || key == \"click\") {\n      this.audio.currentTime = currentTime;\n    }\n  };\n\n  onProcessItemMouseDown = e => {\n    e.stopPropagation();\n    this.setState({ processItemMove: true });\n  };\n\n  onProcessItemMouseMove = e => {\n    e.stopPropagation();\n    const { processItemMove } = this.state;\n    if (processItemMove) {\n      this.setProcess(e, \"dragMove\");\n    }\n  };\n  \n  onProcessItemMouseUp = e => {\n    const { processItemMove } = this.state;\n    e.stopPropagation();\n    if (processItemMove) {\n      this.setState({ processItemMove: false });\n      this.setProcess(e, \"dragEnd\");\n    }\n  };\n\n  endedPlayMusic = () => {\n    const { playMode, currentMusic } = this.state;\n    const { musicList } = this.state;\n    if (musicList.length > 0 && currentMusic) {\n      const currentIndex = musicList.findIndex(item => {\n        return item.id === currentMusic.id;\n      });\n      if (playMode === 1) {\n        if (musicList[currentIndex + 1]) {\n          this.setState({ currentMusic: musicList[currentIndex + 1] }, () => {\n            this.onSwitchAction();\n          });\n        } else {\n          this.setState({ currentMusic: musicList[0] }, () => {\n            this.onSwitchAction();\n          });\n        }\n      }\n      else if (playMode === 2) {\n        const randomIndex = Math.floor(Math.random() * 3 + 1);\n        if (musicList[randomIndex + 1]) {\n          this.setState({ currentMusic: musicList[randomIndex + 1] }, () => {\n            this.onSwitchAction();\n          });\n        } else {\n          this.setState({ currentMusic: musicList[0] }, () => {\n            this.onSwitchAction();\n          });\n        }\n      }\n      else if (playMode === 3) {\n        this.onSwitchAction();\n      }\n    } else {\n      this.onSwitchAction();\n    }\n  };\n\n  nextMusic = () => {\n    const { currentMusic } = this.state;\n    const { musicList } = this.state;\n    if (musicList.length > 1 && currentMusic) {\n      const currentIndex = musicList.findIndex(item => {\n        return item.id === currentMusic.id;\n      });\n      if (musicList[currentIndex + 1]) {\n        this.setState({ currentMusic: musicList[currentIndex + 1] }, () => {\n          this.onSwitchAction();\n        });\n      } else {\n        this.setState({ currentMusic: musicList[0] }, () => {\n          this.onSwitchAction();\n        });\n      }\n    } else {\n      this.audio.currentTime = 0;\n      this.onSwitchAction();\n    }\n  };\n\n  previousMusic = () => {\n    const { currentMusic } = this.state;\n    const { musicList } = this.state;\n    if (musicList.length > 1 && currentMusic) {\n      const currentIndex = musicList.findIndex(item => {\n        return item.id === currentMusic.id;\n      });\n      if (musicList[currentIndex - 1]) {\n        this.setState({ currentMusic: musicList[currentIndex - 1] }, () => {\n          this.onSwitchAction();\n        });\n      } else {\n        this.setState({ currentMusic: musicList[musicList.length - 1] }, () => {\n          this.onSwitchAction();\n        });\n      }\n    } else {\n      this.audio.currentTime = 0;\n      this.onSwitchAction();\n    }\n  };\n\n  onSwitchAction = () => {\n    const { isPause } = this.state;\n    this.resetProcess();\n    if (isPause) {\n      this.onPlay();\n    }\n  };\n\n  resetProcess = () => {\n    this.processPlayed.style.width = \"0px\";\n    this.processItem.style.left = \"-4px\";\n  };\n\n\n  onVolumeControl = () => {\n    const { volumeControl } = this.state;\n    this.setState({ volumeControl: !volumeControl });\n  };\n\n  onVolumeControlHide = () => {\n    const { volumeControl } = this.state;\n    if (volumeControl) {\n      this.setState({ volumeControl: false });\n    }\n  };\n\n  initVolumeProcess = () => {\n\n    const processLength = this.volumeProcess.offsetHeight;\n\n    this.volumeProcessCurrent.style.height = `${processLength / 2}px`;\n\n    this.volumeProcessItem.style.bottom = `${processLength / 2 - 6}px`;\n  \n    this.audio.volume = 0.5;\n  };\n\n\n  onVolumeProcessSet = e => {\n    const processLength = this.volumeProcess.offsetHeight;\n    let volumeOffsetHeight =\n      processLength -\n      (e.pageY - this.volumeProcess.getBoundingClientRect().top);\n    let volumepercentage = 0;\n\n    if (volumeOffsetHeight < 0) {\n      volumeOffsetHeight = 0;\n    }\n    if (volumeOffsetHeight > processLength) {\n      volumeOffsetHeight = processLength;\n    }\n    volumepercentage = volumeOffsetHeight / processLength;\n\n    this.volumeProcessCurrent.style.height = `${volumeOffsetHeight}px`;\n\n    this.volumeProcessItem.style.bottom = `${volumeOffsetHeight - 6}px`;\n\n    this.audio.volume = volumepercentage;\n  };\n\n  onVolumeProcessItemMouseDown = () => {\n    this.setState({ volumeProcessItemMove: true });\n  };\n\n\n  onVolumeProcessItemMouseUp = e => {\n    const { volumeProcessItemMove } = this.state;\n    if (volumeProcessItemMove) {\n      this.setState({ volumeProcessItemMove: false });\n    }\n  };\n\n  onVolumeProcessItemMove = e => {\n    const { volumeProcessItemMove } = this.state;\n    if (volumeProcessItemMove) {\n      this.onVolumeProcessSet(e);\n    }\n  };\n\n  onPlayModeChange = () => {\n    const { playMode } = this.state;\n    if (playMode === 3) {\n      this.setState({ playMode: 1 });\n    } else {\n      this.setState({ playMode: playMode + 1 });\n    }\n  };\n\n\n  titleOnChange = (e) => {\n    this.setState({\n      title: e.target.value\n    })\n  }\n\n  authorOnChange = (e) => {\n    this.setState({\n      author: e.target.value,\n    })\n  }\n\n  imgOnChange = (e) => {\n    this.setState({\n      img: e.target.value,\n    })\n  }\n\n  descriptionOnChnage = (e) => {\n    this.setState({\n      description: e.target.value\n    })\n  }\n\n  addPlayList = () => {\n\n    if(this.state.isMusicListShow) {\n      this.onMusicList()\n    }\n      this.setState({\n        addMusic: !this.state.addMusic\n      })\n  };\n\n\n  submitAddMusic = (e) => {\n    e.preventDefault()\n    const {upFiles, title, author, img, description } = this.state\n    let formData = new FormData();\n    formData.append('music', upFiles[0]);\n    formData.append('user_id', this.props.loginUser.id);\n    formData.append('title', title);\n    formData.append('author', author);\n    formData.append('img', img);\n    formData.append('description', description);\n\n    fetch(\"http://localhost:3000/musics\", {\n      method: \"POST\",\n      body: formData\n    })\n    .then( res => {\n      this.componentDidMount()\n      this.addPlayList()\n      this.setState({\n        upFiles: [],\n        title: \"\",\n        author: \"\",\n        img: \"\",\n        description: \"\"\n      })\n    })\n  }\n\n\n  beforeUpload = (file) => {\n    const {upFiles} = this.state;\n    upFiles.push(file);\n    this.setState({upFiles: upFiles});\n  }\n\n\n  onMusicList = () => {\n    const { isMusicListShow } = this.state;\n    this.setState({ isMusicListShow: !isMusicListShow });\n    if(this.state.addMusic) {\n      this.setState({\n        addMusic: !this.state.addMusic\n      })\n    }\n  };\n\n\n  onDeleteMusic = (e, item) => {\n    e.stopPropagation();\n    console.log(item)\n    fetch(`http://localhost:3000/musics/${item.id}`, {\n      method: \"DELETE\",\n    })\n    .then(res => res.json())\n    .then(() => {\n      this.componentDidMount()\n    })\n  };\n\n  onMusicListItemClick = id => {\n    const { musicList } = this.state;\n    const { currentMusic } = this.state;\n    const index = musicList.findIndex(item => {\n      return item.id === id;\n    });\n    if (index !== -1) {\n      if (currentMusic.id === id) {\n        this.resetProcess();\n        this.audio.currentTime = 0;\n        this.onPlay();\n      } else {\n        this.setState({ currentMusic: musicList[index] }, () => {\n          this.resetProcess();\n          this.onPlay();\n        });\n      }\n    }\n  };\n\n  render() {\n    const {\n      currentMusic,\n      isPause,\n      totalTime,\n      currentTime,\n      volumeControl,\n      playMode,\n      isMusicListShow\n    } = this.state;\n    const { title, description, img, music, id } = currentMusic || {};\n    const { musicList } = this.state;\n    const audio = this.audio;\n    let playModeIcon = \"\";\n    switch (playMode) {\n      case 1:\n        playModeIcon = \"icon-circulation-list\";\n        break;\n      case 2:\n        playModeIcon = \"icon-circulation-random\";\n        break;\n      case 3:\n        playModeIcon = \"icon-circulation-single\";\n        break;\n      default:\n        playModeIcon = \"icon-circulation-list\";\n        break;\n    }\n    return (\n      <div  className= {this.props.hideMusic ?\"mainLayout\" :\"hideMainLayout\"}>\n        <div\n          className=\"mainContent\"\n          onMouseMove={this.onProcessItemMouseMove}\n          onMouseUp={this.onProcessItemMouseUp}\n        >\n          <div className=\"playContent\">\n            <div className=\"left-controler\">\n              <span\n                className=\"icon-prev prev-next-icon\"\n                onClick={this.previousMusic}\n              />\n              {isPause ? (\n                <span className=\"icon-pause playIcon\" onClick={this.onPause} />\n              ) : (\n                <span className=\"icon-play playIcon\" onClick={this.onPlay} />\n              )}\n              <span\n                className=\"icon-next prev-next-icon\"\n                onClick={this.nextMusic}\n              />\n            </div>\n            <div className=\"main-controler\">\n              <img src={img} alt=\"\" className=\"thumbnail\" />\n              <div className=\"music-control\">\n                <div className=\"music-info\">\n                  <span className=\"title-info\">{title}</span>\n                  <span className=\"author-info\">{description}</span>\n                </div>\n                <div className=\"process-time\">\n                  <div\n                    className=\"process-wrapper\"\n                    onClick={this.onProcessClick}\n                    ref={ref => (this.process = ref)}\n                  >\n                    <div className=\"process\">\n                      <div\n                        className=\"progress-buffered\"\n                        ref={ref => (this.processBuffered = ref)}\n                      />\n                      <div\n                        className=\"progress-played\"\n                        ref={ref => (this.processPlayed = ref)}\n                      >\n                        <div\n                          className=\"process-item\"\n                          ref={ref => (this.processItem = ref)}\n                          onMouseDown={this.onProcessItemMouseDown}\n                        >\n                          <div className=\"process-item-inside\" />\n                        </div>\n                      </div>\n                    </div>\n                  </div>\n                  <div className=\"time\">\n                    <span className=\"current-time\">{currentTime}</span>/\n                    <span className=\"total-time\">{totalTime}</span>\n                  </div>\n                </div>\n              </div>\n            </div>\n            <div className=\"right-folder\">\n                  <span onClick={() => this.addPlayList()} className=\"icon-folder folder\"/>\n                          {this.state.addMusic\n                                 ?<div className=\"add-music-div\">\n                                 <h4 className=\"upload-title\">Upload Music</h4>\n                                  <form className=\"add-music\"\n                                    onSubmit={(e) => this.submitAddMusic(e)}\n                                  >\n                                  <CloseOutlined className=\"close-add\" onClick={() => this.addPlayList()}/>\n                                  <br/>\n                                  <Upload {...props} showUploadList={true} beforeUpload={this.beforeUpload}>\n                                    <Button className=\"add-upload\" icon={<UploadOutlined />}>Upload</Button>    \n                                  </Upload>\n                                  <Input  className=\"add-input\" addonBefore=\"Title: \" onChange={(e) => this.titleOnChange(e)}></Input>\n                                  <Input className=\"add-input\" addonBefore=\"Author: \" onChange={(e) => this.authorOnChange(e)}></Input>\n                                  <Input className=\"add-input\" addonBefore=\"Image: \" onChange={(e) => this.imgOnChange(e)}></Input>\n                                  <Input className=\"add-input\" addonBefore=\"Description: \" onChange={(e) => this.descriptionOnChnage(e)}></Input>\n                                  <button className=\"add-submit\">Submit</button> \n                                </form>\n                                </div>\n                                :null\n                          }\n            </div>\n            <div className=\"right-controler\">\n              <div\n                className=\"volume-controler\"\n                style={{ visibility: volumeControl ? \"visible\" : \"hidden\" }}\n                onMouseMove={this.onVolumeProcessItemMove}\n                onMouseUp={this.onVolumeProcessItemMouseUp}\n              >\n                <div\n                  className=\"volume-process\"\n                  onClick={this.onVolumeProcessSet}\n                  ref={ref => (this.volumeProcess = ref)}\n                >\n                  <div\n                    className=\"volume-current\"\n                    ref={ref => (this.volumeProcessCurrent = ref)}\n                  >\n                    <div\n                      className=\"volume-item\"\n                      ref={ref => (this.volumeProcessItem = ref)}\n                      onMouseDown={this.onVolumeProcessItemMouseDown}\n                      onMouseUp={this.onVolumeProcessItemMouseUp}\n                    >\n                      <div className=\"volume-item-inside\" />\n                    </div>\n                  </div>\n                </div>\n              </div>\n              <span\n                className=\"icon-volume volume\"\n                onClick={this.onVolumeControl}\n              />\n              <span\n                className={`${playModeIcon} circulation`}\n                onClick={this.onPlayModeChange}\n              />\n              <span className=\"icon-list list\" onClick={this.onMusicList} />\n            </div>\n            {isMusicListShow && (\n              <div className=\"musicList\">\n                <div className=\"music-list-head\">\n                  <h4 className=\"music-list-head-title\">\n                     Playlist(\n                    <span>\n                      {musicList && musicList.length ? musicList.length : 0}\n                    </span>\n                    )\n                  </h4>\n                  <span\n                    className=\"music-list-head-collect\"\n                    onClick={this.onCollect}\n                  >\n                    <span className=\"icon-addfile music-list-common-icon\" onClick={() => this.addPlayList()}/>\n                  </span>\n                  <span className=\"music-list-head-line\" />\n                  <p className=\"music-list-head-name\">{title}</p>\n                  <span className=\"music-list-head-close\">\n                    <span\n                      className=\"icon-close music-list-common-icon\"\n                      onClick={this.onMusicList}\n                    />\n                  </span>\n                </div>\n                <div className=\"music-list-body\">\n                  <div className=\"music-list-body-content\">\n                    <ul className=\"music-list-body-ul\">\n                      {musicList &&\n                        musicList.length > 0 &&\n                        musicList.map(item => {\n                          return (\n                            <li\n                              className={`music-list-li ${id === item.id &&\n                                \"music-current\"}`}\n                              onClick={() => this.onMusicListItemClick(item.id)}\n                              key={item.id}\n                            >\n                              <div className=\"col music-list-li-col-1\">\n                                {id === item.id && (\n                                  <span className=\"play-triangle-icon icon-currentPlay\" />\n                                )}\n                              </div>\n                              <div className=\"col music-list-li-col-2\">\n                                <span className=\"music-list-li-text\">\n                                  {item.title}\n                                </span>\n                              </div>\n                              <div className=\"col music-list-li-col-3\">\n                                <span\n                                  className=\"icon-clear music-list-action-icon\"\n                                  onClick={e => this.onDeleteMusic(e, item)}\n                                />\n                              </div>\n                              <div className=\"col music-list-li-col-4\">\n                                <span className=\"music-list-li-text\">\n                                  {item.author}\n                                </span>\n                              </div>\n                                <div className=\"col music-list-li-col-5\">\n                                  <span className=\"music-list-li-text\">\n                                    {item.description}\n                                  </span> \n                                </div>\n                              <div className=\"col music-list-li-col-6\">\n                                <span className=\"icon-link music-list-action-icon\" />\n                              </div>\n                            </li>\n                          );\n                        })}\n                    </ul>\n                  </div >\n                  <div className=\"music-cover\">\n                        {this.state.musicList.length > 0\n                          ?<img src={currentMusic.img} />\n                          :<img src='' />\n                        }\n                  </div>\n                </div>\n              </div>\n            )}\n            <audio src={music} ref={ref => (this.audio = ref)} />\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\n\n","/home/lin/phase5/My-Place-Frontend/my-place/src/Component/Photo.js",["129","130","131","132","133","134"],"/home/lin/phase5/My-Place-Frontend/my-place/src/Component/SignUp.js",["135"],"import React, { useState } from 'react';\nimport {Input, Button, message } from 'antd'\nimport { AiOutlineUserAdd } from \"react-icons/ai\";\nimport { BsPeopleCircle } from \"react-icons/bs\";\nimport { GiSmartphone ,GiModernCity } from \"react-icons/gi\";\nimport { HiOutlineMail, HiOutlineLocationMarker } from \"react-icons/hi\";\nimport { RiLock2Line } from \"react-icons/ri\";\nimport { FiEye } from \"react-icons/fi\";\nimport defaultImage from '../static/png/noImage.jpg'\n\nfunction SignUp(props) {\n    let [username, setUsername] = useState(\"\")\n    let [password, setPassword] = useState(\"\")\n    let [confirmPassword, setConfirmPassword] = useState(\"\")\n    let [viewPassword, setViewPassword] = useState(false)\n    let [name, setName] = useState(\"\")\n    let [email, setEmail] = useState(\"\")\n    let [phone, setPhone] = useState(\"\")\n    let [address, setAddress] = useState(\"\")\n    let [zipCode, setzipCode] = useState(\"\")\n\n    const handleViewPassword = () => {\n        setViewPassword(!viewPassword)\n    }\n\n    const handleLoginBtn = () => {\n        setUsername('')\n        setPassword('')\n        setConfirmPassword('')\n        setName('')\n        setEmail('')\n        setPhone('')\n        setAddress('')\n        setzipCode('')\n        setViewPassword(false)\n        props.history.push('/')\n    }\n\n    const dataURItoBlob = (dataURI, type) => {\n        // convert base64 to raw binary data held in a string\n        var byteString = atob(dataURI.split(',')[1]);\n    \n        // separate out the mime component\n        var mimeString = dataURI.split(',')[0].split(':')[1].split(';')[0]\n    \n        // write the bytes of the string to an ArrayBuffer\n        var ab = new ArrayBuffer(byteString.length);\n        var ia = new Uint8Array(ab);\n        for (var i = 0; i < byteString.length; i++) {\n            ia[i] = byteString.charCodeAt(i);\n        }\n    \n        // write the ArrayBuffer to a blob, and you're done\n        var bb = new Blob([ab], { type: type });\n        return bb;\n    }\n\n    let file = dataURItoBlob(defaultImage, 'image/png');\n\n    const handleSingup = () => {\n        if(username !== ''&& password !== '' && password === confirmPassword \n        && name !== '' && email !== '' && phone !== '' && address !== '' && zipCode !== '') {\n            let formData = new FormData();\n            formData.append('img', file);\n            formData.append('username', username);\n            formData.append('password', password);\n            formData.append('name', name);\n            formData.append('email', email);\n            formData.append('phone', phone);\n            formData.append('address', address);\n            formData.append('post_code', zipCode);\n            fetch('http://localhost:3000/signup', {\n                method: \"POST\",\n                body: formData\n            })\n            .then(res => res.json())\n            .then(user => {\n                localStorage.token = user.token\n                if(localStorage.token !== \"undefined\"){\n                    message.success(\"Successfuly created a Account\")\n                    setUsername('')\n                    setPassword('')\n                    setConfirmPassword('')\n                    setName('')\n                    setEmail('')\n                    setPhone('')\n                    setAddress('')\n                    setzipCode('')\n                    setViewPassword(false)\n                    props.history.push('/')\n                }else {\n                    message.error(\"Please Try Again\")\n                }\n            })\n        }else {\n            message.error('Please enter all info and try agin')\n        }\n    }\n\n    return (\n      <div className=\"singup\">\n        <div className=\"signup-form\">\n            <h1>Create My-Place account</h1>\n            <FiEye className=\"rest-view-password\" onClick={() => handleViewPassword()} style={{marginLeft: '510px', marginBottom: '-325px'}}/>\n            <FiEye className=\"rest-view-password\" onClick={() => handleViewPassword()} style={{marginLeft: '510px', marginBottom: '-580px'}}/>\n        <Input \n        addonBefore=\"Username: \"\n        prefix={<AiOutlineUserAdd style={{marginRight: \"5px\"}}/>}\n        value={username} \n        placeholder=\"Please enter your username\" \n        onChange={(e) => setUsername(e.target.value)}\n        >\n        </Input>\n        <Input \n        addonBefore=\"Password: \"\n        value={password}\n        prefix={<RiLock2Line style={{marginRight: \"5px\"}}/>} \n        placeholder=\"Please enter your password\" \n        onChange={(e) => setPassword(e.target.value)} \n        type={viewPassword? \"text\" :\"password\"}\n        >\n        </Input>\n        <div className=\"signup-passowrd-warning\">\n        <li className={password.length >= 8? 'password-match' : 'password-not-match' }>Must contain 8 or more characters</li>\n        <li className={password.match(/\\d+/g) ? 'password-match' : 'password-not-match' }>Must contain a digit</li>\n        <li className={password.match(/[a-z]/)? 'password-match' : 'password-not-match' }>Must contain a lower case character</li>\n        <li className={password.match(/[A-Z]/)? 'password-match' : 'password-not-match' }>Must contain an upper case character</li>\n        </div>\n        <Input \n        addonBefore=\"Confirm Password: \"\n        value={confirmPassword}\n        prefix={<RiLock2Line style={{marginRight: \"5px\"}}/>} \n        placeholder=\"Please enter your password\" \n        onChange={(e) => setConfirmPassword(e.target.value)} \n        type={viewPassword? \"text\" :\"password\"}\n        >\n        </Input>\n        {password !== confirmPassword\n        ? <p style={{marginTop: '-30px', marginBottom: '-5px'}} className=\"password-not-match\">The Confirm password confirmation does not match</p>\n        : null\n        }\n        <Input \n        addonBefore=\"Full Name: \"\n        type=\"text\" value={name} \n        prefix={<BsPeopleCircle style={{marginRight: \"5px\"}}/>} \n        placeholder=\"Please enter your full name\" \n        onChange={(e) => setName(e.target.value)}\n        >\n\n        </Input>\n        <Input \n        addonBefore=\"Email: \"\n        type=\"text\" \n        prefix={<HiOutlineMail style={{marginRight: \"5px\"}}/>} \n        value={email} \n        placeholder=\"Please enter your email\" \n        onChange={(e) => setEmail(e.target.value)} \n        >\n\n        </Input>\n        <Input \n        addonBefore=\"Phone: \"\n        type=\"text\"\n        prefix={<GiSmartphone style={{marginRight: \"5px\"}}/>}  \n        value={phone} \n        placeholder=\"Please enter your phone\" \n        onChange={(e) => setPhone(e.target.value)}\n        >\n\n        </Input>\n        <Input \n        addonBefore=\"Address: \"\n        type=\"text\" value={address} \n        prefix={<HiOutlineLocationMarker style={{marginRight: \"5px\"}}/>}  \n        placeholder=\"Please enter your address\" \n        onChange={(e) => setAddress(e.target.value)}\n        >\n\n        </Input>\n        <Input \n        addonBefore=\"Zip Code: \"\n        type=\"text\"\n        prefix={<GiModernCity style={{marginRight: \"5px\"}}/>}   \n        value={zipCode} \n        placeholder=\"Please enter your zip code\" \n        onChange={(e) => setzipCode(e.target.value)}\n        >\n        </Input>\n        <Button type='primary' onClick={() => handleLoginBtn()} >Login</Button>\n        <Button type='primary' onClick={() => handleSingup()}  style={{marginLeft: '200px'}}>SignUp</Button>\n        </div>      \n      </div>\n\n    );\n  }\n\n  export default SignUp;","/home/lin/phase5/My-Place-Frontend/my-place/src/Component/Convas.js",[],"/home/lin/phase5/My-Place-Frontend/my-place/src/Component/Container/JournalList.js",["136"],"import React, { useState } from 'react';\nimport { FaRegEdit } from \"react-icons/fa\";\nimport { RiDeleteBin6Line } from \"react-icons/ri\";\n\nfunction JournalList(props) {\n  const date = new Date(props.journal.created_at)\n\n    const handleEdit = () => {\n      props.handleCurrentJouranl(props.journal)\n        props.history.push('./journaledit')\n    }\n\n  \n    const handlClickTitle = () => {\n      if(props.handleDelete){\n        props.handleCurrentJouranl(props.journal)\n         props.history.push('./journaldetail')\n      }\n    }\n\n    return (\n        <div className=\"journal-list\" >\n          {props.journal.title !== \"\"\n          ?<div className=\"journal-list-title\" onClick={() => handlClickTitle()}>{props.journal.title}</div>\n          :<li onClick={() => handlClickTitle()}>No Title</li>\n          }\n          <p onClick={() => handlClickTitle()}>{props.journal.content}</p>\n            <div  className=\"journal-list-time-btn\" >\n            <div>{date.toLocaleDateString(\"en-US\", {year: 'numeric', month: '2-digit', day: '2-digit'} )}</div>\n            <div className=\"journal-list-edit-btn\" onClick={() => handleEdit()} > <FaRegEdit style={{fontSize: '20px', marginBottom: '5px', marginRight: '5px'}} /> Edit</div>\n            {props.handleDraftDelete\n            ?<div className=\"journal-list-delet-btn\" onClick={() => props.handleDraftDelete(props.journal)} > <RiDeleteBin6Line style={{fontSize: '20px', marginBottom: '5px', marginRight: '5px'}} />Delete</div>\n            :<div className=\"journal-list-delet-btn\" onClick={() => props.handleDelete(props.journal)} > <RiDeleteBin6Line style={{fontSize: '20px', marginBottom: '5px', marginRight: '5px'}}  />Delete</div>\n            }\n            </div>\n          <hr class=\"dotted\"></hr>\n        </div>\n    );\n  } \n\n  export default JournalList;","/home/lin/phase5/My-Place-Frontend/my-place/src/Component/Container/JouranlEdit.js",[],"/home/lin/phase5/My-Place-Frontend/my-place/src/Component/Container/JournalDraft.js",[],"/home/lin/phase5/My-Place-Frontend/my-place/src/Component/test.js",["137"],"import React, { Component } from \"react\";\nimport NavBar from \"./NavBar\";\nimport { Upload, Input, Modal, Button } from 'antd'\nimport {  PlusOutlined, CloseCircleOutlined } from '@ant-design/icons';\nimport ImgCrop from 'antd-img-crop';\n\n\nfunction getBase64(file) {\n    return new Promise((resolve, reject) => {\n      const reader = new FileReader();\n      reader.readAsDataURL(file);\n      reader.onload = () => resolve(reader.result);\n      reader.onerror = error => reject(error);\n    });\n  }\n\nexport default class Profile extends Component{ \n    state = {\n        about: true,\n        edit: false,\n        reset: false,\n        name: '',\n        address: '',\n        email: '',\n        phone: '',\n        zipCode: '',\n        password: '',\n        newPassword: '',\n        fileList: [],\n        upFiles: [], \n        previewVisible: false,\n        previewImage: '',\n        previewTitle: '',\n    }\n\n   //change upload value\n   onChange = ({ target: { value } }) => {\n    this.setState({ value });\n  };\n\n//   beforeUploadFile = (file) => {\n//     const {upFiles} = this.state;\n//     upFiles.push(file);\n//     this.setState({upFiles: upFiles});\n\n//   }\n\n  //handle Onchange of upload\n  handleChange = ({ fileList }) => this.setState({ fileList });\n\n  //handle cancel of upload\n  handleCancel = () => this.setState({ previewVisible: false });\n\n  //handle preview of uploadalbumName\n  handlePreview = async file => {\n    if (!file.url && !file.preview) {\n      file.preview = await getBase64(file.originFileObj);\n    }\n\n    this.setState({\n      previewImage: file.url || file.preview,\n      previewVisible: true,\n      previewTitle: file.name || file.url.substring(file.url.lastIndexOf('/') + 1),\n    });\n  };\n\n  //handle submit upload\n  handleSubmit = () => {\n    const {fileList} = this.state;\n    let formData = new FormData();\n    fileList.forEach((file) => {\n      console.log(`file for each ${file} `)\n      formData.append('img', file);\n      formData.append('user_id', this.props.loginUser.id);\n    });\n    fetch(\"http://localhost:3000/userimage\", {\n      method: \"POST\",\n      body: formData\n    })\n    .then(res => res.json())\n    .then(() => {\n    })\n    this.setState({\n      fileList: [],\n    })\n} \n\n    handleAbout = () => {\n        this.setState({\n            about: true,\n            edit: false,\n            reset: false\n        })\n    }\n\n    handleEdit = () => {\n        this.setState({\n            about: false,\n            edit: true,\n            reset: false\n        })\n    }\n\n    handleRest = () => {\n        this.setState({\n            about: false,\n            edit: false,\n            reset: true\n        })\n    }\n\n\n    handleNameOnchange = (e) => {\n        this.setState({\n            name: e.target.value\n        })\n    }\n\n    handleAddressOnchange = (e) => {\n        this.setState({\n            address: e.target.value\n        })\n    }\n    \n    handleEmailOnchange = (e) => {\n        this.setState({\n            email: e.target.value\n        })\n    }\n\n    handlePhoneOnchange = (e) => {\n        this.setState({\n            phone: e.target.value\n        })\n    }\n\n    handleZipCodeOnchange = (e) => {\n        this.setState({\n            zipCode: e.target.value\n        })\n    }\n\n    handlePassword = (e) => {\n        this.setState({\n            password: e.target.value\n        })\n    }\n\n    handleNewPassword = (e) => {\n        this.setState({\n            newPassword: e.target.value\n        })\n    }\n\n\n    render() {\n        console.log(this.props.loginUser)\n        console.log(this.state.about)\n        console.log(this.state.fileList)\n        const phoneformat =  `(${this.props.loginUser.phone.slice(0, 3)}) ${this.props.loginUser.phone.slice(3, 6)}-${this.props.loginUser.phone.slice(6, 10)}`\n        const { name, address, email, phone, zipCode, password, newPassword, previewVisible, previewImage, fileList, previewTitle, upFiles} = this.state\n\n        return(\n            <div>\n                 {\n                 Object.keys(this.props.loginUser).length > 0\n                 ?<div>\n                     <div className=\"profile-page-header\"></div>\n                    <NavBar loginUser={this.props.loginUser} handlehideMusic={this.props.handlehideMusic}/>\n                    <div className=\"sub-nav\">\n                        <ul>\n                            <li onClick={() => this.handleAbout()}>About</li>\n                            <li onClick={() => this.handleEdit()}>Edit Profile</li>\n                            <li onClick={() => this.handleRest()}>Change Password</li>\n                        </ul>\n                    </div>\n\n                    {this.state.about\n                    ?<div className=\"about\">\n                        <div>Name: { this.props.loginUser.name }</div>\n                        <div>Phone: { phoneformat }</div>\n                        <div>Email: { this.props.loginUser.email }</div>\n                        <div>Address: { this.props.loginUser.address }</div>\n                        <div>Zip Code: { this.props.loginUser.post_code }</div>\n                    </div>\n                    :null\n                    }\n                    {this.state.edit\n                        ?<div className=\"profile-page-upload\">\n                            <ImgCrop rotate >\n                                <Upload\n                                    listType=\"picture-card\"\n                                    fileList={fileList}\n                                    beforeUpload={ file => {\n                                        upFiles.push(file);\n                                        this.setState({upFiles: upFiles})\n                                    }}\n                                    onPreview={this.handlePreview}\n                                    onChange={this.handleChange}\n                                    multiple={false}\n                                >\n                                    <PlusOutlined />\n                                    <div style={{ marginTop: 8}}>Upload</div>\n                                </Upload>\n                                <Modal\n                                    visible={previewVisible}\n                                    title={previewTitle}\n                                    footer={null}\n                                    onCancel={this.handleCancel}\n                                    >\n                                    <img\n                                        src={previewImage}\n                                        alt={previewTitle}\n                                        style={{ width: '100%', height: '100%'}}\n                                    />\n                                </Modal>\n                            </ImgCrop>\n                            <Button style={{marginTop: '10px'}} onClick={() => this.handleSubmit()} type='primary' >submit</Button>\n                            <form className=\"edit\">\n                                <Input\n                                style={{width: '400px'}}\n                                addonBefore=\"Name: \"\n                                value={name}\n                                onChange={(e) => this.handleNameOnchange(e)}    \n                                >\n                                </Input>\n                                <Input\n                                style={{width: '400px'}}\n                                addonBefore=\"Address: \"\n                                value={address}\n                                onChange={(e) => this.handleAddressOnchange(e)}\n                                >\n                                </Input>\n                                <Input\n                                style={{width: '400px'}}\n                                addonBefore=\"Email: \"\n                                value={email}\n                                onChange={(e) => this.handleEmailOnchange(e)}\n                                >\n                                </Input>\n                                <Input\n                                style={{width: '400px'}}\n                                addonBefore=\"Phone: \"\n                                value={phone}\n                                onChange={(e) => this.handlePhoneOnchange(e)}\n                                >\n                                </Input>\n                                <Input\n                                style={{width: '400px'}}\n                                addonBefore=\"Zip Code: \"\n                                value={zipCode}\n                                onChange={(e) => this.handleZipCodeOnchange(e)}\n                                >\n                                </Input>\n                            </form>\n                        </div> \n                        :null \n                    }\n                    {this.state.reset\n                        ? <form>\n                                <Input\n                                style={{width: '400px'}}\n                                addonBefore=\"New password: \"\n                                value={password}\n                                onChange={(e) => this.handlePassword(e)}\n                                >\n                                </Input>\n                                <Input\n                                style={{width: '400px'}}\n                                addonBefore=\"Confirm Password: \"\n                                value={newPassword}\n                                onChange={(e) => this.handleNewPassword(e)}\n                                >\n                                </Input>\n\n                        </form>\n                        :null\n                    }    \n                 </div>\n                 :this.props.history.push('/')\n                }\n            </div>\n        )\n    }\n}","/home/lin/phase5/My-Place-Frontend/my-place/src/Component/Container/PhotoList.js",[],"/home/lin/phase5/My-Place-Frontend/my-place/src/Component/Album.js",[],"/home/lin/phase5/My-Place-Frontend/my-place/src/Component/Container/AlbumList.js",["138","139"],"import { DeleteFilled} from '@ant-design/icons';\nimport { Card } from 'antd';\n\nconst { Meta } = Card;\nfunction AlbumList(props) {\n  \n    //Show each album cover photo\n    const albumPhoto = props.photos.filter(photo => photo.album_id == props.album.id)\n    const photosUrl = albumPhoto.map(photo => photo.image)\n\n    return (\n      <div className=\"album-List\">\n            <h4>{props.album.name }</h4>\n            {photosUrl.length > 0\n              ?<img alt={props.album.name} src={photosUrl[0]} onClick={() => props.handleClickCoverAlbum(props.album)}/>\n              :<img alt={props.album.name} src='https://upload.wikimedia.org/wikipedia/commons/thumb/6/65/No-Image-Placeholder.svg/488px-No-Image-Placeholder.svg.png' \n              style={{width: '180px', height: '250px'}} onClick={() => props.handleClickCoverAlbum(props.album)}/>\n            }\n            <br/>\n            <DeleteFilled className=\"album-btn\" style={{fontSize: \"24px\"}} onClick={() => props.handleDelete(props.album)}/>\n      </div>\n    )\n  }\n\n  export default AlbumList;","/home/lin/phase5/My-Place-Frontend/my-place/src/Component/Container/AlbumDetail.js",["140","141","142"],"import React, { Component } from \"react\";\nimport { Image, message, Select, Card  } from 'antd';\nimport { CloseCircleOutlined } from '@ant-design/icons';\nimport PhotoList from './PhotoList';\n\nconst { Option } = Select;\n\nexport default class AlbumDetail extends Component{\n\n    state = {\n        photos: []\n    }\n\n    componentDidMount() {\n        fetch(\"http://localhost:3000/photos\")\n        .then(res => res.json())\n        .then(photos => this.setState({photos}))\n      }\n\n  handleRemoveFromAblum =(photoObj) => {\n      fetch(`http://localhost:3000/removealbum`, {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\",\n        },\n        body: JSON.stringify(photoObj)\n      })\n      .then(res => {\n          message.info(\"Photo removed from curren ablum\")\n          this.componentDidMount()\n      })\n    }\n\n   render() {\n        const albumPhoto = this.state.photos.filter(photo => photo.album_id == this.props.album.id)\n    return (\n        <div className=\"album-photo-page-list\">\n        <CloseCircleOutlined  style={{fontSize: \"30px\", marginLeft: '1600px ', marginButtom: '50px  '}} onClick={() => this.props.handleCancleAlbum()}/>\n            <div>\n              <Image.PreviewGroup>\n\n                  {albumPhoto.map(photo => {\n                      const rotate = Math.floor(Math.random() * 40 - 20)\n                      return <Card style={{transform: `rotate(${rotate}deg)`}} className=\"photo-list-card\">\n                                <PhotoList photo={photo} key={photo.id} handleDelete={this.handleDelete} album={this.state.album} \n                                AddPhotoToAlbum={this.AddPhotoToAlbum}\n                                key={photo.id}/> \n                            </Card>\n                      })\n                  }\n              </Image.PreviewGroup>\n            </div>\n        </div>\n    );\n    }\n  }\n\n","/home/lin/phase5/My-Place-Frontend/my-place/src/Component/Weather.js",["143","144"],"  \nimport React, { useEffect, useState } from 'react';\nimport { AiOutlineDoubleLeft, AiFillEye, AiOutlineSwap } from \"react-icons/ai\";\nimport { IoManOutline, IoSpeedometer } from \"react-icons/io5\";\nimport { RiWindyFill, RiSunCloudyFill } from \"react-icons/ri\";\nimport { WiHumidity } from \"react-icons/wi\";\n\nconst api = {\n  key: \"56f5e6f96b876ed60f2717fd26dd3b1e\",\n  base: \"https://api.openweathermap.org/data/2.5/\"\n}\n\nfunction Weather() {\n  const [input, setInput] = useState(\"\");\n  const [weather, setWeather] = useState({});\n  const [display, setDisplay] = useState(false)\n  const [searchDisplay, setSearchDisplay] = useState(false)\n  const date = new Date()\n  const weekday = [\"Sunday\", \"Monday\", \"Tuesday\", \"Wednesday\", \"Thursday\", \"Friday\", \"Saturday\"]\n  const months = [\"January\", \"February\", \"March\", \"April\", \"May\", \"June\", \"July\", \"August\", \"September\", \"October\", \"November\", \"December\"];\n\n  useEffect(() => {\n    fetch(`${api.base}weather?zip=11223&units=metric&APPID=${api.key}`)\n        .then(res => res.json())\n        .then(result => {\n          setWeather(result);\n        });\n  },[]) \n\n  const search = evt => {\n    if (evt.key === \"Enter\") {\n      if(parseInt(input) == input) {\n        fetch(`${api.base}weather?zip=${input}&units=metric&APPID=${api.key}`)\n        .then(res => res.json())\n        .then(result => {\n          setWeather(result);\n          setInput('');\n        });\n      }else{\n        fetch(`${api.base}weather?q=${input}&units=metric&APPID=${api.key}`)\n          .then(res => res.json())\n          .then(result => {\n            setWeather(result);\n            setInput('');\n          });\n      }\n    }\n  }\n\n  const handleDisplay = () => {\n    setDisplay(!display)\n  }\n\n  const handleSearchDisplay =() => {\n    setSearchDisplay(!searchDisplay)\n  }\n\n  const handleOnchange = (e) => {\n    setInput(e.target.value)\n  }\n\n  return (\n        <div className=\"weather-page\">\n          <div className=\"header\">\n          <div className=\"header-location\">\n            <div className=\"location\">\n              {weather.name}\n            </div>\n              <div\n                className=\"change-btn\"\n                onClick={() => handleSearchDisplay()}\n                style={{ transform: searchDisplay ? \"rotate(180deg)\" : \"rotate(0deg\" }}\n              >\n                <AiOutlineSwap />\n              </div>\n          </div>\n          <div\n            className=\"location-input\"\n            style={{ height: searchDisplay ? \"35px\" : \"0px\" }}\n          >\n            <input\n              value={input}\n              onChange={(e) => handleOnchange(e)}\n              onKeyPress={search}\n              placeholder=\"please enter city name or zipcode\"\n            />\n          </div>\n          <div className=\"header-time\">\n            <div className=\"month-day\">\n              <div className=\"month\">{months[date.getMonth()]}</div>\n              <div className=\"day\">{date.getDate()}</div>\n            </div>\n            <div className=\"week\">{weekday[date.getDay()]}</div>\n          </div>\n        </div>\n        {(typeof weather.main != \"undefined\") ? (\n          <div  className=\"weather-info\"\n                style={{ height: display ? \"400px\" : \"242.5px\" }}\n          >\n            <div className=\"main\">\n                <div className=\"main-logo\">\n                    <img src={`http://openweathermap.org/img/w/${weather.weather[0].icon}.png`} />\n                </div>\n                <div className=\"main-txt\">{weather.weather[0].main}</div>\n              </div>\n              <div className=\"tmp\">\n                <div className=\"now-tmp\">\n                  {Math.round((weather.main.temp * 9 / 5) + 32)}\n                  <sup>&deg;F</sup>\n                </div>\n              </div>\n              <div\n                className=\"more\"\n                style={{ transform: display ? \"rotate(90deg)\" : \"rotate(-90deg\" }}\n              >\n                <AiOutlineDoubleLeft onClick={() => handleDisplay()} />\n              </div>\n              <div className=\"details\">\n                    <div  className=\"detail\">\n                      <div className=\"icon\"><IoManOutline /></div>\n                      <div className=\"txt\">\n                        <div className=\"detail-title\">Feel Like</div>\n                        <div className=\"detail-value\">{Math.round((weather.main.feels_like * 9 / 5) + 32)}<sup>&deg;F</sup></div>\n                      </div>\n                    </div>\n                    <div  className=\"detail\">\n                      <div className=\"icon\"><RiWindyFill /></div>\n                      <div className=\"txt\">\n                        <div className=\"detail-title\">Wind</div>\n                        <div className=\"detail-value\">{`${Math.round(weather.wind.speed)}km/h`}</div>\n                      </div>\n                    </div>\n                    <div  className=\"detail\">\n                      <div className=\"icon\"><WiHumidity /></div>\n                      <div className=\"txt\">\n                        <div className=\"detail-title\">Humidity</div>\n                        <div className=\"detail-value\">{`${weather.main.humidity}%`}</div>\n                      </div>\n                    </div>\n                    <div  className=\"detail\">\n                      <div className=\"icon\"><AiFillEye /></div>\n                      <div className=\"txt\">\n                        <div className=\"detail-title\">Visibility</div>\n                        <div className=\"detail-value\">{`${weather.visibility}km`}</div>\n                      </div>\n                    </div>\n                    <div  className=\"detail\">\n                      <div className=\"icon\"><IoSpeedometer /></div>\n                      <div className=\"txt\">\n                        <div className=\"detail-title\">Pressure</div>\n                        <div className=\"detail-value\">{`${weather.main.pressure}hPa`}</div>\n                      </div>\n                    </div>\n                    <div  className=\"detail\">\n                      <div className=\"icon\"><RiSunCloudyFill /></div>\n                      <div className=\"txt\">\n                        <div className=\"detail-title\">Cloud</div>\n                        <div className=\"detail-value\">{`${weather.clouds.all}%`}</div>\n                      </div>\n                    </div>\n              </div>\n        </div>\n        ) : ('')}\n    </div>\n  );\n}\n\nexport default Weather;\n\n\n","/home/lin/phase5/My-Place-Frontend/my-place/src/Component/Container/Photo3D.js",["145","146","147"],"import React, {Component} from \"react\";\nimport {CloseCircleOutlined } from '@ant-design/icons';\n\nexport default class Photo3D extends Component {\n    state = {\n        lastX: \"\" , \n        lastY: \"\" ,\n        nowX: \"\", \n        nowY: \"\", \n        minX: \"\", \n        minY: \"\", \n    }\n\n    handleMouseDown = (e) => {\n        this.setState({\n            lastX: e.clientX,\n            lastY: e.clientY\n        })\n\n        console.log(this.state.lastX)\n     }\n \n     handleOnMouseMove = (e) => {\n         const {nowX, nowY, lastX, lastY, minX, minY} = this.state\n         this.setState({\n            nowX: e.clientX,\n            nowY: e.clientY,\n            minX: (nowX - lastX) * 0.2,\n            minY: (nowY - lastY) * 0.01,\n         })\n     } \n\n\n    render() {\n        const length = this.props.photos.length;\n        const deg = 360 / length\n        const {minX, minY} = this.state\n        return(\n            <div className=\"mian-view-card\">\n                {this.props.view\n                ?null\n                :<div className=\"view-card-page\" >\n                <CloseCircleOutlined className=\"view-btn\" style={{fontSize: '30px'}} onMouseDown={() => this.props.handleVeiew()}/>\n                <div className=\"view-card\" onMouseDown={(e) => this.handleMouseDown(e)}  onMouseMove={(e) => this.handleOnMouseMove(e)} style={{transform: `rotateX(${-minY}deg) rotateY(${-minX}deg)` , transition: '3s'}}>\n                {\n                    this.props.photos.map((photo, index) => {\n                        return<img className=\"view-card-photo\" src={photo.image} style={{transform: `rotateY(${index * deg}deg) translateZ(350px)`, transition: `1s ${(length - 1 - index) * 0.1}s`}} draggable = \"false\"\n                        key={index}   \n                        />\n                    })\n                }\n                </div>\n                </div>\n                }\n            </div>\n        )\n    }\n}","/home/lin/phase5/My-Place-Frontend/my-place/src/Component/Notes.js",["148","149","150","151"],"import React, { Component } from \"react\";\nimport { Select } from 'antd';\nimport Draggable from 'react-draggable'; \nimport { RiDeleteBin6Line } from \"react-icons/ri\";\nimport { FaRegEdit } from \"react-icons/fa\";\nimport { AiFillCloseSquare } from \"react-icons/ai\";\nimport { IoSave } from \"react-icons/io5\";\nimport NavBar from \"./NavBar\";\n\n\nconst { Option } = Select;\nexport default class Notes extends Component{\n\n    state = {\n        edit: false,\n        userTyping: \"\",\n        editTyping: \"\",\n        currentNote: {},\n        notes: [],\n        colors: '#FFCC00',\n    }\n    \n    componentDidMount() {\n        fetch(\"http://localhost:3000/notes\")\n        .then(res => res.json())\n        .then(notes => this.setState({notes: notes.notes }))\n      }\n\n\n    generatorNote = (text) => {\n        const maxWidth = window.innerWidth\n        const maxHeight = window.innerHeight\n        let randX = parseInt((maxWidth - 250) * Math.random() * 0.4)\n        let randY = parseInt((maxHeight - 350) * Math.random() * 0.5)\n        let color = this.state.colors\n        let note = {\n            user_id: this.props.loginUser.id,\n            text,\n            color,\n            y: randX,\n            x: randY\n        }\n        return note\n    }\n\n\n    addStikcy = (e) => {\n        e.preventDefault()\n        let newNote = this.generatorNote(e.target[1].value)\n        fetch(\"http://localhost:3000/notes\", {\n            method: \"POST\",\n            headers: {\n              \"Content-Type\": \"application/json\",\n            },\n            body: JSON.stringify(newNote),\n        })\n            .then(res => {\n                this.setState({\n                    userTyping: \"\",\n                    notes: [...this.state.notes, newNote]\n                })\n                this.componentDidMount()\n            })\n    }\n\n    deleteNote = (noteObj) => {\n        const updateStikcyObj = this.state.notes.filter(note => note.id !== noteObj.id )\n        fetch(`http://localhost:3000/notes/${noteObj.id}`, {\n            method: \"DELETE\",\n            headers: {\n              \"Content-Type\": \"application/json\",\n            },\n            body: JSON.stringify(updateStikcyObj),\n        })\n        this.setState({\n            notes: updateStikcyObj\n        })\n    }\n\n    handleSelectChange = (e) => {\n        this.setState({\n            colors: e.target.value\n        })\n    }\n\n    handleOnchange = (e) => {\n        this.setState({\n            userTyping: e.target.value\n        })\n    }\n\n    handleEditTypingChange = (e) => {\n        this.setState({\n            editTyping: e.target.value\n        })\n    }\n\n    handleEditChange = ( noteObj) => {\n        if(noteObj.id === this.state.currentNote.id){\n            this.setState({\n                edit: !this.state.edit,\n                editTyping: noteObj.text\n            })\n        }else {\n            this.setState({\n                edit: !this.state.edit,\n                currentNote: noteObj,\n                editTyping: noteObj.text\n            })\n        }\n    }\n    handleCancleEdit = () => {\n        this.setState({\n            edit: !this.state.edit,\n        })\n    } \n\n    \n    handleUpdateEdit = (noteObj) => {\n        fetch(`http://localhost:3000/notes/${noteObj.id}`, {\n            method: \"PATCH\",\n            headers: {\n              \"Content-Type\": \"application/json\",\n            },\n            body: JSON.stringify({\n                text: this.state.editTyping,\n            }),    \n        })\n        .then(res => {\n            this.componentDidMount()\n            this.handleCancleEdit()\n        })\n\n    }\n\n    handleOnStop = (e, v, noteObj) => {\n        console.log(`x:${v.x}, y:${v.y}, ${noteObj.id}, objX:${noteObj.x}, objY:${noteObj.y}`)\n            let newX = parseInt(noteObj.x) + v.x\n            let newY = parseInt(noteObj.y) + v.y\n            const {dragNot, currentNote} = this.state\n        console.log(typeof(newX), typeof(newY) )\n        console.log(`finalX:${newX}, finalY:${newY}`)\n        fetch(`http://localhost:3000/notes/${noteObj.id}`, {\n            method: \"PATCH\",\n            headers: {\n              \"Content-Type\": \"application/json\",\n            },\n            body: JSON.stringify({\n                x: newX,\n                y: newY\n            }),\n        })  \n            this.setState({\n                currentNote: {...noteObj, \"x\":newX, \"y\":newY}\n            })\n    }   \n\n    render() {\n        const {currentNote, editTyping} = this.state\n        const userNote = this.state.notes.filter(note => note.user_id === this.props.loginUser.id)\n        \n        return(\n            <div>\n                { Object.keys(this.props.loginUser).length > 0 \n                    ?<div className=\"note-page\">\n                            <div className=\"note-page-header\"></div>\n                            <NavBar loginUser={this.props.loginUser} handlehideMusic={this.props.handlehideMusic} handleLoignUser={this.props.handleLoignUser}/>\n                            <div className=\"note-page-container\">\n                                <form onSubmit={(e) => this.addStikcy(e)} className=\"note\">\n                                    <select className=\"selector\" defaultValue='Select color' style={{ width: 252, backgroundColor: `${this.state.colors}`, }} onChange={this.handleSelectChange}>\n                                    <option value='Select color' disabled>Select color</option>\n                                    <option style={{backgroundColor:`#96C2F1` }} value='#96C2F1'>Blue</option>\n                                    <option style={{backgroundColor:`#D5F1BB` }} value='#D5F1BB'>Green</option>\n                                    <option style={{backgroundColor:`#FFFF99` }} value='#FFFF99'>Yellow</option>\n                                    <option style={{backgroundColor:`#FFCC00` }} value='#FFCC00'>Orange</option>\n                                    </select> \n                                    <textarea placeholder=\"Wirte your thought here!\"\n                                    style={{backgroundColor: `${this.state.colors}`}} \n                                    value={this.state.userTyping}\n                                    onChange={(e) => this.handleOnchange(e)}></textarea>\n                                    <button style={{backgroundColor:`${this.state.colors}`}}>Post New</button>\n                                </form>\n                                {userNote.length > 0 ? userNote.map(note => {\n                                return<Draggable \n                                                cancel=\".btn\"\n                                                cancel={this.state.edit ? \".post\" : \".btn\"}\n                                                onStop={(e , v) => this.handleOnStop(e, v, note)}\n                                                    > \n                                                    <div className= \"post\" \n                                                    style={{backgroundColor:`${note.color}`, top:`${note.y}px`,\n                                                    left: `${note.x}px`}}\n                                                    key={note.id} \n                                                        >\n                                                        {this.state.edit\n                                                            ?<div className=\"btn\" style={{fontSize:'24px', color:'white', textAlign:'right', paddingBottom: '20px'}}>     \n                                                            <IoSave className=\"btn-edit\" onClick={() => this.handleUpdateEdit(currentNote)}/>\n                                                            <AiFillCloseSquare  className=\"btn-cancel\"  onClick={() => this.handleCancleEdit()} />\n                                                            </div>\n                                                            :<div className=\"btn\" style={{fontSize:'24px', color:'white', textAlign:'right', paddingBottom: '20px'}}>     \n                                                                    <FaRegEdit className=\"btn-edit\"  onClick={() => this.handleEditChange(note)}/>\n                                                                    <RiDeleteBin6Line className=\"btn-cancel\"  onClick={() => this.deleteNote(note)} />\n                                                            </div>\n                                                        }\n                                                        <pre  className=\"post-text\">{note.text}</pre> \n                                                    </div> \n                                                </Draggable> \n                                }) : null}                              \n                                {this.state.edit\n                                  ?<textarea className= \"edit-textarea\" \n                                  style={{backgroundColor:`${currentNote.color}`, top:`${parseInt(currentNote.y) + 60}px`,\n                                  left: `${parseInt(currentNote.x) - 0.5}px`}}\n                                  value={editTyping}\n                                  onChange={(e) => this.handleEditTypingChange(e)}\n                                      >     \n                                      <div className=\"btn\" style={{fontSize:'24px', color:'white', textAlign:'right', paddingBottom: '20px'}}>     \n                                      </div>\n                                  </textarea>\n                                  :null\n                                }\n                            </div>\n                        </div>\n                    :this.props.history.push('/')\n                }\n            </div>\n        )\n    }\n}","/home/lin/phase5/My-Place-Frontend/my-place/src/Component/Profile.js",["152","153","154","155","156","157","158","159"],"import React, { Component } from \"react\";\nimport { Upload, Input, Modal, Button, message } from 'antd'\nimport {  PlusOutlined } from '@ant-design/icons';\nimport { BsPeopleCircle } from \"react-icons/bs\";\nimport { GiSmartphone ,GiModernCity } from \"react-icons/gi\";\nimport { HiOutlineMail, HiOutlineLocationMarker } from \"react-icons/hi\";\nimport { RiLock2Line } from \"react-icons/ri\";\nimport { FiEye } from \"react-icons/fi\";\nimport ImgCrop from 'antd-img-crop';\nimport NavBar from \"./NavBar\";\n\n\nfunction getBase64(file) {\n    return new Promise((resolve, reject) => {\n      const reader = new FileReader();\n      reader.readAsDataURL(file);\n      reader.onload = () => resolve(reader.result);\n      reader.onerror = error => reject(error);\n    });\n  }\n\n\nexport default class Profile extends Component{ \n    state = {\n        about: true,\n        edit: false,\n        reset: false,\n        name: this.props.loginUser.name,\n        address: this.props.loginUser.address,\n        email: this.props.loginUser.email,\n        phone: this.props.loginUser.phone,\n        zipCode: this.props.loginUser.post_code,\n        newpassword: '',\n        confirmPassword: '',\n        viewPassword: false,\n        fileList: [],\n        upFiles: [], \n        previewVisible: false,\n        previewImage: '',\n        previewTitle: '',\n        users: [],\n        photos: []\n    }\n\n    componentDidMount() {\n        fetch(\"http://localhost:3000/users\")\n        .then(res => res.json())\n        .then(users => {\n            const userArr = users.filter(user => user.id === this.props.loginUser.id)\n            this.setState({users: userArr})\n        })\n        fetch(\"http://localhost:3000/photos\")\n        .then(res => res.json())\n        .then(photos => this.setState({photos}))\n    }\n\n   //change upload value\n   onChange = ({ target: { value } }) => {\n    this.setState({ value });\n  };\n\n  beforeUploadFile = (file) => {\n    const {upFiles} = this.state;\n    upFiles.push(file);\n    this.setState({upFiles: upFiles});\n\n  }\n\n  //handle Onchange of upload\n  handleChange = ({ fileList }) => this.setState({ fileList });\n\n  //handle cancel of upload\n  handleCancel = () => this.setState({ previewVisible: false });\n\n  //handle preview of uploadalbumName\n  handlePreview = async file => {\n    if (!file.url && !file.preview) {\n      file.preview = await getBase64(file.originFileObj);\n    }\n\n    this.setState({\n      previewImage: file.url || file.preview,\n      previewVisible: true,\n      previewTitle: file.name || file.url.substring(file.url.lastIndexOf('/') + 1),\n    });\n  };\n\n  handleViewPassword = () => {\n      this.setState({\n        viewPassword: !this.state.viewPassword\n      })\n  }\n\n  //handle submit upload\n  handleSubmit = () => {\n    const {upFiles} = this.state;\n    let formData = new FormData();\n    upFiles.forEach((file) => {\n      formData.append('img', file);\n    });\n    fetch(`http://localhost:3000/users/${this.props.loginUser.id}`, {\n      method: \"PATCH\",\n      body: formData\n    })\n    .then(res => res.json())\n    .then(() => {\n        message.success('Photo is uploaded')\n    })\n    this.setState({\n      upFiles: [],\n      fileList: []\n    })\n} \n\n\nhandleFormSubmit = () => {\n    const {name, address, email, phone, zipCode, users} = this.state\n\n    fetch(`http://localhost:3000/users/${this.props.loginUser.id}`, {\n        method: \"PATCH\",\n        headers: {\n          \"Content-Type\": \"application/json\",\n        },\n        body: JSON.stringify({\n            name: name,\n            address: address,\n            email: email,\n            phone: phone,\n            zipCode: zipCode,\n        }),\n    })\n    .then(res => {\n        message.success('Info is Submited')\n        this.componentDidMount()\n    })\n} \n\n\nhandleResetPassowrd = () => {\n    const {newpassword, confirmPassword, name, address, email, phone, zipCode} = this.state\n\n    if(newpassword === confirmPassword && newpassword !== '') {\n        fetch(`http://localhost:3000/users/${this.props.loginUser.id}`, {\n            method: \"PATCH\",\n            headers: {\n              \"Content-Type\": \"application/json\",\n            },\n            body: JSON.stringify({\n                password: newpassword,\n                name: name,\n                address: address,\n                email: email,\n                phone: phone,\n                zipCode: zipCode,\n            }),\n        })\n        .then(res => {\n            message.success('Password is changed')\n            this.componentDidMount()\n            this.setState({\n                newpassword: '',\n                confirmPassword: ''\n            })\n        })\n    }else {\n        message.error(\"Please Try Again\")\n    }\n} \n    handleAbout = () => {\n        this.setState({\n            about: true,\n            edit: false,\n            reset: false\n        })\n    }\n\n    handleEdit = () => {\n        this.setState({\n            about: false,\n            edit: true,\n            reset: false\n        })\n    }\n\n    handleRest = () => {\n        this.setState({\n            about: false,\n            edit: false,\n            reset: true\n        })\n    }\n\n\n    handleNameOnchange = (e) => {\n        this.setState({\n            name: e.target.value\n        })\n    }\n\n    handleAddressOnchange = (e) => {\n        this.setState({\n            address: e.target.value\n        })\n    }\n    \n    handleEmailOnchange = (e) => {\n        this.setState({\n            email: e.target.value\n        })\n    }\n\n    handlePhoneOnchange = (e) => {\n        this.setState({\n            phone: e.target.value\n        })\n    }\n\n    handleZipCodeOnchange = (e) => {\n        this.setState({\n            zipCode: e.target.value\n        })\n    }\n\n    handleNewPassword = (e) => {\n        this.setState({\n            newpassword: e.target.value\n        })\n    }\n\n    handleConfirmPassword = (e) => {\n        this.setState({\n            confirmPassword: e.target.value\n        })\n    }\n\n\n\n    render() {\n        const { fileList, previewImage, previewTitle, previewVisible, users } = this.state\n        const userPhoto = this.state.photos.filter(photo => photo.user_id === this.props.loginUser.id)\n        console={users}\n        return(\n            <div>\n                 {\n                 Object.keys(this.props.loginUser).length > 0\n                 ?<div className=\"profile-page\">\n                     <div className=\"profile-page-header\">\n                        {userPhoto.slice(-12).map(photo => {\n                            const rotate = Math.floor(Math.random() * 40 - 20)\n                            return <img\n                                    key={photo.id}\n                                    className=\"profile-page-header-img\"\n                                    key={photo.id}\n                                    style={{transform: `rotate(${rotate}deg)`}}\n                                    src={photo.image} \n                                    />\n                            })\n                        }\n                     </div>\n                    <NavBar loginUser={this.props.loginUser} handlehideMusic={this.props.handlehideMusic} handleLoignUser={this.props.handleLoignUser}/>\n                    <div className=\"sub-nav\">\n                            {users.map(user => {\n                                if(user.img !== ''){\n                                    return <img  key={user.id} className=\"sub-nav-img\" src={user.img} />\n                                             \n                                }else{\n                                    return <div></div>\n                                } \n                                })\n                            }\n                            <li className=\"about-btn\"  onClick={() => this.handleAbout()}>About</li>\n                            <li className=\"edit\" onClick={() => this.handleEdit()}>Edit Profile</li>\n                            <li className=\"reset\" onClick={() => this.handleRest()}>Change Password</li>  \n                    </div>\n\n                    {this.state.about\n                    ?<div className=\"about\">\n                        {users.map(user => {\n                           if(user.img !== ''){\n                            return <img key={user.id} src={user.img} className=\"about-img\" /> \n                           }else{\n                            return <img src='https://tanzolymp.com/images/default-non-user-no-photo-1.jpg' /> \n                           } \n                        })\n                        }\n                        <div className=\"about-img-div\"></div>\n                        <div className=\"about-img-div-div\"></div>\n                        <div className=\"about-img-div-div-div\"></div>\n                            {users.map(user => {\n                                return<div key={user.id}> \n                                    <div className=\"about-name\" ><BsPeopleCircle style={{fontSize: '40', marginBottom: \"5\"}}/> { user.name.toUpperCase() }</div>\n                                    <div className=\"about-icon\">\n                                        <div className=\"about-phone\" > <GiSmartphone style={{fontSize: '24', marginBottom: \"5\"}} /> Phone: { users.map(user => `(${user.phone.slice(0, 3)}) ${user.phone.slice(3, 6)}-${user.phone.slice(6, 10)}`) }</div>\n                                        <div className=\"about-email\"> <HiOutlineMail style={{fontSize: '24', marginBottom: \"5\", marginRight: '5px'}} />Email: { user.email.toUpperCase() }</div>\n                                        <div className=\"about-add\"> <HiOutlineLocationMarker style={{fontSize: '24', marginBottom: \"5\", marginRight: '5px'}} />Address: { user.address.toUpperCase() }</div>\n                                        <div className=\"about-zip\"> <GiModernCity style={{fontSize: '24', marginBottom: \"5\", marginRight: '5px'}} /> Zip Code: { user.post_code }</div>\n                                    </div>\n                                </div>\n                                })\n                            }\n                    </div>\n                    :null\n                    }\n                    {this.state.edit\n                        ?<div className=\"profile-page-upload\">\n                                <Upload\n                                    listType=\"picture-card\"\n                                    fileList={fileList}\n                                    beforeUpload={this.beforeUploadFile}\n                                    onPreview={this.handlePreview}\n                                    onChange={this.handleChange}\n                                    multiple={false}\n                                >\n                                    <PlusOutlined />\n                                    <div style={{ marginTop: 8}}>Upload</div>\n                                </Upload>\n                                <Modal\n                                    visible={previewVisible}\n                                    title={previewTitle}\n                                    footer={null}\n                                    onCancel={this.handleCancel}\n                                    >\n                                    <img\n                                        src={previewImage}\n                                        alt={previewTitle}\n                                        style={{ width: '100%', height: '100%'}}\n                                    />\n                                </Modal>\n                            <Button style={{marginTop: '10px'}} onClick={() => this.handleSubmit()} type='primary' >Upload</Button>\n                            <div className=\"picture-card-div\"></div>\n                            <div className=\"edit\" >\n                                <Input\n                                style={{width: '400px'}}\n                                addonBefore=\"Name: \"\n                                value={this.state.name}\n                                prefix={<BsPeopleCircle style={{marginRight: '5px'}}/>}\n                                onChange={(e) => this.handleNameOnchange(e)}    \n                                >\n                                </Input>\n                                <Input\n                                style={{width: '400px'}}\n                                addonBefore=\"Address: \"\n                                value={this.state.address}\n                                prefix={<GiSmartphone style={{marginRight: '5px'}}/>}\n                                onChange={(e) => this.handleAddressOnchange(e)}\n                                >\n                                </Input>\n                                <Input\n                                style={{width: '400px'}}\n                                addonBefore=\"Email: \"\n                                value={this.state.email}\n                                prefix={<HiOutlineMail style={{marginRight: '5px'}}/>}\n                                onChange={(e) => this.handleEmailOnchange(e)}\n                                >\n                                </Input>\n                                <Input\n                                style={{width: '400px'}}\n                                addonBefore=\"Phone: \"\n                                value={this.state.phone}\n                                prefix={<HiOutlineLocationMarker style={{marginRight: '5px'}}/>}\n                                onChange={(e) => this.handlePhoneOnchange(e)}\n                                >\n                                </Input>\n                                <Input\n                                style={{width: '400px'}}\n                                addonBefore=\"Zip Code: \"\n                                value={this.state.zipCode}\n                                prefix={<GiModernCity style={{marginRight: '5px'}}/>}\n                                onChange={(e) => this.handleZipCodeOnchange(e)}\n                                >\n                                </Input>\n                                <Button style={{marginLeft: '150px',}}  type='primary'  onClick={() => this.handleFormSubmit()}>Submit</Button>\n                            </div>\n                        </div> \n                        :null \n                    }\n                    {this.state.reset\n                        ? <div className=\"rest-passowrd-page\">\n                                <Input\n                                style={{width: '400px'}}\n                                addonBefore=\"New password: \"\n                                value={this.state.newpassword}\n                                prefix={<RiLock2Line style={{marginRight: '5px'}}/>}\n                                onChange={(e) => this.handleNewPassword(e)}\n                                type={this.state.viewPassword? \"text\" :\"password\"}\n                                >\n                                </Input>\n                                <FiEye className=\"rest-view-password\" onClick={() => this.handleViewPassword()}/>\n                                <div className=\"rest-passowrd-warning\">\n                                <li className={this.state.newpassword.length >= 8? 'password-match' : 'password-not-match' }>Must contain 8 or more characters</li>\n                                <li className={this.state.newpassword.match(/\\d+/g) ? 'password-match' : 'password-not-match' }>Must contain a digit</li>\n                                <li className={this.state.newpassword.match(/[a-z]/)? 'password-match' : 'password-not-match' }>Must contain a lower case character</li>\n                                <li className={this.state.newpassword.match(/[A-Z]/)? 'password-match' : 'password-not-match' }>Must contain an upper case character</li>\n                                </div>\n                                <Input\n                                style={{width: '400px', marginBottom: '10px'}}\n                                addonBefore=\"Confirm Password: \"\n                                value={this.state.confirmPassword}\n                                prefix={<RiLock2Line style={{marginRight: '5px'}}/>}\n                                type={this.state.viewPassword? \"text\" :\"password\"}\n                                onChange={(e) => this.handleConfirmPassword(e)}\n                                >\n                                </Input>\n                                <FiEye className=\"rest-view-password\" onClick={() => this.handleViewPassword()}/>\n                                {this.state.newpassword !== this.state.confirmPassword\n                                ? <p className=\"password-not-match\">The Confirm password confirmation does not match</p>\n                                : null\n                                }\n                                <div style={{height:'50px   '}}></div>\n                                <Button style={{marginLeft: '10px', marginTop:\"30px\"}}  type='primary'  onClick={() => this.handleResetPassowrd()}>Submit</Button>\n                        </div>\n                        :null\n                    }    \n                 </div>\n                 :this.props.history.push('/')\n                }\n            </div>\n        )\n    }\n}",{"ruleId":"160","replacedBy":"161"},{"ruleId":"162","replacedBy":"163"},{"ruleId":"164","severity":1,"message":"165","line":7,"column":8,"nodeType":"166","messageId":"167","endLine":7,"endColumn":14},{"ruleId":"168","severity":1,"message":"169","line":99,"column":119,"nodeType":"170","messageId":"171","endLine":99,"endColumn":152},{"ruleId":"164","severity":1,"message":"172","line":1,"column":27,"nodeType":"166","messageId":"167","endLine":1,"endColumn":36},{"ruleId":"164","severity":1,"message":"173","line":8,"column":9,"nodeType":"166","messageId":"167","endLine":8,"endColumn":13},{"ruleId":"174","severity":1,"message":"175","line":75,"column":17,"nodeType":"176","endLine":77,"endColumn":19},{"ruleId":"164","severity":1,"message":"177","line":8,"column":15,"nodeType":"166","messageId":"167","endLine":8,"endColumn":23},{"ruleId":"164","severity":1,"message":"178","line":9,"column":17,"nodeType":"166","messageId":"167","endLine":9,"endColumn":27},{"ruleId":"164","severity":1,"message":"179","line":4,"column":8,"nodeType":"166","messageId":"167","endLine":4,"endColumn":9},{"ruleId":"180","severity":1,"message":"181","line":141,"column":13,"nodeType":"182","messageId":"183","endLine":141,"endColumn":15},{"ruleId":"180","severity":1,"message":"181","line":141,"column":31,"nodeType":"182","messageId":"183","endLine":141,"endColumn":33},{"ruleId":"180","severity":1,"message":"181","line":146,"column":13,"nodeType":"182","messageId":"183","endLine":146,"endColumn":15},{"ruleId":"180","severity":1,"message":"181","line":146,"column":33,"nodeType":"182","messageId":"183","endLine":146,"endColumn":35},{"ruleId":"174","severity":1,"message":"175","line":682,"column":28,"nodeType":"176","endLine":682,"endColumn":58},{"ruleId":"174","severity":1,"message":"175","line":683,"column":28,"nodeType":"176","endLine":683,"endColumn":42},{"ruleId":"164","severity":1,"message":"184","line":2,"column":76,"nodeType":"166","messageId":"167","endLine":2,"endColumn":82},{"ruleId":"164","severity":1,"message":"185","line":8,"column":10,"nodeType":"166","messageId":"167","endLine":8,"endColumn":19},{"ruleId":"164","severity":1,"message":"186","line":10,"column":9,"nodeType":"166","messageId":"167","endLine":10,"endColumn":15},{"ruleId":"180","severity":1,"message":"181","line":100,"column":83,"nodeType":"182","messageId":"183","endLine":100,"endColumn":85},{"ruleId":"180","severity":1,"message":"181","line":150,"column":20,"nodeType":"182","messageId":"183","endLine":150,"endColumn":22},{"ruleId":"168","severity":1,"message":"169","line":249,"column":37,"nodeType":"170","messageId":"171","endLine":249,"endColumn":51},{"ruleId":"164","severity":1,"message":"187","line":44,"column":13,"nodeType":"166","messageId":"167","endLine":44,"endColumn":23},{"ruleId":"164","severity":1,"message":"188","line":1,"column":17,"nodeType":"166","messageId":"167","endLine":1,"endColumn":25},{"ruleId":"164","severity":1,"message":"189","line":4,"column":25,"nodeType":"166","messageId":"167","endLine":4,"endColumn":44},{"ruleId":"164","severity":1,"message":"173","line":4,"column":9,"nodeType":"166","messageId":"167","endLine":4,"endColumn":13},{"ruleId":"180","severity":1,"message":"181","line":8,"column":68,"nodeType":"182","messageId":"183","endLine":8,"endColumn":70},{"ruleId":"164","severity":1,"message":"186","line":6,"column":9,"nodeType":"166","messageId":"167","endLine":6,"endColumn":15},{"ruleId":"180","severity":1,"message":"181","line":35,"column":77,"nodeType":"182","messageId":"183","endLine":35,"endColumn":79},{"ruleId":"168","severity":1,"message":"169","line":47,"column":33,"nodeType":"170","messageId":"171","endLine":47,"endColumn":47},{"ruleId":"180","severity":1,"message":"181","line":32,"column":26,"nodeType":"182","messageId":"183","endLine":32,"endColumn":28},{"ruleId":"174","severity":1,"message":"175","line":102,"column":21,"nodeType":"176","endLine":102,"endColumn":99},{"ruleId":"164","severity":1,"message":"190","line":24,"column":43,"nodeType":"166","messageId":"167","endLine":24,"endColumn":47},{"ruleId":"164","severity":1,"message":"191","line":24,"column":49,"nodeType":"166","messageId":"167","endLine":24,"endColumn":53},{"ruleId":"174","severity":1,"message":"175","line":47,"column":31,"nodeType":"176","endLine":49,"endColumn":27},{"ruleId":"164","severity":1,"message":"186","line":11,"column":9,"nodeType":"166","messageId":"167","endLine":11,"endColumn":15},{"ruleId":"164","severity":1,"message":"192","line":140,"column":20,"nodeType":"166","messageId":"167","endLine":140,"endColumn":27},{"ruleId":"164","severity":1,"message":"193","line":140,"column":29,"nodeType":"166","messageId":"167","endLine":140,"endColumn":40},{"ruleId":"168","severity":1,"message":"169","line":186,"column":49,"nodeType":"170","messageId":"171","endLine":186,"endColumn":92},{"ruleId":"164","severity":1,"message":"194","line":9,"column":8,"nodeType":"166","messageId":"167","endLine":9,"endColumn":15},{"ruleId":"164","severity":1,"message":"195","line":117,"column":50,"nodeType":"166","messageId":"167","endLine":117,"endColumn":55},{"ruleId":"160","severity":1,"message":"196","line":241,"column":9,"nodeType":"166","messageId":"197","endLine":241,"endColumn":16},{"ruleId":"174","severity":1,"message":"175","line":250,"column":36,"nodeType":"176","endLine":256,"endColumn":39},{"ruleId":"168","severity":1,"message":"169","line":253,"column":37,"nodeType":"170","messageId":"171","endLine":253,"endColumn":51},{"ruleId":"174","severity":1,"message":"175","line":264,"column":44,"nodeType":"176","endLine":264,"endColumn":105},{"ruleId":"174","severity":1,"message":"175","line":280,"column":36,"nodeType":"176","endLine":280,"endColumn":94},{"ruleId":"174","severity":1,"message":"175","line":282,"column":36,"nodeType":"176","endLine":282,"endColumn":110},"no-native-reassign",["198"],"no-negated-in-lhs",["199"],"no-unused-vars","'NavBar' is defined but never used.","Identifier","unusedVar","react/jsx-no-duplicate-props","No duplicate props allowed","JSXAttribute","noDuplicateProps","'useEffect' is defined but never used.","'Meta' is assigned a value but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","'setTitle' is assigned a value but never used.","'setContent' is assigned a value but never used.","'_' is defined but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","'Switch' is defined but never used.","'Translate' is defined but never used.","'Option' is assigned a value but never used.","'mimeString' is assigned a value but never used.","'useState' is defined but never used.","'CloseCircleOutlined' is defined but never used.","'minX' is assigned a value but never used.","'minY' is assigned a value but never used.","'dragNot' is assigned a value but never used.","'currentNote' is assigned a value but never used.","'ImgCrop' is defined but never used.","'users' is assigned a value but never used.","Read-only global 'console' should not be modified.","nativeReassign","no-global-assign","no-unsafe-negation"]