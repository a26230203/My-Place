{"ast":null,"code":"var _jsxFileName = \"/home/lin/phase5/My-Place-Frontend/my-place/src/Component/Album.js\";\nimport React from \"react\";\nimport { Form, Button, Image, Input, message } from 'antd';\nimport Navbar from './NavBar';\nimport PhotoList from \"./Container/PhotoList\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default class Album extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      photos: [],\n      album: [],\n      albumForm: false,\n      albumName: ''\n    };\n\n    this.handlClickPhoto = () => {\n      this.props.history.push('/photo');\n    };\n\n    this.handlClickAlbum = () => {\n      this.props.history.push('/album');\n    };\n\n    this.AddPhotoToAlbum = (photoObj, albumId) => {\n      console.log(photoObj);\n      console.log(albumId);\n\n      if (albumId == \"\") {\n        this.handleConfirm();\n      } else {\n        fetch(`http://localhost:3000/photos/${photoObj.id}`, {\n          method: \"PATCH\",\n          headers: {\n            \"Content-Type\": \"application/json\"\n          },\n          body: JSON.stringify({\n            album_id: albumId\n          })\n        }).then(res => {\n          message.success('Photo added to album');\n        });\n      }\n    };\n\n    this.handleCreatalbum = () => {\n      this.setState({\n        albumForm: !this.state.albumForm\n      });\n    };\n\n    this.handleConfirm = () => {\n      const newAlbun = {\n        name: this.state.albumName,\n        user_id: this.props.loginUser.id\n      };\n      fetch(\"http://localhost:3000/albums\", {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify(newAlbun)\n      }).then(res => res.json());\n      this.handleCreatalbum();\n      this.componentDidMount();\n    };\n  }\n\n  componentDidMount() {\n    fetch(\"http://localhost:3000/photos\").then(res => res.json()).then(photos => this.setState({\n      photos\n    }));\n    fetch(\"http://localhost:3000/albums\").then(res => res.json()).then(album => this.setState({\n      album\n    }));\n  } //go to photo route\n\n\n  render() {\n    const {\n      previewVisible,\n      previewImage,\n      fileList,\n      previewTitle\n    } = this.state;\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"photo\",\n      children: Object.keys(this.props.loginUser).length > 0 ? /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(Navbar, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 91,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"photo-subnav\",\n          children: [/*#__PURE__*/_jsxDEV(\"li\", {\n            onClick: () => this.handlClickPhoto(),\n            children: \"Photos\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 93,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n            onClick: () => this.handlClickAlbum(),\n            children: \"Album\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 94,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 92,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"photo-btn\",\n          children: /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => this.handleCreatalbum(),\n            children: \"Create Album\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 98,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 96,\n          columnNumber: 13\n        }, this), this.state.albumForm ? /*#__PURE__*/_jsxDEV(Form, {\n          children: [/*#__PURE__*/_jsxDEV(Input, {\n            addonBefore: \"Album Title:\",\n            style: {\n              width: '500px'\n            },\n            value: this.state.albumName,\n            onChange: e => this.handleAlbumName(e)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 102,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            type: \"primary\",\n            shape: \"round\",\n            onClick: () => this.handleConfirm(),\n            children: \"Confirm\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 106,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            type: \"primary\",\n            shape: \"round\",\n            onClick: () => this.handleConfirm(),\n            children: \"Cancel\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 107,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 101,\n          columnNumber: 14\n        }, this) : null]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 12\n      }, this) : this.props.history.push('/')\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 7\n    }, this);\n  }\n\n}","map":{"version":3,"sources":["/home/lin/phase5/My-Place-Frontend/my-place/src/Component/Album.js"],"names":["React","Form","Button","Image","Input","message","Navbar","PhotoList","Album","Component","state","photos","album","albumForm","albumName","handlClickPhoto","props","history","push","handlClickAlbum","AddPhotoToAlbum","photoObj","albumId","console","log","handleConfirm","fetch","id","method","headers","body","JSON","stringify","album_id","then","res","success","handleCreatalbum","setState","newAlbun","name","user_id","loginUser","json","componentDidMount","render","previewVisible","previewImage","fileList","previewTitle","Object","keys","length","width","e","handleAlbumName"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport {  Form, Button, Image, Input, message } from 'antd'\nimport Navbar from './NavBar'\nimport PhotoList from \"./Container/PhotoList\";\n\n\nexport default class Album extends React.Component {\n\n  state = {\n    photos: [],\n    album: [],\n    albumForm: false,\n    albumName: '',\n    }\n    componentDidMount() {\n      fetch(\"http://localhost:3000/photos\")\n      .then(res => res.json())\n      .then(photos => this.setState({photos}))\n\n      fetch(\"http://localhost:3000/albums\")\n      .then(res => res.json())\n      .then(album => this.setState({album}))\n    }\n\n    //go to photo route\n    handlClickPhoto = () => {\n      this.props.history.push('/photo')\n    }\n\n\n    //go to album route\n    handlClickAlbum = () => {\n      this.props.history.push('/album')\n    }\n\n    //Add photo to album\n    AddPhotoToAlbum = (photoObj, albumId) => {\n        console.log(photoObj);\n        console.log(albumId);\n        if(albumId == \"\") {\n          this.handleConfirm()\n        }else{\n            fetch(`http://localhost:3000/photos/${photoObj.id}`, {\n            method: \"PATCH\",\n            headers: {\n              \"Content-Type\": \"application/json\",\n            },\n            body: JSON.stringify({\n              album_id: albumId\n            }),\n          })\n            .then(res => {\n                message.success('Photo added to album');\n            })\n        }\n    }\n\n    //Display album form\n    handleCreatalbum = () => {\n      this.setState({\n        albumForm : !this.state.albumForm\n      })\n    }\n\n    //Create ablum\n    handleConfirm = () => {\n      const newAlbun ={\n        name: this.state.albumName,\n        user_id: this.props.loginUser.id\n      }\n      fetch(\"http://localhost:3000/albums\", {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\",\n        },\n        body: JSON.stringify(newAlbun),\n      })\n      .then(res => res.json())\n      this.handleCreatalbum()\n      this.componentDidMount()\n    }\n\n\n\n    render() {\n      const { previewVisible, previewImage, fileList, previewTitle } = this.state;\n      return (\n      <div className=\"photo\">\n        { Object.keys(this.props.loginUser).length > 0 \n          ?<div>\n            <Navbar />\n            <div className=\"photo-subnav\">\n                <li onClick={() => this.handlClickPhoto()}>Photos</li>\n                <li onClick={() => this.handlClickAlbum()}>Album</li>\n            </div>\n            <div className=\"photo-btn\">\n\n              <button onClick={() => this.handleCreatalbum()}>Create Album</button>\n            </div>\n            {this.state.albumForm\n            ?<Form>\n              <Input addonBefore=\"Album Title:\" \n              style={{width: '500px'}} \n              value={this.state.albumName}\n              onChange={(e) => this.handleAlbumName(e)}/>\n              <Button type=\"primary\" shape=\"round\" onClick={() => this.handleConfirm()}>Confirm</Button>\n              <Button type=\"primary\" shape=\"round\" onClick={() => this.handleConfirm()}>Cancel</Button>\n            </Form>\n            :null\n          }\n\n          </div>\n          :this.props.history.push('/')\n        }\n      </div>\n      )\n    }\n  }"]},"metadata":{},"sourceType":"module"}