{"ast":null,"code":"var _jsxFileName = \"/home/lin/phase5/My-Place-Frontend/my-place/src/Component/Notes.js\";\nimport React, { Component } from \"react\";\nimport { Select } from 'antd';\nimport Draggable from 'react-draggable';\nimport { RiDeleteBin6Line } from \"react-icons/ri\";\nimport { FaRegEdit } from \"react-icons/fa\";\nimport { AiFillCloseSquare } from \"react-icons/ai\";\nimport { IoSave } from \"react-icons/io5\";\nimport NavBar from \"./NavBar\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst {\n  Option\n} = Select;\nexport default class Notes extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      edit: false,\n      userTyping: \"\",\n      editTyping: \"\",\n      currentNote: {},\n      dragNot: [],\n      notes: [],\n      colors: '#FFCC00'\n    };\n\n    this.generatorNote = text => {\n      const maxWidth = window.innerWidth;\n      const maxHeight = window.innerHeight;\n      let randX = parseInt((maxWidth - 250) * Math.random() * 0.4);\n      let randY = parseInt((maxHeight - 350) * Math.random() * 0.5);\n      let color = this.state.colors;\n      let note = {\n        user_id: this.props.loginUser.id,\n        text,\n        color,\n        y: randX,\n        x: randY\n      };\n      return note;\n    };\n\n    this.addStikcy = e => {\n      e.preventDefault();\n      let newNote = this.generatorNote(e.target[1].value);\n      fetch(\"http://localhost:3000/notes\", {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify(newNote)\n      }).then(res => {\n        this.setState({\n          userTyping: \"\",\n          notes: [...this.state.notes, newNote]\n        });\n        this.componentDidMount();\n      });\n    };\n\n    this.deleteNote = noteObj => {\n      const updateStikcyObj = this.state.notes.filter(note => note.id !== noteObj.id);\n      fetch(`http://localhost:3000/notes/${noteObj.id}`, {\n        method: \"DELETE\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify(updateStikcyObj)\n      });\n      this.setState({\n        notes: updateStikcyObj\n      });\n    };\n\n    this.handleSelectChange = e => {\n      this.setState({\n        colors: e.target.value\n      });\n    };\n\n    this.handleOnchange = e => {\n      this.setState({\n        userTyping: e.target.value\n      });\n    };\n\n    this.handleEditTypingChange = e => {\n      this.setState({\n        editTyping: e.target.value\n      });\n    };\n\n    this.handleEditChange = noteObj => {\n      this.setState({\n        edit: !this.state.edit,\n        currentNote: noteObj,\n        editTyping: noteObj.text\n      });\n    };\n\n    this.handleCancleEdit = () => {\n      this.setState({\n        edit: !this.state.edit\n      });\n    };\n\n    this.handleUpdateEdit = noteObj => {\n      fetch(`http://localhost:3000/notes/${noteObj.id}`, {\n        method: \"PATCH\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify({\n          text: this.state.editTyping\n        })\n      }).then(res => res.json()).then(() => {\n        this.componentDidMount();\n        this.handleCancleEdit();\n      });\n    };\n\n    this.handleOnStop = (e, v, noteObj) => {\n      console.log(`x:${v.x}, y:${v.y}, ${noteObj.id}, objX:${noteObj.x}, objY:${noteObj.y}`);\n      let newX = parseInt(noteObj.x) + v.x;\n      let newY = parseInt(noteObj.y) + v.y;\n      const {\n        dragNot,\n        currentNote\n      } = this.state;\n      console.log(typeof newX, typeof newY);\n      console.log(`finalX:${newX}, finalY:${newY}`);\n      fetch(`http://localhost:3000/notes/${noteObj.id}`, {\n        method: \"PATCH\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify({\n          x: newX,\n          y: newY\n        })\n      });\n      this.setState({\n        currentNote: { ...noteObj,\n          \"x\": newX,\n          \"y\": newY\n        }\n      });\n\n      if (dragNot.length > 0) {\n        const updateDragNote = dragNot.filter(note => note.id !== currentNote.id);\n        updateDragNote.push(currentNote);\n        this.setState({\n          dragNot: updateDragNote\n        });\n      } else {\n        if (currentNote.length > 0) {\n          dragNot.push(currentNote);\n          this.setState({\n            dragNot: dragNot\n          });\n        }\n      }\n    };\n  }\n\n  componentDidMount() {\n    fetch(\"http://localhost:3000/notes\").then(res => res.json()).then(notes => this.setState({\n      notes: notes.notes\n    }));\n  }\n\n  render() {\n    const {\n      currentNote,\n      editTyping,\n      dragNot\n    } = this.state;\n    console.log(dragNot);\n    console.log(currentNote);\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: Object.keys(this.props.loginUser).length > 0 ? /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"note-page\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"note-page-header\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 174,\n          columnNumber: 29\n        }, this), /*#__PURE__*/_jsxDEV(NavBar, {\n          loginUser: this.props.loginUser,\n          handlehideMusic: this.props.handlehideMusic\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 175,\n          columnNumber: 29\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"note-page-container\",\n          children: [/*#__PURE__*/_jsxDEV(\"form\", {\n            onSubmit: e => this.addStikcy(e),\n            className: \"note\",\n            children: [/*#__PURE__*/_jsxDEV(\"select\", {\n              className: \"selector\",\n              defaultValue: \"Select color\",\n              style: {\n                width: 252,\n                backgroundColor: `${this.state.colors}`\n              },\n              onChange: this.handleSelectChange,\n              children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                value: \"Select color\",\n                disabled: true,\n                children: \"Select color\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 179,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                style: {\n                  backgroundColor: `#96C2F1`\n                },\n                value: \"#96C2F1\",\n                children: \"Blue\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 180,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                style: {\n                  backgroundColor: `#D5F1BB`\n                },\n                value: \"#D5F1BB\",\n                children: \"Green\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 181,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                style: {\n                  backgroundColor: `#FFFF99`\n                },\n                value: \"#FFFF99\",\n                children: \"Yellow\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 182,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                style: {\n                  backgroundColor: `#FFCC00`\n                },\n                value: \"#FFCC00\",\n                children: \"Orange\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 183,\n                columnNumber: 37\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 178,\n              columnNumber: 37\n            }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n              placeholder: \"Wirte your thought here!\",\n              style: {\n                backgroundColor: `${this.state.colors}`\n              },\n              value: this.state.userTyping,\n              onChange: e => this.handleOnchange(e)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 186,\n              columnNumber: 37\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              style: {\n                backgroundColor: `${this.state.colors}`\n              },\n              children: \"Post New\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 190,\n              columnNumber: 37\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 177,\n            columnNumber: 33\n          }, this), this.state.notes.length > 0 ? this.state.notes.map(note => {\n            return /*#__PURE__*/_jsxDEV(Draggable, {\n              cancel: \".btn\",\n              cancel: this.state.edit ? \".post\" : \".btn\",\n              onStop: (e, v) => this.handleOnStop(e, v, note),\n              children: /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"post\",\n                style: {\n                  backgroundColor: `${note.color}`,\n                  top: `${note.y}px`,\n                  left: `${note.x}px`\n                },\n                children: [this.state.edit ? /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"btn\",\n                  style: {\n                    fontSize: '24px',\n                    color: 'white',\n                    textAlign: 'right',\n                    paddingBottom: '20px'\n                  },\n                  children: [/*#__PURE__*/_jsxDEV(IoSave, {\n                    className: \"btn-edit\",\n                    onClick: () => this.handleUpdateEdit(currentNote)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 205,\n                    columnNumber: 61\n                  }, this), /*#__PURE__*/_jsxDEV(AiFillCloseSquare, {\n                    className: \"btn-cancel\",\n                    onClick: () => this.handleCancleEdit()\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 206,\n                    columnNumber: 61\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 204,\n                  columnNumber: 62\n                }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"btn\",\n                  style: {\n                    fontSize: '24px',\n                    color: 'white',\n                    textAlign: 'right',\n                    paddingBottom: '20px'\n                  },\n                  children: [/*#__PURE__*/_jsxDEV(FaRegEdit, {\n                    className: \"btn-edit\",\n                    onClick: () => this.handleEditChange(note)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 209,\n                    columnNumber: 69\n                  }, this), /*#__PURE__*/_jsxDEV(RiDeleteBin6Line, {\n                    className: \"btn-cancel\",\n                    onClick: () => this.deleteNote(note)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 210,\n                    columnNumber: 69\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 208,\n                  columnNumber: 62\n                }, this), /*#__PURE__*/_jsxDEV(\"pre\", {\n                  className: \"post-text\",\n                  children: note.text\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 213,\n                  columnNumber: 57\n                }, this)]\n              }, note.id, true, {\n                fileName: _jsxFileName,\n                lineNumber: 198,\n                columnNumber: 53\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 193,\n              columnNumber: 39\n            }, this);\n          }) : null, this.state.edit ? /*#__PURE__*/_jsxDEV(\"textarea\", {\n            className: \"edit-textarea\",\n            style: {\n              backgroundColor: `${currentNote.color}`,\n              top: `${parseInt(currentNote.y) + 60}px`,\n              left: `${parseInt(currentNote.x) - 0.5}px`\n            },\n            value: editTyping,\n            onChange: e => this.handleEditTypingChange(e),\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"btn\",\n              style: {\n                fontSize: '24px',\n                color: 'white',\n                textAlign: 'right',\n                paddingBottom: '20px'\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 224,\n              columnNumber: 39\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 218,\n            columnNumber: 36\n          }, this) : null]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 176,\n          columnNumber: 29\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 173,\n        columnNumber: 22\n      }, this) : this.props.history.push('/')\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 171,\n      columnNumber: 13\n    }, this);\n  }\n\n}","map":{"version":3,"sources":["/home/lin/phase5/My-Place-Frontend/my-place/src/Component/Notes.js"],"names":["React","Component","Select","Draggable","RiDeleteBin6Line","FaRegEdit","AiFillCloseSquare","IoSave","NavBar","Option","Notes","state","edit","userTyping","editTyping","currentNote","dragNot","notes","colors","generatorNote","text","maxWidth","window","innerWidth","maxHeight","innerHeight","randX","parseInt","Math","random","randY","color","note","user_id","props","loginUser","id","y","x","addStikcy","e","preventDefault","newNote","target","value","fetch","method","headers","body","JSON","stringify","then","res","setState","componentDidMount","deleteNote","noteObj","updateStikcyObj","filter","handleSelectChange","handleOnchange","handleEditTypingChange","handleEditChange","handleCancleEdit","handleUpdateEdit","json","handleOnStop","v","console","log","newX","newY","length","updateDragNote","push","render","Object","keys","handlehideMusic","width","backgroundColor","map","top","left","fontSize","textAlign","paddingBottom","history"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport { Select } from 'antd';\nimport Draggable from 'react-draggable'; \nimport { RiDeleteBin6Line } from \"react-icons/ri\";\nimport { FaRegEdit } from \"react-icons/fa\";\nimport { AiFillCloseSquare } from \"react-icons/ai\";\nimport { IoSave } from \"react-icons/io5\";\nimport NavBar from \"./NavBar\";\n\n\nconst { Option } = Select;\nexport default class Notes extends Component{\n\n    state = {\n        edit: false,\n        userTyping: \"\",\n        editTyping: \"\",\n        currentNote: {},\n        dragNot: [],\n        notes: [],\n        colors: '#FFCC00',\n    }\n    \n    componentDidMount() {\n        fetch(\"http://localhost:3000/notes\")\n        .then(res => res.json())\n        .then(notes => this.setState({notes: notes.notes }))\n      }\n\n\n\n    generatorNote = (text) => {\n        const maxWidth = window.innerWidth\n        const maxHeight = window.innerHeight\n        let randX = parseInt((maxWidth - 250) * Math.random() * 0.4)\n        let randY = parseInt((maxHeight - 350) * Math.random() * 0.5)\n        let color = this.state.colors\n        let note = {\n            user_id: this.props.loginUser.id,\n            text,\n            color,\n            y: randX,\n            x: randY\n        }\n        return note\n    }\n\n\n    addStikcy = (e) => {\n        e.preventDefault()\n        let newNote = this.generatorNote(e.target[1].value)\n        fetch(\"http://localhost:3000/notes\", {\n            method: \"POST\",\n            headers: {\n              \"Content-Type\": \"application/json\",\n            },\n            body: JSON.stringify(newNote),\n        })\n            .then(res => {\n                this.setState({\n                    userTyping: \"\",\n                    notes: [...this.state.notes, newNote]\n                })\n                this.componentDidMount()\n            })\n    }\n\n    deleteNote = (noteObj) => {\n        const updateStikcyObj = this.state.notes.filter(note => note.id !== noteObj.id )\n        fetch(`http://localhost:3000/notes/${noteObj.id}`, {\n            method: \"DELETE\",\n            headers: {\n              \"Content-Type\": \"application/json\",\n            },\n            body: JSON.stringify(updateStikcyObj),\n        })\n        this.setState({\n            notes: updateStikcyObj\n        })\n    }\n\n    handleSelectChange = (e) => {\n        this.setState({\n            colors: e.target.value\n        })\n    }\n\n    handleOnchange = (e) => {\n        this.setState({\n            userTyping: e.target.value\n        })\n    }\n\n    handleEditTypingChange = (e) => {\n        this.setState({\n            editTyping: e.target.value\n        })\n    }\n\n    handleEditChange = ( noteObj) => {\n        this.setState({\n            edit: !this.state.edit,\n            currentNote: noteObj,\n            editTyping: noteObj.text\n        })\n    }\n\n    handleCancleEdit = () => {\n        this.setState({\n            edit: !this.state.edit,\n        })\n    } \n\n    \n    handleUpdateEdit = (noteObj) => {\n        fetch(`http://localhost:3000/notes/${noteObj.id}`, {\n            method: \"PATCH\",\n            headers: {\n              \"Content-Type\": \"application/json\",\n            },\n            body: JSON.stringify({\n                text: this.state.editTyping,\n            }),    \n        })\n        .then(res => res.json())\n        .then(() => {\n            this.componentDidMount()\n            this.handleCancleEdit()\n        })\n    }\n\n\n    handleOnStop = (e, v, noteObj) => {\n        console.log(`x:${v.x}, y:${v.y}, ${noteObj.id}, objX:${noteObj.x}, objY:${noteObj.y}`)\n            let newX = parseInt(noteObj.x) + v.x\n            let newY = parseInt(noteObj.y) + v.y\n            const {dragNot, currentNote} = this.state\n        console.log(typeof(newX), typeof(newY) )\n        console.log(`finalX:${newX}, finalY:${newY}`)\n        fetch(`http://localhost:3000/notes/${noteObj.id}`, {\n            method: \"PATCH\",\n            headers: {\n              \"Content-Type\": \"application/json\",\n            },\n            body: JSON.stringify({\n                x: newX,\n                y: newY\n            }),\n        })  \n            this.setState({\n                currentNote: {...noteObj, \"x\":newX, \"y\":newY}\n            })\n           \n            if(dragNot.length > 0) {\n                const updateDragNote = dragNot.filter(note => note.id !== currentNote.id)\n                updateDragNote.push(currentNote)\n                this.setState({dragNot: updateDragNote})\n            }else {\n                if(currentNote.length > 0) {\n                    dragNot.push(currentNote)\n                    this.setState({dragNot: dragNot});\n                }\n            }\n    }   \n\n    render() {\n        const {currentNote, editTyping , dragNot} = this.state\n        console.log(dragNot)\n        console.log(currentNote)\n        return(\n            <div>\n                { Object.keys(this.props.loginUser).length > 0 \n                    ?<div className=\"note-page\">\n                            <div className=\"note-page-header\"></div>\n                            <NavBar loginUser={this.props.loginUser} handlehideMusic={this.props.handlehideMusic}/>\n                            <div className=\"note-page-container\">\n                                <form onSubmit={(e) => this.addStikcy(e)} className=\"note\">\n                                    <select className=\"selector\" defaultValue='Select color' style={{ width: 252, backgroundColor: `${this.state.colors}`, }} onChange={this.handleSelectChange}>\n                                    <option value='Select color' disabled>Select color</option>\n                                    <option style={{backgroundColor:`#96C2F1` }} value='#96C2F1'>Blue</option>\n                                    <option style={{backgroundColor:`#D5F1BB` }} value='#D5F1BB'>Green</option>\n                                    <option style={{backgroundColor:`#FFFF99` }} value='#FFFF99'>Yellow</option>\n                                    <option style={{backgroundColor:`#FFCC00` }} value='#FFCC00'>Orange</option>\n                                    </select> \n\n                                    <textarea placeholder=\"Wirte your thought here!\"\n                                    style={{backgroundColor: `${this.state.colors}`}} \n                                    value={this.state.userTyping}\n                                    onChange={(e) => this.handleOnchange(e)}></textarea>\n                                    <button style={{backgroundColor:`${this.state.colors}`}}>Post New</button>\n                                </form>\n                                {this.state.notes.length > 0 ?this.state.notes.map(note => {\n                                return<Draggable \n                                                cancel=\".btn\"\n                                                cancel={this.state.edit ? \".post\" : \".btn\"}\n                                                onStop={(e , v) => this.handleOnStop(e, v, note)}\n                                                    > \n                                                    <div className= \"post\" \n                                                    style={{backgroundColor:`${note.color}`, top:`${note.y}px`,\n                                                    left: `${note.x}px`}}\n                                                    key={note.id} \n                                                        >\n                                                        {this.state.edit\n                                                            ?<div className=\"btn\" style={{fontSize:'24px', color:'white', textAlign:'right', paddingBottom: '20px'}}>     \n                                                            <IoSave className=\"btn-edit\" onClick={() => this.handleUpdateEdit(currentNote)}/>\n                                                            <AiFillCloseSquare  className=\"btn-cancel\"  onClick={() => this.handleCancleEdit()} />\n                                                            </div>\n                                                            :<div className=\"btn\" style={{fontSize:'24px', color:'white', textAlign:'right', paddingBottom: '20px'}}>     \n                                                                    <FaRegEdit className=\"btn-edit\"  onClick={() => this.handleEditChange(note)}/>\n                                                                    <RiDeleteBin6Line className=\"btn-cancel\"  onClick={() => this.deleteNote(note)} />\n                                                            </div>\n                                                        }\n                                                        <pre  className=\"post-text\">{note.text}</pre> \n                                                    </div> \n                                                </Draggable> \n                                }) : null}                              \n                                {this.state.edit\n                                  ?<textarea className= \"edit-textarea\" \n                                  style={{backgroundColor:`${currentNote.color}`, top:`${parseInt(currentNote.y) + 60}px`,\n                                  left: `${parseInt(currentNote.x) - 0.5}px`}}\n                                  value={editTyping}\n                                  onChange={(e) => this.handleEditTypingChange(e)}\n                                      >     \n                                      <div className=\"btn\" style={{fontSize:'24px', color:'white', textAlign:'right', paddingBottom: '20px'}}>     \n                                      </div>\n                                  </textarea>\n                                  :null\n                                }\n                            </div>\n                        </div>\n                    :this.props.history.push('/')\n                }\n            </div>\n        )\n    }\n}"]},"metadata":{},"sourceType":"module"}