{"ast":null,"code":"var _jsxFileName = \"/home/lin/phase5/My-Place-Frontend/my-place/src/Component/Weather.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst api = {\n  key: \"56f5e6f96b876ed60f2717fd26dd3b1e\",\n  base: \"https://api.openweathermap.org/data/2.5/\"\n};\n\nfunction Weather() {\n  _s();\n\n  const [query, setQuery] = useState('');\n  const [weather, setWeather] = useState({});\n  useEffect(() => {\n    fetch(`${api.base}weather?zip=11223&units=metric&APPID=${api.key}`).then(res => res.json()).then(result => {\n      setWeather(result);\n      setQuery('');\n      console.log(result);\n    });\n  }, []); //   const search = evt => {\n  //     if (evt.key === \"Enter\") {\n  //       fetch(`${api.base}weather?q=${query}&units=metric&APPID=${api.key}`)\n  //         .then(res => res.json())\n  //         .then(result => {\n  //           setWeather(result);\n  //           setQuery('');\n  //           console.log(result);\n  //         });\n  //     }\n  //   }\n\n  const dateBuilder = d => {\n    let months = [\"January\", \"February\", \"March\", \"April\", \"May\", \"June\", \"July\", \"August\", \"September\", \"October\", \"November\", \"December\"];\n    let days = [\"Sunday\", \"Monday\", \"Tuesday\", \"Wednesday\", \"Thursday\", \"Friday\", \"Saturday\"];\n    let day = days[d.getDay()];\n    let date = d.getDate();\n    let month = months[d.getMonth()];\n    let year = d.getFullYear();\n    return `${day} ${date} ${month} ${year}`;\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: typeof weather.main != \"undefined\" ? weather.main.temp > 16 ? 'app warm' : 'app' : 'app',\n    children: /*#__PURE__*/_jsxDEV(\"main\", {\n      children: typeof weather.main != \"undefined\" ? /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"location-box\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"location\",\n            children: [weather.name, \", \", weather.sys.country]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 67,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"date\",\n            children: dateBuilder(new Date())\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 68,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"weather-box\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"temp\",\n            children: [Math.round(weather.main.temp), \"\\xB0c\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 71,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"weather\",\n            children: weather.weather[0].main\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 74,\n            columnNumber: 13\n          }, this), console.log(weather.weather[0].main)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 9\n      }, this) : ''\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 52,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Weather, \"Eym38SAyNZ+m+jUZzP7ZPKDGkSE=\");\n\n_c = Weather;\nexport default Weather;\n\nvar _c;\n\n$RefreshReg$(_c, \"Weather\");","map":{"version":3,"sources":["/home/lin/phase5/My-Place-Frontend/my-place/src/Component/Weather.js"],"names":["React","useEffect","useState","api","key","base","Weather","query","setQuery","weather","setWeather","fetch","then","res","json","result","console","log","dateBuilder","d","months","days","day","getDay","date","getDate","month","getMonth","year","getFullYear","main","temp","name","sys","country","Date","Math","round"],"mappings":"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","sourcesContent":["  \nimport React, { useEffect, useState } from 'react';\nconst api = {\n  key: \"56f5e6f96b876ed60f2717fd26dd3b1e\",\n  base: \"https://api.openweathermap.org/data/2.5/\"\n}\n\nfunction Weather() {\n  const [query, setQuery] = useState('');\n  const [weather, setWeather] = useState({});\n\n\n  useEffect(() => {\n\n    fetch(`${api.base}weather?zip=11223&units=metric&APPID=${api.key}`)\n        .then(res => res.json())\n        .then(result => {\n          setWeather(result);\n          setQuery('');\n          console.log(result);\n        });\n  },[]) \n\n  \n\n\n//   const search = evt => {\n//     if (evt.key === \"Enter\") {\n//       fetch(`${api.base}weather?q=${query}&units=metric&APPID=${api.key}`)\n//         .then(res => res.json())\n//         .then(result => {\n//           setWeather(result);\n//           setQuery('');\n//           console.log(result);\n//         });\n//     }\n//   }\n\n  const dateBuilder = (d) => {\n    let months = [\"January\", \"February\", \"March\", \"April\", \"May\", \"June\", \"July\", \"August\", \"September\", \"October\", \"November\", \"December\"];\n    let days = [\"Sunday\", \"Monday\", \"Tuesday\", \"Wednesday\", \"Thursday\", \"Friday\", \"Saturday\"];\n\n    let day = days[d.getDay()];\n    let date = d.getDate();\n    let month = months[d.getMonth()];\n    let year = d.getFullYear();\n\n    return `${day} ${date} ${month} ${year}`\n  }\n\n  return (\n    <div className={(typeof weather.main != \"undefined\") ? ((weather.main.temp > 16) ? 'app warm' : 'app') : 'app'}>\n      <main>\n        {/* <div className=\"search-box\">\n          <input \n            type=\"text\"\n            className=\"search-bar\"\n            placeholder=\"Search...\"\n            onChange={e => setQuery(e.target.value)}\n            value={query}\n            onKeyPress={search}\n          />\n        </div> */}\n        {(typeof weather.main != \"undefined\") ? (\n        <div>\n          <div className=\"location-box\">\n            <div className=\"location\">{weather.name}, {weather.sys.country}</div>\n            <div className=\"date\">{dateBuilder(new Date())}</div>\n          </div>\n          <div className=\"weather-box\">\n            <div className=\"temp\">\n              {Math.round(weather.main.temp)}Â°c\n            </div>\n            <div className=\"weather\">{weather.weather[0].main}</div>\n            {console.log(weather.weather[0].main)}\n          </div>\n        </div>\n        ) : ('')}\n      </main>\n    </div>\n  );\n}\n\nexport default Weather;"]},"metadata":{},"sourceType":"module"}