{"ast":null,"code":"var _jsxFileName = \"/home/lin/phase5/My-Place-Frontend/my-place/src/Component/Sticky.js\";\nimport React, { Component } from \"react\";\nimport { Select, Button } from 'antd';\nimport Draggable from 'react-draggable';\nimport { CloseOutlined, EditFilled } from '@ant-design/icons';\nimport { Editor } from '@tinymce/tinymce-react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst {\n  Option\n} = Select;\nexport default class Sticky extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      edit: false,\n      userTyping: \"\",\n      currentSticky: {},\n      stickies: [],\n      colors: '#FFCC00',\n      x: \"\",\n      y: \"\"\n    };\n\n    this.generatorSticky = text => {\n      const maxWidth = window.innerWidth;\n      const maxHeight = window.innerHeight;\n      let randX = parseInt((maxWidth - 250) * Math.random(), 10);\n      let randY = parseInt((maxHeight - 350) * Math.random(), 10);\n      let background = this.state.colors;\n      let sticky = {\n        text,\n        background,\n        top: randX,\n        left: randY\n      };\n      console.log(randX);\n      return sticky;\n    };\n\n    this.addStikcy = e => {\n      e.preventDefault();\n      let newSticky = this.generatorSticky(e.target[1].value);\n      this.setState({\n        userTyping: \"\",\n        stickies: [...this.state.stickies, newSticky]\n      });\n    };\n\n    this.handleSelectChange = e => {\n      this.setState({\n        colors: e\n      });\n    };\n\n    this.handleOnchange = e => {\n      this.setState({\n        userTyping: e.target.value\n      });\n    };\n\n    this.handleOnStop = (e, v) => {\n      console.log(v);\n    };\n  }\n\n  render() {\n    const {\n      currentSticky\n    } = this.state;\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"sticky-page\",\n        children: [\"This is sticky page\", /*#__PURE__*/_jsxDEV(\"form\", {\n          onSubmit: e => this.addStikcy(e),\n          className: \"sticky\",\n          children: [/*#__PURE__*/_jsxDEV(Select, {\n            defaultValue: \"Select color\",\n            style: {\n              width: 200\n            },\n            onChange: this.handleSelectChange,\n            children: [/*#__PURE__*/_jsxDEV(Option, {\n              style: {\n                width: 200\n              },\n              value: \"Select color\",\n              disabled: true,\n              children: \"Select color\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 74,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(Option, {\n              style: {\n                backgroundColor: `#96C2F1`\n              },\n              value: \"#96C2F1\",\n              children: \"Blue\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 75,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(Option, {\n              value: \"#D5F1BB\",\n              children: \"Green\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 76,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(Option, {\n              value: \"#E3E197\",\n              children: \"Yellow\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 77,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(Option, {\n              value: \"#FFCC00\",\n              children: \"Orange\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 78,\n              columnNumber: 25\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 73,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n            placeholder: \"Wirte your memo here!\",\n            style: {\n              backgroundColor: `${this.state.colors}`\n            },\n            value: this.state.userTyping,\n            onChange: e => this.handleOnchange(e)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 81,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            style: {\n              backgroundColor: `${this.state.colors}`\n            },\n            children: \"Add New\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 85,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 21\n        }, this), this.state.stickies.map(sticky => {\n          return /*#__PURE__*/_jsxDEV(Draggable, {\n            onStop: this.handleOnStop,\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"post\",\n              style: {\n                backgroundColor: `${sticky.background}`,\n                top: `${sticky.top}px`,\n                left: `${sticky.left}px`\n              },\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"btn\",\n                style: {\n                  fontSize: '24px',\n                  color: 'white',\n                  textAlign: 'right',\n                  paddingBottom: '20px'\n                },\n                children: /*#__PURE__*/_jsxDEV(CloseOutlined, {\n                  style: {\n                    paddingLeft: '15px'\n                  }\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 98,\n                  columnNumber: 45\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 97,\n                columnNumber: 41\n              }, this), /*#__PURE__*/_jsxDEV(\"pre\", {\n                className: \"post-text\",\n                children: sticky.text\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 100,\n                columnNumber: 41\n              }, this)]\n            }, sticky.id, true, {\n              fileName: _jsxFileName,\n              lineNumber: 92,\n              columnNumber: 37\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 89,\n            columnNumber: 32\n          }, this);\n        })]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 13\n    }, this);\n  }\n\n}","map":{"version":3,"sources":["/home/lin/phase5/My-Place-Frontend/my-place/src/Component/Sticky.js"],"names":["React","Component","Select","Button","Draggable","CloseOutlined","EditFilled","Editor","Option","Sticky","state","edit","userTyping","currentSticky","stickies","colors","x","y","generatorSticky","text","maxWidth","window","innerWidth","maxHeight","innerHeight","randX","parseInt","Math","random","randY","background","sticky","top","left","console","log","addStikcy","e","preventDefault","newSticky","target","value","setState","handleSelectChange","handleOnchange","handleOnStop","v","render","width","backgroundColor","map","fontSize","color","textAlign","paddingBottom","paddingLeft","id"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport { Select, Button } from 'antd';\nimport Draggable from 'react-draggable'; \nimport {  CloseOutlined, EditFilled } from '@ant-design/icons';\nimport { Editor } from '@tinymce/tinymce-react'\n\n\nconst { Option } = Select;\nexport default class Sticky extends Component{\n\n    state = {\n        edit: false,\n        userTyping: \"\",\n        currentSticky: {},\n        stickies: [],\n        colors: '#FFCC00',\n        x: \"\", \n        y: \"\"\n    }\n    // parseInt((maxHeight - 100) * Math.random())\n    generatorSticky = (text) => {\n        const maxWidth = window.innerWidth\n        const maxHeight = window.innerHeight\n        let randX = parseInt((maxWidth - 250) * Math.random(), 10)\n        let randY = parseInt((maxHeight - 350) * Math.random(), 10)\n        let background = this.state.colors\n        let sticky = {\n            text,\n            background,\n            top: randX,\n            left: randY\n        }\n        console.log(randX)\n        return sticky\n    }\n\n\n    addStikcy = (e) => {\n        e.preventDefault()\n        let newSticky = this.generatorSticky(e.target[1].value)\n\n        this.setState({\n            userTyping: \"\",\n            stickies: [...this.state.stickies, newSticky]\n        })\n    }\n\n    handleSelectChange = (e) => {\n        this.setState({\n            colors: e\n        })\n    }\n\n    handleOnchange = (e) => {\n        this.setState({\n            userTyping: e.target.value\n        })\n    }\n\n    handleOnStop = (e, v) => {\n        console.log(v)\n    }\n\n    \n\n    render() {\n        const {currentSticky} = this.state\n        return(\n            <div>\n                <div className=\"sticky-page\" >\n                This is sticky page\n                    <form onSubmit={(e) => this.addStikcy(e)} className=\"sticky\">\n                        <Select defaultValue='Select color' style={{ width: 200}} onChange={this.handleSelectChange}>\n                        <Option style={{ width: 200 }} value='Select color' disabled>Select color</Option>\n                        <Option style={{backgroundColor:`#96C2F1` }} value='#96C2F1'>Blue</Option>\n                        <Option value='#D5F1BB'>Green</Option>\n                        <Option value='#E3E197'>Yellow</Option>\n                        <Option value='#FFCC00'>Orange</Option>\n                        </Select> \n\n                        <textarea placeholder=\"Wirte your memo here!\"\n                        style={{backgroundColor: `${this.state.colors}`}} \n                        value={this.state.userTyping}\n                        onChange={(e) => this.handleOnchange(e)}></textarea>\n                        <Button style={{backgroundColor:`${this.state.colors}`}}>Add New</Button>\n                    </form>\n\n                    {this.state.stickies.map(sticky => {\n                        return <Draggable \n                                    onStop={this.handleOnStop}\n                                    > \n                                    <div className= \"post\" \n                                    style={{backgroundColor:`${sticky.background}`, top:`${sticky.top}px`,\n                                    left: `${sticky.left}px`}}\n                                    key={sticky.id} \n                                        >     \n                                        <div className=\"btn\" style={{fontSize:'24px', color:'white', textAlign:'right', paddingBottom: '20px'}}>     \n                                            <CloseOutlined style={{paddingLeft: '15px'}}/>\n                                        </div>\n                                        <pre  className=\"post-text\">{sticky.text}</pre> \n                                    </div>\n                               </Draggable>                              \n                    })}\n                  </div>\n            </div>\n        )\n    }\n}"]},"metadata":{},"sourceType":"module"}