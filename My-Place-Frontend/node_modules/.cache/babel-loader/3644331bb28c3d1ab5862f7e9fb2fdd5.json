{"ast":null,"code":"var _jsxFileName = \"/home/lin/phase5/My-Place-Frontend/my-place/src/Component/Sticky.js\";\nimport React, { Component } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default class Sticky extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      userTyping: \"\",\n      stickies: []\n    };\n\n    this.generatorSticky = input => {\n      const colors = ['#96C2F1', '#BBE1F1', '#E3E197', '#F8B3D0', '#FFCC00'];\n      const maxWidth = window.innerWidth;\n      const maxHeight = window.innerHeight;\n      let randX = parseInt((maxWidth - 250) * Math.random(), 10);\n      let randY = parseInt((maxHeight - 350) * Math.random(), 10);\n      let background = colors[parseInt(Math.random() * colors.length, 10)];\n      let note = {\n        input,\n        background,\n        top: randY,\n        left: randX\n      };\n      return note;\n    };\n\n    this.addStikcy = e => {\n      e.preventDefault();\n      const newSticky = {\n        text: this.state.userTyping\n      };\n    };\n\n    this.handleOnchange = e => {\n      this.setState({\n        userTyping: e.target.value\n      });\n    };\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [\"This is sticky page\", /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: () => this.addStikcy(),\n        className: \"sticky\",\n        children: [/*#__PURE__*/_jsxDEV(\"textarea\", {\n          placeholder: \"Wirte your memo here!\",\n          value: this.state.userTyping,\n          onChange: e => this.handleOnchange(e)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          children: \"Add New\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 13\n    }, this);\n  }\n\n}","map":{"version":3,"sources":["/home/lin/phase5/My-Place-Frontend/my-place/src/Component/Sticky.js"],"names":["React","Component","Sticky","state","userTyping","stickies","generatorSticky","input","colors","maxWidth","window","innerWidth","maxHeight","innerHeight","randX","parseInt","Math","random","randY","background","length","note","top","left","addStikcy","e","preventDefault","newSticky","text","handleOnchange","setState","target","value","render"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;;AAGA,eAAe,MAAMC,MAAN,SAAqBD,SAArB,CAA8B;AAAA;AAAA;AAAA,SAEzCE,KAFyC,GAEjC;AACJC,MAAAA,UAAU,EAAE,EADR;AAEJC,MAAAA,QAAQ,EAAE;AAFN,KAFiC;;AAAA,SAQzCC,eARyC,GAQtBC,KAAD,IAAW;AACzB,YAAMC,MAAM,GAAG,CAAC,SAAD,EAAY,SAAZ,EAAuB,SAAvB,EAAkC,SAAlC,EAA6C,SAA7C,CAAf;AACA,YAAMC,QAAQ,GAAGC,MAAM,CAACC,UAAxB;AACA,YAAMC,SAAS,GAAGF,MAAM,CAACG,WAAzB;AACA,UAAIC,KAAK,GAAGC,QAAQ,CAAC,CAACN,QAAQ,GAAG,GAAZ,IAAmBO,IAAI,CAACC,MAAL,EAApB,EAAmC,EAAnC,CAApB;AACA,UAAIC,KAAK,GAAGH,QAAQ,CAAC,CAACH,SAAS,GAAG,GAAb,IAAoBI,IAAI,CAACC,MAAL,EAArB,EAAoC,EAApC,CAApB;AACA,UAAIE,UAAU,GAAGX,MAAM,CAACO,QAAQ,CAACC,IAAI,CAACC,MAAL,KAAgBT,MAAM,CAACY,MAAxB,EAAgC,EAAhC,CAAT,CAAvB;AACA,UAAIC,IAAI,GAAG;AACPd,QAAAA,KADO;AAEPY,QAAAA,UAFO;AAGPG,QAAAA,GAAG,EAAEJ,KAHE;AAIPK,QAAAA,IAAI,EAAET;AAJC,OAAX;AAMA,aAAOO,IAAP;AACH,KAtBwC;;AAAA,SAyBzCG,SAzByC,GAyB5BC,CAAD,IAAO;AACfA,MAAAA,CAAC,CAACC,cAAF;AACA,YAAMC,SAAS,GAAG;AACdC,QAAAA,IAAI,EAAE,KAAKzB,KAAL,CAAWC;AADH,OAAlB;AAKH,KAhCwC;;AAAA,SAoCzCyB,cApCyC,GAoCvBJ,CAAD,IAAO;AACpB,WAAKK,QAAL,CAAc;AACV1B,QAAAA,UAAU,EAAEqB,CAAC,CAACM,MAAF,CAASC;AADX,OAAd;AAGH,KAxCwC;AAAA;;AA0CzCC,EAAAA,MAAM,GAAG;AACL,wBACI;AAAA,qDAGI;AAAM,QAAA,QAAQ,EAAE,MAAM,KAAKT,SAAL,EAAtB;AAAwC,QAAA,SAAS,EAAC,QAAlD;AAAA,gCACI;AAAU,UAAA,WAAW,EAAC,uBAAtB;AACA,UAAA,KAAK,EAAE,KAAKrB,KAAL,CAAWC,UADlB;AAEA,UAAA,QAAQ,EAAGqB,CAAD,IAAO,KAAKI,cAAL,CAAoBJ,CAApB;AAFjB;AAAA;AAAA;AAAA;AAAA,gBADJ,eAII;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAJJ;AAAA;AAAA;AAAA;AAAA;AAAA,cAHJ;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ;AAYH;;AAvDwC","sourcesContent":["import React, { Component } from \"react\";\n\n\nexport default class Sticky extends Component{\n\n    state = {\n        userTyping: \"\",\n        stickies: []\n    }\n\n\n    generatorSticky = (input) => {\n        const colors = ['#96C2F1', '#BBE1F1', '#E3E197', '#F8B3D0', '#FFCC00']\n        const maxWidth = window.innerWidth\n        const maxHeight = window.innerHeight\n        let randX = parseInt((maxWidth - 250) * Math.random(), 10)\n        let randY = parseInt((maxHeight - 350) * Math.random(), 10)\n        let background = colors[parseInt(Math.random() * colors.length, 10)]\n        let note = {\n            input,\n            background,\n            top: randY,\n            left: randX\n        }\n        return note\n    }\n\n\n    addStikcy = (e) => {\n        e.preventDefault()\n        const newSticky = {\n            text: this.state.userTyping\n            \n\n        }\n    }\n\n\n\n    handleOnchange = (e) => {\n        this.setState({\n            userTyping: e.target.value\n        })\n    }\n\n    render() {\n        return(\n            <div>\n                This is sticky page\n\n                <form onSubmit={() => this.addStikcy()} className=\"sticky\">   \n                    <textarea placeholder=\"Wirte your memo here!\" \n                    value={this.state.userTyping}\n                    onChange={(e) => this.handleOnchange(e)}></textarea>\n                    <button>Add New</button>\n                </form>\n            </div>\n        )\n    }\n}"]},"metadata":{},"sourceType":"module"}