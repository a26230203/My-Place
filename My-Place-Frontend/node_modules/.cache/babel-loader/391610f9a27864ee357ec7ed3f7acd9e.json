{"ast":null,"code":"var _jsxFileName = \"/home/lin/phase5/My-Place-Frontend/my-place/src/Component/Container/JouranlEdit.js\";\nimport React, { Component } from \"react\";\nimport Navbar from '../NavBar';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default class JournalEdit extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      title: \"\",\n      content: \"\"\n    };\n\n    this.handlePublish = () => {\n      const updateJouranl = {\n        user_id: this.props.loginUser.id,\n        title: this.state.title,\n        content: this.state.content\n      };\n      fetch(`http://localhost:3000/journals/${props.currentJouranl.id}`, {\n        method: \"PATCH\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify(updateJouranl)\n      }).then(res => res.json()).then(() => {\n        alert(\"Your edit is saved\");\n        this.setState({\n          title: \"\",\n          content: \"\"\n        });\n        props.history.push('/journal');\n      });\n    };\n\n    this.handleSave = () => {\n      const newJouranlDraft = {\n        user_id: this.props.loginUser.id,\n        title: this.state.title,\n        content: this.state.content\n      };\n      fetch(\"http://localhost:3000/journal_drafts\", {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify(newJouranlDraft)\n      }).then(res => res.json()).then(() => {\n        alert(\"You draft is saved\");\n        this.setState({\n          title: \"\",\n          content: \"\"\n        });\n      });\n    };\n\n    this.handleCancelClick = () => {\n      props.history.push('journal');\n    };\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"new-jouranl\",\n      children: [/*#__PURE__*/_jsxDEV(CloseCircleOutlined, {\n        className: \"new-jouranl-btn\",\n        style: {\n          fontSize: '24px'\n        },\n        onClick: () => this.handleDisplay()\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"New Journal\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Input, {\n        className: \"title\",\n        addonBefore: \"Title: \",\n        placeholder: \"Wirte your title here\",\n        type: \"text\",\n        value: this.state.title,\n        onChange: e => this.setState({\n          title: e.target.value\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Editor, {\n        className: \"editor\",\n        apiKey: \"ubuznhjw161y8fw2jyqsp5wsyl72c4d7pnjdvwi9rm7c0m8s\",\n        inline: false,\n        Value: this.state.content,\n        init: {\n          content_style: \"body { margin: 20px ; }\",\n          width: 800,\n          min_height: 716,\n          branding: false,\n          plugins: 'preview searchreplace autolink directionality visualblocks visualchars fullscreen image link template code codesample table charmap hr pagebreak nonbreaking anchor insertdatetime advlist lists imagetools textpattern help emoticons autosave autoresize formatpainter',\n          toolbar: 'code undo redo restoredraft | cut copy paste pastetext | forecolor backcolor bold italic underline strikethrough link anchor | alignleft aligncenter alignright alignjustify outdent indent | styleselect formatselect fontselect fontsizeselect | bullist numlist | blockquote subscript superscript removeformat | table media charmap emoticons hr pagebreak insertdatetime print preview | fullscreen | bdmap indent2em lineheight formatpainter axupimgs | link image',\n          fontsize_formats: '12px 14px 16px 18px 24px 36px 48px 56px 72px',\n          placeholder: \"Write your content here\",\n          relative_urls: false,\n          element_format: 'xhtml',\n          forced_root_block: \"\",\n          statusbar: false\n        },\n        onEditorChange: this.handleEditorChnage\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"btn\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"btn-publish\",\n          onClick: () => this.handlePublish(),\n          children: \"Publish\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 102,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"btn-cancel\",\n          onClick: () => this.handleDisplay(),\n          children: \"Cancel\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 103,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"btn-save\",\n          onClick: () => this.handleSave(),\n          children: \"Save as Draft\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 104,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 19\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 9\n    }, this);\n  }\n\n} // const handlePublish = () => {\n//   const updateJouranl = {\n//     user_id: props.loginUser.id,\n//     title: title,\n//     content: content\n//   }\n//   fetch(`http://localhost:3000/journals/${props.currentJouranl.id}`, {\n//     method: \"PATCH\",\n//     headers: {\n//       \"Content-Type\": \"application/json\",\n//     },\n//     body: JSON.stringify(updateJouranl),\n//   })\n//   .then(res => res.json())\n//   .then(() => {\n//     alert(\"Your edit is saved\")\n//     props.history.push('/journal')\n//   })\n// }\n// const handleSave = () => {\n//   const newJouranlDraft = {\n//     user_id: props.loginUser.id,\n//     title: title,\n//     content: content\n//   }\n//   fetch(\"http://localhost:3000/journal_drafts\", {\n//     method: \"POST\",\n//     headers: {\n//       \"Content-Type\": \"application/json\",\n//     },\n//     body: JSON.stringify(newJouranlDraft),\n//   })\n//   .then(res => res.json())\n//   .then(() => {\n//     alert(\"You draft is saved\")\n//   })\n// }\n// const handleCancelClick = () => {\n//   props.history.push('journal')\n// }\n//   return (\n//     <div className=\"journal-edit\">\n//       {Object.keys(props.loginUser).length > 0 \n//         ?<div>\n//         <Navbar />\n//         <div className=\"editing\"> \n//                   <input className=\"title\"\n//                       type=\"text\"\n//                       value = {title}\n//                       onChange={(e) => setTitle(e.target.value)} />\n//                   <h2>Content</h2>\n//                   <textarea className=\"content\"\n//                       value = {content}\n//                       onChange={(e) => setContent(e.target.value)} />\n//                 <div className=\"btn\">\n//                     <button className=\"btn-publish\" onClick={() => handlePublish()}>Publish</button>\n//                     <button className=\"btn-cancel\" onClick={() => handleCancelClick()}>Cancel</button>\n//                     <button className=\"btn-save\" onClick={() => handleSave()}>Save as Draft</button>\n//                 </div>\n//               </div>\n//           </div>\n//           :props.history.push('/')    \n//         }\n//     </div>\n//   );","map":{"version":3,"sources":["/home/lin/phase5/My-Place-Frontend/my-place/src/Component/Container/JouranlEdit.js"],"names":["React","Component","Navbar","JournalEdit","state","title","content","handlePublish","updateJouranl","user_id","props","loginUser","id","fetch","currentJouranl","method","headers","body","JSON","stringify","then","res","json","alert","setState","history","push","handleSave","newJouranlDraft","handleCancelClick","render","fontSize","handleDisplay","e","target","value","content_style","width","min_height","branding","plugins","toolbar","fontsize_formats","placeholder","relative_urls","element_format","forced_root_block","statusbar","handleEditorChnage"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport Navbar from '../NavBar'\n\nexport default class JournalEdit extends Component {\n    state = {\n      title: \"\",\n      content: \"\"\n    }\n\n\n\n    handlePublish = () => {\n    const updateJouranl = {\n      user_id: this.props.loginUser.id,\n      title: this.state.title,\n      content: this.state.content\n    }\n\n    fetch(`http://localhost:3000/journals/${props.currentJouranl.id}`, {\n      method: \"PATCH\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n      },\n      body: JSON.stringify(updateJouranl),\n    })\n    .then(res => res.json())\n    .then(() => {\n      alert(\"Your edit is saved\")\n      this.setState({\n        title: \"\",\n        content: \"\"\n      })\n      props.history.push('/journal')\n    })\n  }\n\n\n  handleSave = () => {\n    const newJouranlDraft = {\n      user_id: this.props.loginUser.id,\n      title: this.state.title,\n      content: this.state.content\n    }\n\n    fetch(\"http://localhost:3000/journal_drafts\", {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n      },\n      body: JSON.stringify(newJouranlDraft),\n    })\n    .then(res => res.json())\n    .then(() => {\n      alert(\"You draft is saved\")\n      this.setState({\n        title: \"\",\n        content: \"\"\n      })\n    })\n  }\n\n  handleCancelClick = () => {\n    props.history.push('journal')\n  }\n\n\n  \n    render() {\n      return(\n        <div className=\"new-jouranl\">\n                <CloseCircleOutlined className=\"new-jouranl-btn\" style={{fontSize: '24px'}} onClick={() => this.handleDisplay()}/>  \n                <h2>New Journal</h2>\n                <Input className=\"title\"\n                    addonBefore=\"Title: \"\n                    placeholder=\"Wirte your title here\"\n                    type=\"text\"\n                    value = {this.state.title}\n                      onChange={(e) => this.setState({title: e.target.value})}>\n                  </Input>\n                <Editor \n                  className=\"editor\"\n                  apiKey=\"ubuznhjw161y8fw2jyqsp5wsyl72c4d7pnjdvwi9rm7c0m8s\"\n                  inline={false}\n                  Value={this.state.content}\n                  init={{\n                      content_style: \"body { margin: 20px ; }\",\n                      width: 800,\n                      min_height: 716,\n                      branding: false,\n                      plugins: 'preview searchreplace autolink directionality visualblocks visualchars fullscreen image link template code codesample table charmap hr pagebreak nonbreaking anchor insertdatetime advlist lists imagetools textpattern help emoticons autosave autoresize formatpainter',\n                      toolbar: 'code undo redo restoredraft | cut copy paste pastetext | forecolor backcolor bold italic underline strikethrough link anchor | alignleft aligncenter alignright alignjustify outdent indent | styleselect formatselect fontselect fontsizeselect | bullist numlist | blockquote subscript superscript removeformat | table media charmap emoticons hr pagebreak insertdatetime print preview | fullscreen | bdmap indent2em lineheight formatpainter axupimgs | link image',\n                      fontsize_formats: '12px 14px 16px 18px 24px 36px 48px 56px 72px',\n                      placeholder: \"Write your content here\",\n                      relative_urls: false,\n                      element_format : 'xhtml',\n                      forced_root_block : \"\",\n                      statusbar: false,\n                      }}\n                      onEditorChange={this.handleEditorChnage}\n                    />  \n                  <div className=\"btn\">\n                    <button  className=\"btn-publish\" onClick={() => this.handlePublish()}>Publish</button>\n                    <button  className=\"btn-cancel\" onClick={() => this.handleDisplay()}>Cancel</button>\n                    <button className=\"btn-save\"  onClick={() => this.handleSave()}>Save as Draft</button>\n                  </div>\n              </div>\n      )\n    }\n  }\n  // const handlePublish = () => {\n  //   const updateJouranl = {\n  //     user_id: props.loginUser.id,\n  //     title: title,\n  //     content: content\n  //   }\n\n  //   fetch(`http://localhost:3000/journals/${props.currentJouranl.id}`, {\n  //     method: \"PATCH\",\n  //     headers: {\n  //       \"Content-Type\": \"application/json\",\n  //     },\n  //     body: JSON.stringify(updateJouranl),\n  //   })\n  //   .then(res => res.json())\n  //   .then(() => {\n  //     alert(\"Your edit is saved\")\n  //     props.history.push('/journal')\n  //   })\n  // }\n\n\n  // const handleSave = () => {\n  //   const newJouranlDraft = {\n  //     user_id: props.loginUser.id,\n  //     title: title,\n  //     content: content\n  //   }\n\n  //   fetch(\"http://localhost:3000/journal_drafts\", {\n  //     method: \"POST\",\n  //     headers: {\n  //       \"Content-Type\": \"application/json\",\n  //     },\n  //     body: JSON.stringify(newJouranlDraft),\n  //   })\n  //   .then(res => res.json())\n  //   .then(() => {\n  //     alert(\"You draft is saved\")\n      \n  //   })\n  // }\n\n  // const handleCancelClick = () => {\n  //   props.history.push('journal')\n  // }\n\n\n  //   return (\n  //     <div className=\"journal-edit\">\n  //       {Object.keys(props.loginUser).length > 0 \n  //         ?<div>\n  //         <Navbar />\n  //         <div className=\"editing\"> \n  //                   <input className=\"title\"\n  //                       type=\"text\"\n  //                       value = {title}\n  //                       onChange={(e) => setTitle(e.target.value)} />\n  //                   <h2>Content</h2>\n  //                   <textarea className=\"content\"\n  //                       value = {content}\n  //                       onChange={(e) => setContent(e.target.value)} />\n  //                 <div className=\"btn\">\n  //                     <button className=\"btn-publish\" onClick={() => handlePublish()}>Publish</button>\n  //                     <button className=\"btn-cancel\" onClick={() => handleCancelClick()}>Cancel</button>\n  //                     <button className=\"btn-save\" onClick={() => handleSave()}>Save as Draft</button>\n  //                 </div>\n  //               </div>\n  //           </div>\n  //           :props.history.push('/')    \n  //         }\n  //     </div>\n\n  //   );"]},"metadata":{},"sourceType":"module"}