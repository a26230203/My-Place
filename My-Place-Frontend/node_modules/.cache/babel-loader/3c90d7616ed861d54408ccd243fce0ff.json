{"ast":null,"code":"var _jsxFileName = \"/home/lin/phase5/My-Place-Frontend/my-place/src/Component/Sticky.js\";\nimport React, { Component } from \"react\";\nimport { Select } from 'antd';\nimport { CloseOutlined, EditFilled } from '@ant-design/icons';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst {\n  Option\n} = Select;\nexport default class Sticky extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      userTyping: \"\",\n      stickies: [],\n      colors: '#FFCC00'\n    };\n\n    this.generatorSticky = text => {\n      const maxWidth = window.innerWidth;\n      const maxHeight = window.innerHeight;\n      let randX = parseInt((maxWidth - 250) * Math.random(), 10);\n      let randY = parseInt((maxHeight - 350) * Math.random(), 10);\n      let background = this.state.colors;\n      let rotate = Math.floor(Math.random() * 20);\n      let note = {\n        text,\n        background,\n        top: randY,\n        left: randX,\n        rotate: rotate\n      };\n      return note;\n    };\n\n    this.addStikcy = e => {\n      e.preventDefault();\n      let newSticky = this.generatorSticky(e.target[1].value);\n      this.setState({\n        userTyping: \"\",\n        stickies: [...this.state.stickies, newSticky]\n      });\n      console.log(this.state.stickies);\n    };\n\n    this.handleSelectChange = e => {\n      this.setState({\n        colors: e\n      });\n    };\n\n    this.handleOnchange = e => {\n      this.setState({\n        userTyping: e.target.value\n      });\n    };\n\n    this.dropSticky = e => {\n      e.target.style.left = `${e.pageX - 50}px`;\n      e.target.style.top = `${e.pageY - 400}px`;\n    };\n\n    this.drapOver = e => {\n      e.stopPropagation();\n      e.preventDefault();\n    };\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [\"This is sticky page\", /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"sticky-page\",\n        onDragOver: this.dragOver,\n        children: [/*#__PURE__*/_jsxDEV(\"form\", {\n          onSubmit: e => this.addStikcy(e),\n          className: \"sticky\",\n          children: [/*#__PURE__*/_jsxDEV(Select, {\n            defaultValue: \"Select color\",\n            style: {\n              width: 200\n            },\n            onChange: this.handleSelectChange,\n            children: [/*#__PURE__*/_jsxDEV(Option, {\n              value: \"Select color\",\n              disabled: true,\n              children: \"Select color\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 73,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(Option, {\n              value: \"#96C2F1\",\n              children: \"Blue\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 74,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(Option, {\n              value: \"#D5F1BB\",\n              children: \"Green\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 75,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(Option, {\n              value: \"#E3E197\",\n              children: \"Yellow\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 76,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(Option, {\n              value: \"#FFCC00\",\n              children: \"Orange\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 77,\n              columnNumber: 25\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 72,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n            placeholder: \"Wirte your memo here!\",\n            style: {\n              backgroundColor: `${this.state.colors}`\n            },\n            value: this.state.userTyping,\n            onChange: e => this.handleOnchange(e)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 80,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            children: \"Add New\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 84,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 21\n        }, this), this.state.stickies.map(sticky => {\n          return /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"post\",\n            style: {\n              backgroundColor: `${sticky.background}`,\n              top: `${sticky.top}px`,\n              left: `${sticky.letf}px`,\n              transform: `rotate(${sticky.rotate}deg)`\n            },\n            draggable: \"true\",\n            onDragEnd: this.dropSticky,\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"btn\",\n              style: {\n                fontSize: '24px',\n                color: 'white',\n                textAlign: 'right',\n                paddingBottom: '20px'\n              },\n              children: [/*#__PURE__*/_jsxDEV(EditFilled, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 95,\n                columnNumber: 41\n              }, this), /*#__PURE__*/_jsxDEV(CloseOutlined, {\n                style: {\n                  paddingLeft: '10px'\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 96,\n                columnNumber: 41\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 94,\n              columnNumber: 38\n            }, this), /*#__PURE__*/_jsxDEV(\"pre\", {\n              className: \"post-text\",\n              children: sticky.text\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 98,\n              columnNumber: 37\n            }, this)]\n          }, sticky.id, true, {\n            fileName: _jsxFileName,\n            lineNumber: 88,\n            columnNumber: 32\n          }, this);\n        })]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 13\n    }, this);\n  }\n\n}","map":{"version":3,"sources":["/home/lin/phase5/My-Place-Frontend/my-place/src/Component/Sticky.js"],"names":["React","Component","Select","CloseOutlined","EditFilled","Option","Sticky","state","userTyping","stickies","colors","generatorSticky","text","maxWidth","window","innerWidth","maxHeight","innerHeight","randX","parseInt","Math","random","randY","background","rotate","floor","note","top","left","addStikcy","e","preventDefault","newSticky","target","value","setState","console","log","handleSelectChange","handleOnchange","dropSticky","style","pageX","pageY","drapOver","stopPropagation","render","dragOver","width","backgroundColor","map","sticky","letf","transform","fontSize","color","textAlign","paddingBottom","paddingLeft","id"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport { Select } from 'antd';\nimport {  CloseOutlined, EditFilled } from '@ant-design/icons';\n\nconst { Option } = Select;\nexport default class Sticky extends Component{\n\n    state = {\n        userTyping: \"\",\n        stickies: [],\n        colors: '#FFCC00'\n\n    }\n\n    generatorSticky = (text) => {\n        const maxWidth = window.innerWidth\n        const maxHeight = window.innerHeight\n        let randX = parseInt((maxWidth - 250) * Math.random(), 10)\n        let randY = parseInt((maxHeight - 350) * Math.random(), 10)\n        let background = this.state.colors\n        let rotate = Math.floor(Math.random() * 20)\n        let note = {\n            text,\n            background,\n            top: randY,\n            left: randX,\n            rotate: rotate\n        }\n        return note\n    }\n\n\n    addStikcy = (e) => {\n        e.preventDefault()\n        let newSticky = this.generatorSticky(e.target[1].value)\n\n        this.setState({\n            userTyping: \"\",\n            stickies: [...this.state.stickies, newSticky]\n        })\n        console.log(this.state.stickies)\n    }\n\n    handleSelectChange = (e) => {\n        this.setState({\n            colors: e\n        })\n    }\n\n    handleOnchange = (e) => {\n        this.setState({\n            userTyping: e.target.value\n        })\n    }\n\n    dropSticky = (e) => {\n        e.target.style.left = `${e.pageX - 50}px`\n        e.target.style.top = `${e.pageY - 400}px`\n    }\n\n    drapOver = (e) => {\n        e.stopPropagation()\n        e.preventDefault()\n    }\n\n    render() {\n        return(\n            <div>\n                This is sticky page\n                <div className=\"sticky-page\" onDragOver={this.dragOver}>\n                    <form onSubmit={(e) => this.addStikcy(e)} className=\"sticky\">\n                        <Select defaultValue='Select color' style={{ width: 200 }} onChange={this.handleSelectChange}>\n                        <Option value='Select color' disabled>Select color</Option>\n                        <Option value='#96C2F1'>Blue</Option>\n                        <Option value='#D5F1BB'>Green</Option>\n                        <Option value='#E3E197'>Yellow</Option>\n                        <Option value='#FFCC00'>Orange</Option>\n                        </Select> \n\n                        <textarea placeholder=\"Wirte your memo here!\"\n                        style={{backgroundColor: `${this.state.colors}`}} \n                        value={this.state.userTyping}\n                        onChange={(e) => this.handleOnchange(e)}></textarea>\n                        <button>Add New</button>\n                    </form>\n\n                    {this.state.stickies.map(sticky => {\n                        return <div className=\"post\" \n                                    style={{backgroundColor:`${sticky.background}`, top:`${sticky.top}px`,\n                                    left: `${sticky.letf}px`, transform: `rotate(${sticky.rotate}deg)`}} \n                                    key={sticky.id} \n                                    draggable=\"true\"\n                                    onDragEnd={this.dropSticky}>\n                                     <div className=\"btn\" style={{fontSize:'24px', color:'white', textAlign:'right', paddingBottom: '20px'}}>     \n                                        <EditFilled />\n                                        <CloseOutlined style={{paddingLeft: '10px'}}/>\n                                    </div>\n                                    <pre  className=\"post-text\">{sticky.text}</pre> \n                                </div>\n                    })}\n                  </div>\n            </div>\n        )\n    }\n}"]},"metadata":{},"sourceType":"module"}