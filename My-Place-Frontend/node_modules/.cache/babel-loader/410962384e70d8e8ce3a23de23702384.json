{"ast":null,"code":"var _jsxFileName = \"/home/lin/phase5/My-Place-Frontend/my-place/src/Component/Sticky.js\";\nimport React, { Component, PropTypes } from \"react\";\nimport { Select } from 'antd';\nimport { DragSource } from 'react-dnd';\nimport Draggable from 'react-draggable';\nimport { CloseOutlined, EditFilled } from '@ant-design/icons';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ItemTypes = {\n  Sticky: 'sticky'\n};\nconst stickySource = {\n  beginDrag(props) {\n    const {\n      id,\n      top,\n      left\n    } = props.note;\n    return {\n      id,\n      top,\n      left\n    };\n  }\n\n};\n\nconst collect = (connect, monitor) => ({\n  connectDragSource: connect.dragSource(),\n  isDragging: monitor.isDragging()\n});\n\nconst {\n  Option\n} = Select;\n\nclass Sticky extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      edit: false,\n      userTyping: \"\",\n      editTyping: \"\",\n      stickies: [],\n      colors: '#FFCC00',\n      x: \"\",\n      y: \"\"\n    };\n\n    this.generatorSticky = text => {\n      const maxWidth = window.innerWidth;\n      const maxHeight = window.innerHeight;\n      let randX = parseInt((maxWidth - 250) * Math.random(), 10);\n      let randY = parseInt((maxHeight - 350) * Math.random(), 10);\n      let background = this.state.colors;\n      let rotate = Math.floor(Math.random() * 20);\n      let id = Math.floor(Math.random() * 10);\n      let sticky = {\n        id: id,\n        text,\n        background,\n        top: randY,\n        left: randX,\n        rotate: rotate\n      };\n      return sticky;\n    };\n\n    this.addStikcy = e => {\n      e.preventDefault();\n      let newSticky = this.generatorSticky(e.target[1].value);\n      this.setState({\n        userTyping: \"\",\n        stickies: [...this.state.stickies, newSticky]\n      });\n    };\n\n    this.ediSticky = () => {\n      this.setState({\n        edit: true\n      });\n    };\n\n    this.handleSelectChange = e => {\n      this.setState({\n        colors: e\n      });\n    };\n\n    this.handleOnchange = e => {\n      this.setState({\n        userTyping: e.target.value\n      });\n    };\n\n    this.handleEditorChange = e => {\n      this.setState({\n        editTyping: e.target.value\n      });\n    };\n\n    this.handleOnStop = (x, y) => {\n      this.setState({\n        x: x,\n        y: y\n      });\n    };\n  }\n\n  // dropSticky = (e) => {\n  //     e.target.style.left = `${e.pageX - 50}px`\n  //     e.target.style.top = `${e.pageY - 600}px`\n  // }\n  // drapOver = (e) => {\n  //     e.stopPropagation()\n  //     e.preventDefault()\n  // }\n  render() {\n    const {\n      sticky,\n      connectDragSource,\n      isDragging\n    } = this.props;\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"sticky-page\",\n        children: [\"This is sticky page\", /*#__PURE__*/_jsxDEV(\"form\", {\n          onSubmit: e => this.addStikcy(e),\n          className: \"sticky\",\n          children: [/*#__PURE__*/_jsxDEV(Select, {\n            defaultValue: \"Select color\",\n            style: {\n              width: 200\n            },\n            onChange: this.handleSelectChange,\n            children: [/*#__PURE__*/_jsxDEV(Option, {\n              value: \"Select color\",\n              disabled: true,\n              children: \"Select color\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 126,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(Option, {\n              value: \"#96C2F1\",\n              children: \"Blue\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 127,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(Option, {\n              value: \"#D5F1BB\",\n              children: \"Green\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 128,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(Option, {\n              value: \"#E3E197\",\n              children: \"Yellow\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 129,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(Option, {\n              value: \"#FFCC00\",\n              children: \"Orange\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 130,\n              columnNumber: 25\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 125,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n            placeholder: \"Wirte your memo here!\",\n            style: {\n              backgroundColor: `${this.state.colors}`\n            },\n            value: this.state.userTyping,\n            onChange: e => this.handleOnchange(e)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 133,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            children: \"Add New\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 137,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 124,\n          columnNumber: 21\n        }, this), this.state.stickies.map(sticky => {\n          return connectDragSource( /*#__PURE__*/_jsxDEV(\"div\", {\n            children: this.state.edit ? /*#__PURE__*/_jsxDEV(\"textarea\", {\n              className: \"sticky-editor\",\n              style: {\n                backgroundColor: `${sticky.background}`,\n                top: `${sticky.top}px`,\n                left: `${sticky.left}px`,\n                transform: `rotate(${sticky.rotate}deg)`,\n                width: \"300px\",\n                height: \"300px\",\n                padding: \"20px\",\n                outline: \"none\"\n              },\n              value: sticky.text,\n              children: /*#__PURE__*/_jsxDEV(CloseOutlined, {\n                style: {\n                  paddingLeft: '15px'\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 149,\n                columnNumber: 45\n              }, this)\n            }, sticky.id, false, {\n              fileName: _jsxFileName,\n              lineNumber: 143,\n              columnNumber: 42\n            }, this) // :<Draggable >\n            :\n            /*#__PURE__*/\n            _jsxDEV(\"div\", {\n              className: \"post\",\n              style: {\n                backgroundColor: `${sticky.background}`,\n                top: `${sticky.top}px`,\n                left: `${sticky.left}px`,\n                transform: `rotate(${sticky.rotate}deg)`\n              },\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"btn\",\n                style: {\n                  fontSize: '24px',\n                  color: 'white',\n                  textAlign: 'right',\n                  paddingBottom: '20px'\n                },\n                children: [/*#__PURE__*/_jsxDEV(EditFilled, {\n                  onClick: () => this.ediSticky(sticky)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 161,\n                  columnNumber: 49\n                }, this), /*#__PURE__*/_jsxDEV(CloseOutlined, {\n                  style: {\n                    paddingLeft: '15px'\n                  }\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 162,\n                  columnNumber: 49\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 160,\n                columnNumber: 45\n              }, this), /*#__PURE__*/_jsxDEV(\"pre\", {\n                className: \"post-text\",\n                children: sticky.text\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 164,\n                columnNumber: 45\n              }, this)]\n            }, sticky.id, true, {\n              fileName: _jsxFileName,\n              lineNumber: 152,\n              columnNumber: 42\n            }, this) // </Draggable>\n\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 141,\n            columnNumber: 51\n          }, this));\n        })]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 121,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 120,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nSticky.propTypes = {\n  sticky: PropTypes.object.isRequired,\n  connectDragSource: PropTypes.func.isRequired,\n  isDragging: PropTypes.bool.isRequired\n};\nexport default DragSource(ItemTypes.Sticky, stickySource, collect)(Sticky);","map":{"version":3,"sources":["/home/lin/phase5/My-Place-Frontend/my-place/src/Component/Sticky.js"],"names":["React","Component","PropTypes","Select","DragSource","Draggable","CloseOutlined","EditFilled","ItemTypes","Sticky","stickySource","beginDrag","props","id","top","left","note","collect","connect","monitor","connectDragSource","dragSource","isDragging","Option","state","edit","userTyping","editTyping","stickies","colors","x","y","generatorSticky","text","maxWidth","window","innerWidth","maxHeight","innerHeight","randX","parseInt","Math","random","randY","background","rotate","floor","sticky","addStikcy","e","preventDefault","newSticky","target","value","setState","ediSticky","handleSelectChange","handleOnchange","handleEditorChange","handleOnStop","render","width","backgroundColor","map","transform","height","padding","outline","paddingLeft","fontSize","color","textAlign","paddingBottom","propTypes","object","isRequired","func","bool"],"mappings":"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","sourcesContent":["import React, { Component, PropTypes } from \"react\";\nimport { Select } from 'antd';\nimport { DragSource } from 'react-dnd'\nimport Draggable from 'react-draggable'; \nimport {  CloseOutlined, EditFilled } from '@ant-design/icons';\n\n\nconst ItemTypes = {\n    Sticky: 'sticky'\n}\n\nconst stickySource = {\n    beginDrag(props) {\n        const { id, top, left } = props.note\n        return { id, top, left }\n    }\n}\n\nconst collect = (connect, monitor) => ({\n    connectDragSource: connect.dragSource(),\n    isDragging: monitor.isDragging()\n})\n\nconst { Option } = Select;\n class Sticky extends Component{\n\n    static propTypes = {\n        sticky: PropTypes.object.isRequired,\n        connectDragSource: PropTypes.func.isRequired,\n        isDragging: PropTypes.bool.isRequired\n    }\n\n\n    state = {\n        edit: false,\n        userTyping: \"\",\n        editTyping: \"\",\n        stickies: [],\n        colors: '#FFCC00',\n        x: \"\",\n        y: \"\"\n    }\n\n    generatorSticky = (text) => {\n        const maxWidth = window.innerWidth\n        const maxHeight = window.innerHeight\n        let randX = parseInt((maxWidth - 250) * Math.random(), 10)\n        let randY = parseInt((maxHeight - 350) * Math.random(), 10)\n        let background = this.state.colors\n        let rotate = Math.floor(Math.random() * 20)\n        let id = Math.floor(Math.random() * 10)\n        let sticky = {\n            id: id,\n            text,\n            background,\n            top: randY,\n            left: randX,\n            rotate: rotate\n        }\n        return sticky\n    }\n\n\n    addStikcy = (e) => {\n        e.preventDefault()\n        let newSticky = this.generatorSticky(e.target[1].value)\n\n        this.setState({\n            userTyping: \"\",\n            stickies: [...this.state.stickies, newSticky]\n        })\n    }\n\n    ediSticky = () => {\n        this.setState({\n            edit: true\n        })\n    }\n\n    handleSelectChange = (e) => {\n        this.setState({\n            colors: e\n        })\n    }\n\n    handleOnchange = (e) => {\n        this.setState({\n            userTyping: e.target.value\n        })\n    }\n\n    handleEditorChange = (e) => {\n        this.setState({\n            editTyping: e.target.value\n        })\n    }\n\n    handleOnStop = (x, y) => {\n       this.setState({\n           x: x,\n           y: y\n       })\n\n    }\n    // dropSticky = (e) => {\n    //     e.target.style.left = `${e.pageX - 50}px`\n    //     e.target.style.top = `${e.pageY - 600}px`\n    // }\n\n    // drapOver = (e) => {\n    //     e.stopPropagation()\n    //     e.preventDefault()\n    // }\n\n    \n\n    render() {\n        const { sticky, connectDragSource, isDragging } = this.props\n        return(\n            <div>\n                <div className=\"sticky-page\" >\n                 {/* onDragOver={this.dragOver} */}\n                This is sticky page\n                    <form onSubmit={(e) => this.addStikcy(e)} className=\"sticky\">\n                        <Select defaultValue='Select color' style={{ width: 200 }} onChange={this.handleSelectChange}>\n                        <Option value='Select color' disabled>Select color</Option>\n                        <Option value='#96C2F1'>Blue</Option>\n                        <Option value='#D5F1BB'>Green</Option>\n                        <Option value='#E3E197'>Yellow</Option>\n                        <Option value='#FFCC00'>Orange</Option>\n                        </Select> \n\n                        <textarea placeholder=\"Wirte your memo here!\"\n                        style={{backgroundColor: `${this.state.colors}`}} \n                        value={this.state.userTyping}\n                        onChange={(e) => this.handleOnchange(e)}></textarea>\n                        <button>Add New</button>\n                    </form>\n\n                    {this.state.stickies.map(sticky => {\n                        return connectDragSource( <div>\n                                    {this.state.edit\n                                        ?<textarea className=\"sticky-editor\"\n                                            style={{backgroundColor:`${sticky.background}`, top:`${sticky.top}px`,\n                                            left: `${sticky.left}px`, transform: `rotate(${sticky.rotate}deg)`, width: \"300px\", height: \"300px\", padding: \"20px\",  outline: \"none\"}} \n                                            key={sticky.id} \n                                            value={sticky.text}\n                                        >\n                                            <CloseOutlined style={{paddingLeft: '15px'}}/>\n                                        </textarea>\n                                        // :<Draggable >\n                                        :<div className=\"post\" \n                                           style={{backgroundColor:`${sticky.background}`, top:`${sticky.top}px`,\n                                           left: `${sticky.left}px`, transform: `rotate(${sticky.rotate}deg)`}}\n                                            key={sticky.id} \n                                            // onStop={this.handleOnStop(DraggableData.x, DraggableData.y)}\n                                            // draggable=\"true\"\n                                            // onDragEnd={this.dropSticky}\n                                            >     \n                                            <div className=\"btn\" style={{fontSize:'24px', color:'white', textAlign:'right', paddingBottom: '20px'}}>     \n                                                <EditFilled onClick={() => this.ediSticky(sticky)}/>\n                                                <CloseOutlined style={{paddingLeft: '15px'}}/>\n                                            </div>\n                                            <pre  className=\"post-text\">{sticky.text}</pre> \n                                        </div>\n                                        // </Draggable>\n                                                                           \n                                    }\n                                </div>\n                    )})}\n                  </div>\n            </div>\n        )\n    }\n}\n\nexport default DragSource(ItemTypes.Sticky, stickySource, collect)(Sticky)"]},"metadata":{},"sourceType":"module"}