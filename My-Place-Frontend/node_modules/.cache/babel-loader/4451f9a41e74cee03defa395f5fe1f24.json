{"ast":null,"code":"var _jsxFileName = \"/home/lin/phase5/My-Place-Frontend/my-place/src/Component/Photo.js\";\nimport React, { Component } from \"react\";\nimport { Card, Upload, Modal, Form, Button, Input } from 'antd';\nimport { LoadingOutlined, PlusOutlined } from '@ant-design/icons';\nimport Navbar from './NavBar';\nimport PhotoDetial from './Container/PhotoDetail';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst FormItem = Form.Item;\nconst {\n  TextArea\n} = Input;\n\nfunction getBase64(file) {\n  return new Promise((resolve, reject) => {\n    const reader = new FileReader();\n    reader.readAsDataURL(file);\n\n    reader.onload = () => resolve(reader.result);\n\n    reader.onerror = error => reject(error);\n  });\n}\n\nexport default class Photo extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      value: '',\n      previewVisible: false,\n      previewImage: '',\n      fileList: []\n    };\n\n    this.onChange = ({\n      target: {\n        value\n      }\n    }) => {\n      this.setState({\n        value\n      });\n    };\n\n    this.handleCancel = () => this.setState({\n      previewVisible: false\n    });\n\n    this.handlePreview = async file => {\n      if (!file.url && !file.preview) {\n        file.preview = await getBase64(file.originFileObj);\n      }\n\n      this.setState({\n        previewImage: file.url || file.preview,\n        previewVisible: true\n      });\n      console.log(file);\n    };\n\n    this.handleChange = ({\n      fileList\n    }) => this.setState({\n      fileList: fileList\n    });\n\n    this.beforeUpload = file => {\n      this.setState({\n        fileList: [this.state.fileList, file]\n      });\n      return false;\n    };\n\n    this.handleSubmit = () => {\n      fetch(\"http://localhost:3000/photoupload\", {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify({\n          url: this.state.fileList,\n          user_id: this.props.loginUser.id\n        })\n      }).then(res => res.json());\n    };\n  }\n\n  render() {\n    const {\n      previewVisible,\n      previewImage,\n      fileList,\n      value\n    } = this.state;\n    const {\n      getFieldDecorator\n    } = this.props.form;\n    const formItemLayout = {\n      labelCol: {\n        span: 8\n      },\n      wrapperCol: {\n        span: 10\n      }\n    };\n    const props = {\n      fileList\n    };\n    console.log(this.state.fileList);\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"photo\",\n      children: [/*#__PURE__*/_jsxDEV(Navbar, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"photo-subnav\",\n        children: [/*#__PURE__*/_jsxDEV(\"li\", {\n          children: \"Album\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n          children: \"Photos\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"photo-btn\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          children: \"Upload Photo\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 85,\n          columnNumber: 14\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          children: \"Create Album\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 14\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Form, {\n        children: [/*#__PURE__*/_jsxDEV(FormItem, { ...formItemLayout,\n          label: \"\\u73B0\\u573A\\u56FE\\u7247\",\n          children: getFieldDecorator('fileList', {\n            initialValue: this.props.tAccessory,\n            valuePropName: 'file'\n          })( /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(Upload, {\n              name: \"file\",\n              ...props,\n              listType: \"picture-card\",\n              onPreview: this.handlePreview,\n              onChange: this.handleChange,\n              fileList: fileList,\n              accept: \".jpg,.png,.gif,.jpeg\",\n              beforeUpload: this.beforeUpload,\n              children: /*#__PURE__*/_jsxDEV(PlusOutlined, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 103,\n                columnNumber: 20\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 95,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(Modal, {\n              visible: previewVisible,\n              footer: null,\n              onCancel: this.handleCancel,\n              children: /*#__PURE__*/_jsxDEV(\"img\", {\n                alt: \"example\",\n                style: {\n                  width: '100%'\n                },\n                src: previewImage\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 106,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 105,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 94,\n            columnNumber: 15\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 90,\n          columnNumber: 18\n        }, this), /*#__PURE__*/_jsxDEV(FormItem, { ...formItemLayout,\n          children: getFieldDecorator('file', {\n            initialValue: this.props.tAccessory,\n            valuePropName: 'file'\n          })( /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"hidden\",\n            name: \"img\",\n            multiple: \"multiple\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 116,\n            columnNumber: 15\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 113,\n          columnNumber: 18\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n{\n  /* <Card title='Photo Upload'>\n       <Upload\n         listType='picture-card'\n         action='http://localhost:3000/photo'\n         fileList={fileList}\n         onPreview={this.handlePreview}\n         onChange={this.handleChange}\n       >\n         <PlusOutlined />\n         <div style={{ marginTop: 8}}>Upload</div>\n       </Upload>\n       <Modal\n           visible={previewVisible}\n           title={previewTitle}\n           footer={null}\n           onCancel={this.handleCancel}\n       >\n         <img\n           src={previewImage}\n           alt={previewTitle}\n           style={{ width: '100%', height: '100%'}}\n         />\n       </Modal>\n   <Button onClick={() => this.handleSubmit()} type='primary' >submit</Button>\n  </Card> */\n}","map":{"version":3,"sources":["/home/lin/phase5/My-Place-Frontend/my-place/src/Component/Photo.js"],"names":["React","Component","Card","Upload","Modal","Form","Button","Input","LoadingOutlined","PlusOutlined","Navbar","PhotoDetial","FormItem","Item","TextArea","getBase64","file","Promise","resolve","reject","reader","FileReader","readAsDataURL","onload","result","onerror","error","Photo","state","value","previewVisible","previewImage","fileList","onChange","target","setState","handleCancel","handlePreview","url","preview","originFileObj","console","log","handleChange","beforeUpload","handleSubmit","fetch","method","headers","body","JSON","stringify","user_id","props","loginUser","id","then","res","json","render","getFieldDecorator","form","formItemLayout","labelCol","span","wrapperCol","initialValue","tAccessory","valuePropName","width"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport { Card, Upload, Modal, Form, Button, Input } from 'antd'\nimport { LoadingOutlined, PlusOutlined } from '@ant-design/icons';\nimport Navbar from './NavBar'\nimport PhotoDetial from './Container/PhotoDetail'\n\n\nconst FormItem = Form.Item;\nconst { TextArea } = Input;\n\nfunction getBase64(file) {\n  return new Promise((resolve, reject) => {\n    const reader = new FileReader();\n    reader.readAsDataURL(file);\n    reader.onload = () => resolve(reader.result);\n    reader.onerror = error => reject(error);\n  });\n}\n\nexport default class Photo extends Component {\n\n  state = {\n    value: '',\n    previewVisible: false,\n    previewImage: '',\n    fileList:[],\n    }\n\n    onChange = ({ target: { value } }) => {\n      this.setState({ value });\n    };\n    handleCancel = () => this.setState({ previewVisible: false });\n    handlePreview = async file => {\n      if (!file.url && !file.preview) {\n        file.preview = await getBase64(file.originFileObj);\n      }\n      this.setState({\n        previewImage: file.url || file.preview,\n        previewVisible: true,\n      });\n      console.log(file);\n    };\n    handleChange = ({ fileList }) => this.setState({ fileList:fileList });\n    beforeUpload=(file)=>{\n        this.setState(({\n          fileList: [this.state.fileList, file],\n        }));\n      return false;\n    }\n\n    handleSubmit = () => {\n      fetch(\"http://localhost:3000/photoupload\", {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\",\n        },\n        body: JSON.stringify({\n          url: this.state.fileList,\n          user_id: this.props.loginUser.id\n        }),\n      })\n      .then(res => res.json())\n    }\n\n\n    render() {\n      const { previewVisible, previewImage, fileList,value} = this.state;\n\n      const { getFieldDecorator } = this.props.form;\n      const formItemLayout = {\n        labelCol: { span: 8 },\n        wrapperCol: { span: 10 },\n      };\n      const props={fileList};\n\n      console.log(this.state.fileList);\n      return (\n      <div className=\"photo\">\n          <Navbar />\n          <div className=\"photo-subnav\">\n              <li>Album</li>\n              <li>Photos</li>\n          </div>\n          <div className=\"photo-btn\">\n             <button>Upload Photo</button>\n             <button>Create Album</button>\n          </div>\n\n          <Form>\n                 <FormItem {...formItemLayout} label=\"现场图片\"> \n                 \n                 {getFieldDecorator('fileList',{initialValue:this.props.tAccessory,valuePropName: 'file'})\n                (\n              <div >\n                <Upload name=\"file\" {...props}\n                        listType=\"picture-card\"\n                        onPreview={this.handlePreview}\n                        onChange={this.handleChange}\n                        fileList={fileList}\n                        accept=\".jpg,.png,.gif,.jpeg\"\n                        beforeUpload={this.beforeUpload}\n                >\n                   <PlusOutlined />\n                </Upload>\n                <Modal visible={previewVisible} footer={null} onCancel={this.handleCancel}>\n                  <img alt=\"example\" style={{ width: '100%' }} src={previewImage} />\n                </Modal>\n              </div>\n            )}\n                 </FormItem>\n\n\n                 <FormItem {...formItemLayout} >\n            {getFieldDecorator('file',{initialValue:this.props.tAccessory,valuePropName: 'file'})\n            (\n              <input type=\"hidden\" name=\"img\" multiple=\"multiple\"  />\n            )}</FormItem>\n\n          </Form>\n\n      </div>\n      )\n    }\n  }\n\n\n          {/* <Card title='Photo Upload'>\n                <Upload\n                  listType='picture-card'\n                  action='http://localhost:3000/photo'\n                  fileList={fileList}\n                  onPreview={this.handlePreview}\n                  onChange={this.handleChange}\n                >\n                  <PlusOutlined />\n                  <div style={{ marginTop: 8}}>Upload</div>\n                </Upload>\n                <Modal\n                    visible={previewVisible}\n                    title={previewTitle}\n                    footer={null}\n                    onCancel={this.handleCancel}\n                >\n                  <img\n                    src={previewImage}\n                    alt={previewTitle}\n                    style={{ width: '100%', height: '100%'}}\n                  />\n                </Modal>\n            <Button onClick={() => this.handleSubmit()} type='primary' >submit</Button>\n        </Card> */}"]},"metadata":{},"sourceType":"module"}