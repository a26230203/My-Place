{"ast":null,"code":"var _jsxFileName = \"/home/lin/phase5/My-Place-Frontend/my-place/src/Component/Weather.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport { AiOutlineDoubleLeft, AiOutlineDashboard, AiOutlineCloud } from \"react-icons/ai\";\nimport { FiCloudRain } from \"react-icons/fi\";\nimport { WiThermometer, WiStrongWind, WiThermometerInternal } from \"react-icons/wi\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst api = {\n  key: \"56f5e6f96b876ed60f2717fd26dd3b1e\",\n  base: \"https://api.openweathermap.org/data/2.5/\"\n};\n\nfunction Weather() {\n  _s();\n\n  const [query, setQuery] = useState('');\n  const [weather, setWeather] = useState({});\n  const [display, setDisplay] = useState(false);\n  useEffect(() => {\n    fetch(`${api.base}weather?zip=11223&units=metric&APPID=${api.key}`).then(res => res.json()).then(result => {\n      setWeather(result);\n      console.log(result);\n    });\n  }, []); //   const search = evt => {\n  //     if (evt.key === \"Enter\") {\n  //       fetch(`${api.base}weather?q=${query}&units=metric&APPID=${api.key}`)\n  //         .then(res => res.json())\n  //         .then(result => {\n  //           setWeather(result);\n  //           setQuery('');\n  //           console.log(result);\n  //         });\n  //     }\n  //   }\n\n  const dateBuilder = d => {\n    let months = [\"January\", \"February\", \"March\", \"April\", \"May\", \"June\", \"July\", \"August\", \"September\", \"October\", \"November\", \"December\"];\n    let days = [\"Sunday\", \"Monday\", \"Tuesday\", \"Wednesday\", \"Thursday\", \"Friday\", \"Saturday\"];\n    let day = days[d.getDay()];\n    let date = d.getDate();\n    let month = months[d.getMonth()];\n    let year = d.getFullYear();\n    return `${day} ${date} ${month} ${year}`;\n  };\n\n  const handleDisplay = () => {\n    setDisplay(!display);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: typeof weather.main != \"undefined\" ? /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"location-box\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"location\",\n          children: [weather.name, \", \", weather.sys.country]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"date\",\n          children: dateBuilder(new Date())\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"weather-box\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"temp\",\n          children: [Math.round(weather.main.temp), \"\\xB0c\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"weather\",\n          children: weather.weather[0].icon\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 13\n        }, this), console.log(weather.weather[0])]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 9\n    }, this) : ''\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 55,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Weather, \"8szApHPwdu9LtuH/PBj7FWo103w=\");\n\n_c = Weather;\nexport default Weather;\n{\n  /* <div className=\"search-box\">\n   <input \n     type=\"text\"\n     className=\"search-bar\"\n     placeholder=\"Search...\"\n     onChange={e => setQuery(e.target.value)}\n     value={query}\n     onKeyPress={search}\n   />\n  </div> */\n} //   {(typeof weather.main != \"undefined\") ? (\n//     <div>\n//       <div className=\"location-box\">\n//         <div className=\"location\">{weather.name}, {weather.sys.country}</div>\n//         <div className=\"date\">{dateBuilder(new Date())}</div>\n//       </div>\n//       <div className=\"weather-box\">\n//         <div className=\"temp\">\n//           {Math.round(weather.main.temp)}Â°c\n//         </div>\n//         <div className=\"weather\">{weather.weather[0].main}</div>\n//         {console.log(weather.weather[0])}\n//       </div>\n//     </div>\n//     ) : ('')}\n// </div>\n\nvar _c;\n\n$RefreshReg$(_c, \"Weather\");","map":{"version":3,"sources":["/home/lin/phase5/My-Place-Frontend/my-place/src/Component/Weather.js"],"names":["React","useEffect","useState","AiOutlineDoubleLeft","AiOutlineDashboard","AiOutlineCloud","FiCloudRain","WiThermometer","WiStrongWind","WiThermometerInternal","api","key","base","Weather","query","setQuery","weather","setWeather","display","setDisplay","fetch","then","res","json","result","console","log","dateBuilder","d","months","days","day","getDay","date","getDate","month","getMonth","year","getFullYear","handleDisplay","main","name","sys","country","Date","Math","round","temp","icon"],"mappings":"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","sourcesContent":["  \nimport React, { useEffect, useState } from 'react';\nimport { AiOutlineDoubleLeft, AiOutlineDashboard, AiOutlineCloud } from \"react-icons/ai\";\nimport { FiCloudRain } from \"react-icons/fi\";\nimport { WiThermometer, WiStrongWind, WiThermometerInternal } from \"react-icons/wi\";\n\nconst api = {\n  key: \"56f5e6f96b876ed60f2717fd26dd3b1e\",\n  base: \"https://api.openweathermap.org/data/2.5/\"\n}\n\nfunction Weather() {\n  const [query, setQuery] = useState('');\n  const [weather, setWeather] = useState({});\n  const [display, setDisplay] = useState(false)\n\n\n  useEffect(() => {\n    fetch(`${api.base}weather?zip=11223&units=metric&APPID=${api.key}`)\n        .then(res => res.json())\n        .then(result => {\n          setWeather(result);\n          console.log(result);\n        });\n  },[]) \n\n//   const search = evt => {\n//     if (evt.key === \"Enter\") {\n//       fetch(`${api.base}weather?q=${query}&units=metric&APPID=${api.key}`)\n//         .then(res => res.json())\n//         .then(result => {\n//           setWeather(result);\n//           setQuery('');\n//           console.log(result);\n//         });\n//     }\n//   }\n\n  const dateBuilder = (d) => {\n    let months = [\"January\", \"February\", \"March\", \"April\", \"May\", \"June\", \"July\", \"August\", \"September\", \"October\", \"November\", \"December\"];\n    let days = [\"Sunday\", \"Monday\", \"Tuesday\", \"Wednesday\", \"Thursday\", \"Friday\", \"Saturday\"];\n\n    let day = days[d.getDay()];\n    let date = d.getDate();\n    let month = months[d.getMonth()];\n    let year = d.getFullYear();\n    return `${day} ${date} ${month} ${year}`\n  }\n\n  const handleDisplay = () => {\n    setDisplay(!display)\n  }\n\n  return (\n    <div >\n        {/* <div className=\"search-box\">\n          <input \n            type=\"text\"\n            className=\"search-bar\"\n            placeholder=\"Search...\"\n            onChange={e => setQuery(e.target.value)}\n            value={query}\n            onKeyPress={search}\n          />\n        </div> */}\n        {(typeof weather.main != \"undefined\") ? (\n        <div>\n          <div className=\"location-box\">\n            <div className=\"location\">{weather.name}, {weather.sys.country}</div>\n            <div className=\"date\">{dateBuilder(new Date())}</div>\n          </div>\n          <div className=\"weather-box\">\n            <div className=\"temp\">\n              {Math.round(weather.main.temp)}Â°c\n            </div>\n            <div className=\"weather\">{weather.weather[0].icon}</div>\n            {console.log(weather.weather[0])}\n          </div>\n        </div>\n        ) : ('')}\n    </div>\n  );\n}\n\nexport default Weather;\n\n\n\n\n        {/* <div className=\"search-box\">\n          <input \n            type=\"text\"\n            className=\"search-bar\"\n            placeholder=\"Search...\"\n            onChange={e => setQuery(e.target.value)}\n            value={query}\n            onKeyPress={search}\n          />\n        </div> */}\n      //   {(typeof weather.main != \"undefined\") ? (\n      //     <div>\n      //       <div className=\"location-box\">\n      //         <div className=\"location\">{weather.name}, {weather.sys.country}</div>\n      //         <div className=\"date\">{dateBuilder(new Date())}</div>\n      //       </div>\n      //       <div className=\"weather-box\">\n      //         <div className=\"temp\">\n      //           {Math.round(weather.main.temp)}Â°c\n      //         </div>\n      //         <div className=\"weather\">{weather.weather[0].main}</div>\n      //         {console.log(weather.weather[0])}\n      //       </div>\n      //     </div>\n      //     ) : ('')}\n      // </div>"]},"metadata":{},"sourceType":"module"}