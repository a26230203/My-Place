{"ast":null,"code":"var _jsxFileName = \"/home/lin/phase5/My-Place-Frontend/my-place/src/Component/test.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, Component } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction WebStyle(props) {\n  _s();\n\n  const [imgState, setimgState] = useState(true);\n  const [imgData, setimgData] = useState('');\n\n  const _upImg = () => {\n    let upimgs = document.getElementById(\"upimg\");\n    upimgs.click();\n  };\n\n  const upChange = event => {\n    let imgfile = event.currentTarget.files[0]; ///获得input的第一个图片\n\n    console.log('我是图片源文件', imgfile);\n\n    if (imgfile.size > 1024000) {\n      alert('大于了1m，请重新上传', 3);\n      let upimgs = document.getElementById(\"upimg\");\n      upimgs.value = '';\n    } else {\n      //使用readAsDataURL来进行回显图片\n      let reader = new FileReader(); //filereader.readasdataurl读取图像文件转换为流\n\n      reader.readAsDataURL(imgfile);\n\n      reader.onload = function (event) {\n        //读取数据时会触发一个load事件\n        let imgs = this.result;\n        console.log('我是回显的Base64图片文件', imgs);\n        setimgState(false);\n        setimgData(imgs);\n      };\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"page-body\",\n    children: [/*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: _upImg,\n      children: imgState ? '上传' : '重新上传'\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"img\", {\n        src: imgData,\n        style: {\n          width: '200px',\n          height: '200px'\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      id: \"upimg\",\n      type: \"file\",\n      style: {\n        display: 'none'\n      },\n      accept: \"image/png\",\n      onChange: upChange\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 31,\n    columnNumber: 9\n  }, this);\n}\n\n_s(WebStyle, \"EMWFCqTmSCC4+8UYer9Az/p//QY=\");\n\n_c = WebStyle;\n\nclass WebStylec extends Component {\n  constructor(props) {\n    super(props);\n\n    this._upImg = () => {\n      let upimgs = document.getElementById(\"upimg\");\n      upimgs.click();\n    };\n\n    this.upChange = event => {\n      let _this = this; //烦人的this\n\n\n      let imgfile = event.currentTarget.files[0]; ///获得input的第一个图片\n\n      console.log('我是图片源文件', imgfile);\n\n      if (imgfile.size > 1024000) {\n        alert('大于了1m，请重新上传', 3);\n        let upimgs = document.getElementById(\"upimg\");\n        upimgs.value = '';\n      } else {\n        //使用readAsDataURL来进行回显图片\n        let reader = new FileReader(); //filereader.readasdataurl读取图像文件转换为流\n\n        reader.readAsDataURL(imgfile);\n\n        reader.onload = function (event) {\n          //读取数据时会触发一个load事件\n          let imgs = this.result;\n          console.log('我是回显的Base64图片文件', imgs);\n          _this.state.imgState = false;\n          _this.state.imgData = imgs;\n\n          _this.setState(_this.state);\n        };\n      }\n    };\n\n    this.state = {\n      imgState: true,\n      imgData: ''\n    };\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"page-body\",\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: this._upImg,\n        children: this.state.imgState ? '上传' : '重新上传'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(\"img\", {\n          src: this.state.imgData,\n          style: {\n            width: '200px',\n            height: '200px'\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 89,\n          columnNumber: 17\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        id: \"upimg\",\n        type: \"file\",\n        style: {\n          display: 'none'\n        },\n        accept: \"image/png\",\n        onChange: this.upChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nexport default WebStylec;\n\nvar _c;\n\n$RefreshReg$(_c, \"WebStyle\");","map":{"version":3,"sources":["/home/lin/phase5/My-Place-Frontend/my-place/src/Component/test.js"],"names":["React","useState","Component","WebStyle","props","imgState","setimgState","imgData","setimgData","_upImg","upimgs","document","getElementById","click","upChange","event","imgfile","currentTarget","files","console","log","size","alert","value","reader","FileReader","readAsDataURL","onload","imgs","result","width","height","display","WebStylec","constructor","_this","state","setState","render"],"mappings":"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","sourcesContent":["import React, { useState,Component } from 'react'\nfunction WebStyle(props) {\n    const [ imgState, setimgState ] = useState(true);\n    const [ imgData,setimgData ] = useState('');\n    const _upImg = () => {\n        let upimgs = document.getElementById(\"upimg\")\n        upimgs.click();\n    }\n    const upChange = (event) => {\n        let imgfile = event.currentTarget.files[0];///获得input的第一个图片\n        console.log('我是图片源文件',imgfile)\n        if (imgfile.size > 1024000) {\n            alert('大于了1m，请重新上传', 3)\n            let upimgs = document.getElementById(\"upimg\")\n            upimgs.value=''\n        }\n        else {\n            //使用readAsDataURL来进行回显图片\n            let reader = new FileReader();//filereader.readasdataurl读取图像文件转换为流\n            reader.readAsDataURL(imgfile);\n\n            reader.onload = function (event) {//读取数据时会触发一个load事件\n                let imgs = this.result\n                console.log('我是回显的Base64图片文件',imgs)\n                setimgState(false)\n                setimgData(imgs)\n            };\n        }\n    }\n    return (\n        <div className='page-body'>\n            <button onClick={_upImg}>\n                {\n                    imgState?'上传':'重新上传'\n                }\n            </button>\n            <div>\n                <img src={imgData} style={{ width: '200px', height: '200px' }} />\n            </div>\n            <input id='upimg' type='file' style={{ display: 'none' }} accept='image/png' onChange={upChange} />\n        </div>\n    )\n}\n\nclass WebStylec extends Component{\n    constructor(props){\n        super(props)\n        this.state = {\n            imgState:true,\n            imgData:''\n        }\n    }\n    _upImg = () => {\n        let upimgs = document.getElementById(\"upimg\")\n        upimgs.click();\n    }\n    upChange = (event) => {\n        let _this = this//烦人的this\n        let imgfile = event.currentTarget.files[0];///获得input的第一个图片\n        console.log('我是图片源文件',imgfile)\n        if (imgfile.size > 1024000) {\n            alert('大于了1m，请重新上传', 3)\n            let upimgs = document.getElementById(\"upimg\")\n            upimgs.value=''\n        }\n        else {\n            //使用readAsDataURL来进行回显图片\n            let reader = new FileReader();//filereader.readasdataurl读取图像文件转换为流\n            reader.readAsDataURL(imgfile);\n\n            reader.onload = function (event) {//读取数据时会触发一个load事件\n                let imgs = this.result\n                console.log('我是回显的Base64图片文件',imgs)\n                _this.state.imgState = false\n                _this.state.imgData = imgs\n                _this.setState(_this.state)\n            };\n        }\n    }\n    render(){\n        return(\n            <div className='page-body'>\n            <button onClick={this._upImg}>\n                {\n                    this.state.imgState?'上传':'重新上传'\n                }\n            </button>\n            <div>\n                <img src={this.state.imgData} style={{ width: '200px', height: '200px' }} />\n            </div>\n            <input id='upimg' type='file' style={{ display: 'none' }} accept='image/png' onChange={this.upChange} />\n        </div>\n        )\n    }\n}\n\nexport default WebStylec\n"]},"metadata":{},"sourceType":"module"}