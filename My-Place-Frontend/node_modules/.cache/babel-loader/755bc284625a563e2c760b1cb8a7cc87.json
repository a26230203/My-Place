{"ast":null,"code":"var _jsxFileName = \"/home/lin/phase5/My-Place-Frontend/my-place/src/Component/Journal.js\";\nimport React, { Component } from \"react\";\nimport Navbar from './NavBar';\nimport JournalList from './Container/JournalList';\nimport { render } from \"@testing-library/react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default class Journal extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      display: true,\n      journals: [],\n      journalDrafts: [],\n      title: \"\",\n      content: \"\"\n    };\n\n    this.handleDisplay = () => {\n      this.setState({\n        display: !display\n      });\n    };\n\n    this.handlePublish = () => {\n      const newJouranl = {\n        user_id: props.loginUser.id,\n        title: title,\n        content: content\n      };\n      fetch(\"http://localhost:3000/journals\", {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify(newJouranl)\n      }).then(res => res.json()).then(journal => {\n        this.setState({\n          journals: [...this.state.journals, journal]\n        });\n      });\n    };\n\n    this.handleDelete = jouranl => {\n      fetch(`http://localhost:3000/journals/${jouranl.id}`, {\n        method: \"DELETE\"\n      }).then(res => res.json()).then(journal => {\n        this.setState({\n          journals: [...this.state.journals]\n        });\n        alert(\"Your journal is being deleted\");\n      });\n    };\n  }\n\n  componentDidMount() {\n    fetch(\"http://localhost:3000/journals\").then(res => res.json()).then(journals => setJournals(journals));\n    fetch(\"http://localhost:3000/journal_drafts\").then(res => res.json()).then(journalDrafts => setJournalDrafts(journalDrafts));\n  } // useEffect(() => {\n  //   fetch(\"http://localhost:3000/journals\")\n  //   .then(res => res.json())\n  //   .then(journals => setJournals(journals))\n  //   fetch(\"http://localhost:3000/journal_drafts\")\n  //   .then(res => res.json())\n  //   .then(journalDrafts => setJournalDrafts(journalDrafts))\n  // }, [journals])\n\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: Object.keys(props.loginUser).length > 0 ? /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(Navbar, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 91,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"sub navbar\",\n          children: /*#__PURE__*/_jsxDEV(\"li\", {\n            children: [\"Draft(\", journalDrafts.length === 0 ? null : journalDrafts.length - 1, \")\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 93,\n            columnNumber: 19\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 92,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => this.handleDisplay(),\n          children: \"Write a journal\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 96,\n          columnNumber: 13\n        }, this), display ? /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"journal\",\n          children: journals.length !== 0 ? this.state.journals.map(journal => {\n            return /*#__PURE__*/_jsxDEV(JournalList, {\n              journal: journal,\n              handleDelete: handleDelete\n            }, journal.id, false, {\n              fileName: _jsxFileName,\n              lineNumber: 102,\n              columnNumber: 26\n            }, this);\n          }) : /*#__PURE__*/_jsxDEV(\"div\", {\n            children: \"Here is your jourany begin\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 103,\n            columnNumber: 18\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 99,\n          columnNumber: 14\n        }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n            children: \"New Journal\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 109,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"writing\",\n            children: [/*#__PURE__*/_jsxDEV(\"input\", {\n              className: \"title\",\n              placeholder: \"Please enter your title\",\n              type: \"text\",\n              value: title,\n              onChange: e => setTitle(e.target.value)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 111,\n              columnNumber: 23\n            }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n              children: \"Content\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 116,\n              columnNumber: 23\n            }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n              className: \"content\",\n              placeholder: \"Please enter your content\",\n              value: content,\n              onChange: e => setContent(e.target.value)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 117,\n              columnNumber: 23\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"btn\",\n              children: [/*#__PURE__*/_jsxDEV(\"button\", {\n                onClick: e => handlePublish(e),\n                children: \"Publish\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 122,\n                columnNumber: 25\n              }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                children: \"Save as Draft\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 123,\n                columnNumber: 25\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 121,\n              columnNumber: 21\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 110,\n            columnNumber: 19\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 108,\n          columnNumber: 14\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 12\n      }, this) : props.history.push('/')\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 7\n    }, this);\n  }\n\n}","map":{"version":3,"sources":["/home/lin/phase5/My-Place-Frontend/my-place/src/Component/Journal.js"],"names":["React","Component","Navbar","JournalList","render","Journal","state","display","journals","journalDrafts","title","content","handleDisplay","setState","handlePublish","newJouranl","user_id","props","loginUser","id","fetch","method","headers","body","JSON","stringify","then","res","json","journal","handleDelete","jouranl","alert","componentDidMount","setJournals","setJournalDrafts","Object","keys","length","map","e","setTitle","target","value","setContent","history","push"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport Navbar from './NavBar'\nimport JournalList from './Container/JournalList'\nimport { render } from \"@testing-library/react\";\n\nexport default class Journal extends Component {\n\n  state = {\n    display: true,\n    journals: [],\n    journalDrafts: [],\n    title: \"\",\n    content: \"\"\n  } \n\n  // let [display, setDisplay] = useState(true)\n  // let [journals, setJournals] = useState([])\n  // let [journalDrafts, setJournalDrafts] = useState([])\n  // let [title, setTitle] = useState(\"\")\n  // let [content, setContent] = useState(\"\")\n\n\n  handleDisplay = ()=> {\n    this.setState({\n      display: !display\n    })\n  }\n\n  componentDidMount() {\n    fetch(\"http://localhost:3000/journals\")\n    .then(res => res.json())\n    .then(journals => setJournals(journals))\n\n    fetch(\"http://localhost:3000/journal_drafts\")\n    .then(res => res.json())\n    .then(journalDrafts => setJournalDrafts(journalDrafts))\n\n  }\n\n  // useEffect(() => {\n  //   fetch(\"http://localhost:3000/journals\")\n  //   .then(res => res.json())\n  //   .then(journals => setJournals(journals))\n\n  //   fetch(\"http://localhost:3000/journal_drafts\")\n  //   .then(res => res.json())\n  //   .then(journalDrafts => setJournalDrafts(journalDrafts))\n  // }, [journals])\n\n   handlePublish = () => {\n    const newJouranl = {\n      user_id: props.loginUser.id,\n      title: title,\n      content: content\n    }\n\n    fetch(\"http://localhost:3000/journals\", {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n      },\n      body: JSON.stringify(newJouranl),\n    })\n    .then(res => res.json())\n    .then(journal => {\n      this.setState({\n        journals: [...this.state.journals, journal]\n      })\n    })\n  }\n\n   handleDelete = (jouranl) => {\n    fetch(`http://localhost:3000/journals/${jouranl.id}`, {\n      method: \"DELETE\"\n    })\n    .then(res => res.json())\n    .then(journal => {\n      this.setState({\n        journals: [...this.state.journals]\n      })\n      alert(\"Your journal is being deleted\")\n    })\n  }\n\n\n  render() {\n    return (\n      <div>\n        { Object.keys(props.loginUser).length > 0 \n          ?<div>\n            <Navbar />\n              <div className=\"sub navbar\">\n                  <li>Draft({journalDrafts.length === 0 ? null : journalDrafts.length - 1 })</li>\n              </div>\n\n            <button onClick={() => this.handleDisplay()}>Write a journal</button>\n\n            {display\n            ?<div className=\"journal\">\n                {journals.length !== 0 \n                ? this.state.journals.map(journal => {\n                  return <JournalList journal={journal} key={journal.id} handleDelete={handleDelete}/>})\n                :<div>\n                  Here is your jourany begin\n                </div>\n                }\n            </div>\n            :<div>\n                <h2>New Journal</h2>\n                  <div className=\"writing\"> \n                      <input className=\"title\"\n                          placeholder=\"Please enter your title\"\n                          type=\"text\"\n                          value = {title}\n                          onChange={(e) => setTitle(e.target.value)} />\n                      <h2>Content</h2>\n                      <textarea className=\"content\"\n                          placeholder=\"Please enter your content\"\n                          value = {content}\n                          onChange={(e) => setContent(e.target.value)} />\n                    <div className=\"btn\">\n                        <button onClick={(e) => handlePublish(e)}>Publish</button>\n                        <button>Save as Draft</button>\n                    </div>\n                  </div>\n            </div>}\n          </div>\n          :  props.history.push('/')\n        }\n      </div>\n\n    );\n  }\n}\n"]},"metadata":{},"sourceType":"module"}