{"ast":null,"code":"var _jsxFileName = \"/home/lin/phase5/My-Place-Frontend/my-place/src/Component/Photo.js\";\nimport React from \"react\";\nimport { Card, Upload, Modal, Form, Button, Image, Input, Select, message } from 'antd';\nimport { PlusOutlined, CloseCircleOutlined } from '@ant-design/icons';\nimport { MdPhoto, MdPhotoAlbum } from \"react-icons/md\";\nimport Navbar from './NavBar';\nimport PhotoList from \"./Container/PhotoList\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst {\n  Option\n} = Select;\n\nfunction getBase64(file) {\n  return new Promise((resolve, reject) => {\n    const reader = new FileReader();\n    reader.readAsDataURL(file);\n\n    reader.onload = () => resolve(reader.result);\n\n    reader.onerror = error => reject(error);\n  });\n}\n\nexport default class Photo extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      photos: [],\n      album: [],\n      display: true,\n      albumForm: false,\n      previewVisible: false,\n      previewImage: '',\n      previewTitle: '',\n      fileList: [],\n      upFiles: [],\n      albumName: ''\n    };\n\n    this.handlClickPhoto = () => {\n      this.props.history.push('/photo');\n    };\n\n    this.handlClickAlbum = () => {\n      this.props.history.push('/album');\n    };\n\n    this.handleDisplay = () => {\n      this.setState({\n        display: !this.state.display\n      });\n    };\n\n    this.onChange = ({\n      target: {\n        value\n      }\n    }) => {\n      this.setState({\n        value\n      });\n    };\n\n    this.handleChange = ({\n      fileList\n    }) => this.setState({\n      fileList\n    });\n\n    this.handleCancel = () => this.setState({\n      previewVisible: false\n    });\n\n    this.handlePreview = async file => {\n      if (!file.url && !file.preview) {\n        file.preview = await getBase64(file.originFileObj);\n      }\n\n      this.setState({\n        previewImage: file.url || file.preview,\n        previewVisible: true,\n        previewTitle: file.name || file.url.substring(file.url.lastIndexOf('/') + 1)\n      });\n    };\n\n    this.beforeUpload = file => {\n      const {\n        upFiles\n      } = this.state;\n      upFiles.push(file);\n      this.setState({\n        upFiles: upFiles\n      });\n    };\n\n    this.handleSubmit = () => {\n      const {\n        upFiles\n      } = this.state;\n      let album_id = null;\n\n      if (this.state.albumName !== \"\") {\n        const findAlbum = this.state.album.find(album => album.name.toLowerCase() == this.state.albumName.toLowerCase());\n\n        if (findAlbum === undefined) {\n          message.info(\"Ablum is not exist, please creat a album\");\n        } else {\n          album_id = findAlbum.id;\n          console.log(album_id);\n        }\n      }\n\n      let formData = new FormData();\n      upFiles.forEach(file => {\n        formData.append('image', file);\n        formData.append('name', file.name);\n        formData.append('user_id', this.props.loginUser.id);\n        formData.append('album_id', album_id);\n        fetch(\"http://localhost:3000/photoupload\", {\n          method: \"POST\",\n          body: formData\n        }).then(res => res.json()).then(() => {\n          this.componentDidMount();\n        });\n      });\n      this.setState({\n        fileList: [],\n        upFiles: []\n      });\n      this.handleDisplay();\n    };\n\n    this.handleDelete = photoObj => {\n      fetch(`http://localhost:3000/photos/${photoObj.id}`, {\n        method: \"DELETE\"\n      }).then(res => res.json()).then(() => {\n        this.componentDidMount();\n      });\n    };\n\n    this.handleAlbumName = e => {\n      this.setState({\n        albumName: e.target.value\n      });\n    };\n\n    this.AddPhotoToAlbum = (photoObj, albumId) => {\n      if (albumId == \"\") {\n        this.handleConfirm();\n      } else {\n        fetch(`http://localhost:3000/photos/${photoObj.id}`, {\n          method: \"PATCH\",\n          headers: {\n            \"Content-Type\": \"application/json\"\n          },\n          body: JSON.stringify({\n            album_id: albumId\n          })\n        }).then(res => {\n          message.success('Photo added to album');\n        });\n      }\n    };\n\n    this.handleCreatalbum = () => {\n      this.setState({\n        albumForm: !this.state.albumForm\n      });\n    };\n\n    this.handleConfirm = () => {\n      const newAlbun = {\n        name: this.state.albumName,\n        user_id: this.props.loginUser.id\n      };\n      fetch(\"http://localhost:3000/albums\", {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify(newAlbun)\n      }).then(res => {\n        message.success(' Album is created');\n        this.handleCreatalbum();\n        this.componentDidMount();\n      });\n    };\n  }\n\n  componentDidMount() {\n    fetch(\"http://localhost:3000/photos\").then(res => res.json()).then(photos => this.setState({\n      photos\n    }));\n    fetch(\"http://localhost:3000/albums\").then(res => res.json()).then(album => this.setState({\n      album\n    }));\n  } //go to photo route\n\n\n  render() {\n    const {\n      previewVisible,\n      previewImage,\n      fileList,\n      previewTitle\n    } = this.state;\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"photo\",\n      children: Object.keys(this.props.loginUser).length > 0 ? /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"photo-page-header\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 199,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Navbar, {\n          className: \"photo-main-nav\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 200,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"photo-subdiv\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"photo-subnav\",\n            children: [/*#__PURE__*/_jsxDEV(\"li\", {\n              className: \"photo-subnav-li\",\n              onClick: () => this.handlClickPhoto(),\n              children: [/*#__PURE__*/_jsxDEV(MdPhoto, {\n                style: {\n                  fontSize: 30\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 204,\n                columnNumber: 17\n              }, this), \"Photos\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 203,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n              className: \"photo-subnav-li\",\n              onClick: () => this.handlClickAlbum(),\n              children: [/*#__PURE__*/_jsxDEV(MdPhotoAlbum, {\n                style: {\n                  fontSize: 30\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 207,\n                columnNumber: 17\n              }, this), \"Album\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 206,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 202,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"photo-btn\",\n            children: [/*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"photo-btn\",\n              onClick: () => this.handleDisplay(),\n              children: \"Upload Photo\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 211,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"photo-btn\",\n              onClick: () => this.handleCreatalbum(),\n              children: \"Create Album\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 212,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 210,\n            columnNumber: 13\n          }, this), this.state.albumForm ? /*#__PURE__*/_jsxDEV(\"form\", {\n            children: [/*#__PURE__*/_jsxDEV(Input, {\n              addonBefore: \"Album Title:\",\n              style: {\n                width: '500px'\n              },\n              value: this.state.albumName,\n              placeholder: \"Album name\",\n              onChange: e => this.handleAlbumName(e)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 216,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Button, {\n              type: \"primary\",\n              shape: \"round\",\n              onClick: () => this.handleConfirm(),\n              children: \"Confirm\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 221,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(CloseCircleOutlined, {\n              onClick: () => this.handleCreatalbum()\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 222,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 215,\n            columnNumber: 14\n          }, this) : null]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 201,\n          columnNumber: 13\n        }, this), this.state.display ? /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"photo-page-list\",\n          children: /*#__PURE__*/_jsxDEV(Image.PreviewGroup, {\n            children: this.state.photos.map(photo => {\n              return /*#__PURE__*/_jsxDEV(Card, {\n                className: \"photo-list-card\",\n                children: /*#__PURE__*/_jsxDEV(PhotoList, {\n                  photo: photo,\n                  handleDelete: this.handleDelete,\n                  album: this.state.album,\n                  AddPhotoToAlbum: this.AddPhotoToAlbum\n                }, photo.id, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 233,\n                  columnNumber: 35\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 232,\n                columnNumber: 32\n              }, this);\n            })\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 229,\n            columnNumber: 21\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 228,\n          columnNumber: 16\n        }, this) : /*#__PURE__*/_jsxDEV(Form, {\n          children: /*#__PURE__*/_jsxDEV(Card, {\n            className: \"photo-upload-card\",\n            title: \"Photo Upload\",\n            headStyle: {\n              fontSize: '40px'\n            },\n            children: [/*#__PURE__*/_jsxDEV(CloseCircleOutlined, {\n              className: \"photo-upload-cancel\",\n              style: {\n                fontSize: '40px'\n              },\n              onClick: () => this.handleDisplay()\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 242,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 243,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(Input, {\n              addonBefore: \"Album Title:\",\n              style: {\n                width: '300px'\n              },\n              value: this.state.albumName,\n              placeholder: \"Option\",\n              onChange: e => this.handleAlbumName(e)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 244,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(Upload, {\n              listType: \"picture-card\",\n              fileList: fileList,\n              multiple: true,\n              onPreview: this.handlePreview,\n              onChange: this.handleChange,\n              beforeUpload: this.beforeUpload,\n              children: [/*#__PURE__*/_jsxDEV(PlusOutlined, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 257,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                style: {\n                  marginTop: 8\n                },\n                children: \"Upload\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 258,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 249,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(Modal, {\n              visible: previewVisible,\n              title: previewTitle,\n              footer: null,\n              onCancel: this.handleCancel,\n              children: /*#__PURE__*/_jsxDEV(\"img\", {\n                src: previewImage,\n                alt: previewTitle,\n                style: {\n                  width: '100%',\n                  height: '100%'\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 266,\n                columnNumber: 21\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 260,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(Button, {\n              onClick: () => this.handleSubmit(),\n              type: \"primary\",\n              children: \"submit\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 272,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 241,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 240,\n          columnNumber: 14\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 198,\n        columnNumber: 12\n      }, this) : this.props.history.push('/')\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 196,\n      columnNumber: 7\n    }, this);\n  }\n\n}","map":{"version":3,"sources":["/home/lin/phase5/My-Place-Frontend/my-place/src/Component/Photo.js"],"names":["React","Card","Upload","Modal","Form","Button","Image","Input","Select","message","PlusOutlined","CloseCircleOutlined","MdPhoto","MdPhotoAlbum","Navbar","PhotoList","Option","getBase64","file","Promise","resolve","reject","reader","FileReader","readAsDataURL","onload","result","onerror","error","Photo","Component","state","photos","album","display","albumForm","previewVisible","previewImage","previewTitle","fileList","upFiles","albumName","handlClickPhoto","props","history","push","handlClickAlbum","handleDisplay","setState","onChange","target","value","handleChange","handleCancel","handlePreview","url","preview","originFileObj","name","substring","lastIndexOf","beforeUpload","handleSubmit","album_id","findAlbum","find","toLowerCase","undefined","info","id","console","log","formData","FormData","forEach","append","loginUser","fetch","method","body","then","res","json","componentDidMount","handleDelete","photoObj","handleAlbumName","e","AddPhotoToAlbum","albumId","handleConfirm","headers","JSON","stringify","success","handleCreatalbum","newAlbun","user_id","render","Object","keys","length","fontSize","width","map","photo","marginTop","height"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport { Card, Upload, Modal, Form, Button, Image, Input, Select, message  } from 'antd'\nimport {  PlusOutlined, CloseCircleOutlined } from '@ant-design/icons';\nimport { MdPhoto, MdPhotoAlbum} from \"react-icons/md\";\nimport Navbar from './NavBar'\nimport PhotoList from \"./Container/PhotoList\";\n\nconst { Option } = Select;\n\nfunction getBase64(file) {\n  return new Promise((resolve, reject) => {\n    const reader = new FileReader();\n    reader.readAsDataURL(file);\n    reader.onload = () => resolve(reader.result);\n    reader.onerror = error => reject(error);\n  });\n}\n\nexport default class Photo extends React.Component {\n\n  state = {\n    photos: [],\n    album: [],\n    display: true,\n    albumForm: false,\n    previewVisible: false,\n    previewImage: '',\n    previewTitle: '',\n    fileList: [], \n    upFiles:[],\n    albumName: '',\n    }\n    componentDidMount() {\n      fetch(\"http://localhost:3000/photos\")\n      .then(res => res.json())\n      .then(photos => this.setState({photos}))\n\n      fetch(\"http://localhost:3000/albums\")\n      .then(res => res.json())\n      .then(album => this.setState({album}))\n    }\n\n    //go to photo route\n    handlClickPhoto = () => {\n      this.props.history.push('/photo')\n    }\n\n\n    //go to album route\n    handlClickAlbum = () => {\n      this.props.history.push('/album')\n    }\n\n    // handle diplay photo list\n    handleDisplay = () => {\n      this.setState({\n        display: !this.state.display\n      })\n    }\n\n    //change upload value\n    onChange = ({ target: { value } }) => {\n      this.setState({ value });\n    };\n\n    //handle Onchange of upload\n    handleChange = ({ fileList }) => this.setState({ fileList });\n\n    //handle cancel of upload\n    handleCancel = () => this.setState({ previewVisible: false });\n\n    //handle preview of uploadalbumName\n    handlePreview = async file => {\n      if (!file.url && !file.preview) {\n        file.preview = await getBase64(file.originFileObj);\n      }\n  \n      this.setState({\n        previewImage: file.url || file.preview,\n        previewVisible: true,\n        previewTitle: file.name || file.url.substring(file.url.lastIndexOf('/') + 1),\n      });\n    };\n\n    beforeUpload = (file) => {\n      const {upFiles} = this.state;\n      upFiles.push(file);\n      this.setState({upFiles: upFiles});\n    }\n\n    //handle submit upload\n    handleSubmit = () => {\n      const {upFiles} = this.state;\n      let album_id = null;\n      if(this.state.albumName !== \"\") {\n        const findAlbum = this.state.album.find(album => album.name.toLowerCase() == this.state.albumName.toLowerCase())\n        if(findAlbum === undefined) {\n          message.info(\"Ablum is not exist, please creat a album\")\n        }else{\n          album_id = findAlbum.id\n          console.log(album_id)\n        }\n      }\n      let formData = new FormData();\n       upFiles.forEach((file) => {\n        formData.append('image', file);\n        formData.append('name', file.name);\n        formData.append('user_id', this.props.loginUser.id);\n        formData.append('album_id', album_id);\n         fetch(\"http://localhost:3000/photoupload\", {\n           method: \"POST\",\n           body: formData\n         })\n         .then(res => res.json())\n         .then(() => {\n           this.componentDidMount()\n         })\n        });\n      this.setState({\n        fileList: [],\n        upFiles: []\n      })\n      this.handleDisplay()\n  } \n\n   //Handle delete photo\n   handleDelete =(photoObj) => {\n    fetch(`http://localhost:3000/photos/${photoObj.id}`, {\n        method: \"DELETE\",\n      })\n      .then(res => res.json())\n      .then(() => {\n        this.componentDidMount()\n      })\n    }\n\n    //Handle albun name \n    handleAlbumName = (e) => {\n        this.setState({\n          albumName: e.target.value\n        })\n    }\n\n    //Add photo to album\n    AddPhotoToAlbum = (photoObj, albumId) => {\n        if(albumId == \"\") {\n          this.handleConfirm()\n        }else{\n            fetch(`http://localhost:3000/photos/${photoObj.id}`, {\n            method: \"PATCH\",\n            headers: {\n              \"Content-Type\": \"application/json\",\n            },\n            body: JSON.stringify({\n              album_id: albumId\n            }),\n          })\n            .then(res => {\n                message.success('Photo added to album');\n            })\n        }\n    }\n\n    //Display album form\n    handleCreatalbum = () => {\n      this.setState({\n        albumForm : !this.state.albumForm\n      })\n    }\n\n    //Create ablum\n    handleConfirm = () => {\n      const newAlbun ={\n        name: this.state.albumName,\n        user_id: this.props.loginUser.id\n      }\n      fetch(\"http://localhost:3000/albums\", {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\",\n        },\n        body: JSON.stringify(newAlbun),\n      })\n      .then(res => {\n        message.success(' Album is created')\n        this.handleCreatalbum()\n        this.componentDidMount()\n      })\n    }\n\n\n\n    render() {\n      const { previewVisible, previewImage, fileList, previewTitle } = this.state;\n      return (\n      <div className=\"photo\">\n        { Object.keys(this.props.loginUser).length > 0 \n          ?<div>\n            <div className=\"photo-page-header\"></div>\n            <Navbar className= \"photo-main-nav\" />\n            <div className=\"photo-subdiv\">\n            <div className=\"photo-subnav\">\n                <li className=\"photo-subnav-li\" onClick={() => this.handlClickPhoto()}>\n                <MdPhoto style={{fontSize: 30  }}/>\n                  Photos</li>\n                <li  className=\"photo-subnav-li\" onClick={() => this.handlClickAlbum()}>\n                <MdPhotoAlbum style={{fontSize: 30  }}/>\n                  Album</li>\n            </div>\n            <div className=\"photo-btn\">\n              <button className=\"photo-btn\" onClick={() => this.handleDisplay()}>Upload Photo</button>\n              <button className=\"photo-btn\" onClick={() => this.handleCreatalbum()}>Create Album</button>\n            </div>\n            {this.state.albumForm\n            ?<form>\n              <Input addonBefore=\"Album Title:\" \n              style={{width: '500px'}} \n              value={this.state.albumName}\n              placeholder=\"Album name\"\n              onChange={(e) => this.handleAlbumName(e)}/>\n              <Button type=\"primary\" shape=\"round\" onClick={() => this.handleConfirm()}>Confirm</Button>\n              <CloseCircleOutlined onClick={() => this.handleCreatalbum()} />\n            </form>\n            :null\n          }\n          </div>\n            {this.state.display\n              ?<div className=\"photo-page-list\">\n                    <Image.PreviewGroup>\n                    {\n                    this.state.photos.map(photo => {\n                        return <Card className=\"photo-list-card\">\n                                  <PhotoList photo={photo} key={photo.id} handleDelete={this.handleDelete} album={this.state.album} \n                                  AddPhotoToAlbum={this.AddPhotoToAlbum}/> \n                               </Card>\n                      })\n                    }\n                    </Image.PreviewGroup>\n              </div>\n            :<Form >\n            <Card className=\"photo-upload-card\" title='Photo Upload' headStyle={{fontSize: '40px'}}>\n                  <CloseCircleOutlined className=\"photo-upload-cancel\" style={{fontSize: '40px'}} onClick={() => this.handleDisplay()}/>\n                  <br/>\n                  <Input addonBefore=\"Album Title:\" \n                    style={{width: '300px'}} \n                    value={this.state.albumName}\n                    placeholder=\"Option\"\n                    onChange={(e) => this.handleAlbumName(e)}/>\n                  <Upload\n                    listType='picture-card'\n                    fileList={fileList}\n                    multiple={true}\n                    onPreview={this.handlePreview}\n                    onChange={this.handleChange}\n                    beforeUpload={this.beforeUpload}\n                  >\n                    <PlusOutlined />\n                    <div style={{ marginTop: 8}}>Upload</div>\n                  </Upload>\n                  <Modal\n                      visible={previewVisible}\n                      title={previewTitle}\n                      footer={null}\n                      onCancel={this.handleCancel}\n                  >\n                    <img\n                      src={previewImage}\n                      alt={previewTitle}\n                      style={{ width: '100%', height: '100%'}}\n                    />\n                  </Modal>\n              <Button onClick={() => this.handleSubmit()} type='primary' >submit</Button>\n            </Card>\n            </Form>\n          } \n          </div>\n          :this.props.history.push('/')\n        }\n      </div>\n      )\n    }\n  }\n"]},"metadata":{},"sourceType":"module"}