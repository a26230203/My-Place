{"ast":null,"code":"var _jsxFileName = \"/home/lin/phase5/My-Place-Frontend/my-place/src/Component/Container/JouranlEdit.js\";\nimport React, { Component } from \"react\";\nimport Navbar from '../NavBar';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default class JournalEdit extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      title: \"\",\n      content: \"\"\n    };\n\n    this.handlePublish = () => {\n      const updateJouranl = {\n        user_id: this.props.loginUser.id,\n        title: this.state.title,\n        content: this.state.content\n      };\n      fetch(`http://localhost:3000/journals/${props.currentJouranl.id}`, {\n        method: \"PATCH\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify(updateJouranl)\n      }).then(res => res.json()).then(() => {\n        alert(\"Your edit is saved\");\n        this.setState({\n          title: \"\",\n          content: \"\"\n        });\n        props.history.push('/journal');\n      });\n    };\n\n    this.handleSave = () => {\n      const newJouranlDraft = {\n        user_id: this.props.loginUser.id,\n        title: this.state.title,\n        content: this.state.content\n      };\n      fetch(\"http://localhost:3000/journal_drafts\", {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify(newJouranlDraft)\n      }).then(res => res.json()).then(() => {\n        alert(\"You draft is saved\");\n        this.setState({\n          title: \"\",\n          content: \"\"\n        });\n      });\n    };\n\n    this.handleCancelClick = () => {\n      props.history.push('journal');\n    };\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"hello\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 9\n    }, this);\n  }\n\n} // const handlePublish = () => {\n//   const updateJouranl = {\n//     user_id: props.loginUser.id,\n//     title: title,\n//     content: content\n//   }\n//   fetch(`http://localhost:3000/journals/${props.currentJouranl.id}`, {\n//     method: \"PATCH\",\n//     headers: {\n//       \"Content-Type\": \"application/json\",\n//     },\n//     body: JSON.stringify(updateJouranl),\n//   })\n//   .then(res => res.json())\n//   .then(() => {\n//     alert(\"Your edit is saved\")\n//     props.history.push('/journal')\n//   })\n// }\n// const handleSave = () => {\n//   const newJouranlDraft = {\n//     user_id: props.loginUser.id,\n//     title: title,\n//     content: content\n//   }\n//   fetch(\"http://localhost:3000/journal_drafts\", {\n//     method: \"POST\",\n//     headers: {\n//       \"Content-Type\": \"application/json\",\n//     },\n//     body: JSON.stringify(newJouranlDraft),\n//   })\n//   .then(res => res.json())\n//   .then(() => {\n//     alert(\"You draft is saved\")\n//   })\n// }\n// const handleCancelClick = () => {\n//   props.history.push('journal')\n// }\n//   return (\n//     <div className=\"journal-edit\">\n//       {Object.keys(props.loginUser).length > 0 \n//         ?<div>\n//         <Navbar />\n//         <div className=\"editing\"> \n//                   <input className=\"title\"\n//                       type=\"text\"\n//                       value = {title}\n//                       onChange={(e) => setTitle(e.target.value)} />\n//                   <h2>Content</h2>\n//                   <textarea className=\"content\"\n//                       value = {content}\n//                       onChange={(e) => setContent(e.target.value)} />\n//                 <div className=\"btn\">\n//                     <button className=\"btn-publish\" onClick={() => handlePublish()}>Publish</button>\n//                     <button className=\"btn-cancel\" onClick={() => handleCancelClick()}>Cancel</button>\n//                     <button className=\"btn-save\" onClick={() => handleSave()}>Save as Draft</button>\n//                 </div>\n//               </div>\n//           </div>\n//           :props.history.push('/')    \n//         }\n//     </div>\n//   );","map":{"version":3,"sources":["/home/lin/phase5/My-Place-Frontend/my-place/src/Component/Container/JouranlEdit.js"],"names":["React","Component","Navbar","JournalEdit","state","title","content","handlePublish","updateJouranl","user_id","props","loginUser","id","fetch","currentJouranl","method","headers","body","JSON","stringify","then","res","json","alert","setState","history","push","handleSave","newJouranlDraft","handleCancelClick","render"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,MAAP,MAAmB,WAAnB;;AAEA,eAAe,MAAMC,WAAN,SAA0BF,SAA1B,CAAoC;AAAA;AAAA;AAAA,SAC/CG,KAD+C,GACvC;AACNC,MAAAA,KAAK,EAAE,EADD;AAENC,MAAAA,OAAO,EAAE;AAFH,KADuC;;AAAA,SAQ/CC,aAR+C,GAQ/B,MAAM;AACtB,YAAMC,aAAa,GAAG;AACpBC,QAAAA,OAAO,EAAE,KAAKC,KAAL,CAAWC,SAAX,CAAqBC,EADV;AAEpBP,QAAAA,KAAK,EAAE,KAAKD,KAAL,CAAWC,KAFE;AAGpBC,QAAAA,OAAO,EAAE,KAAKF,KAAL,CAAWE;AAHA,OAAtB;AAMAO,MAAAA,KAAK,CAAE,kCAAiCH,KAAK,CAACI,cAAN,CAAqBF,EAAG,EAA3D,EAA8D;AACjEG,QAAAA,MAAM,EAAE,OADyD;AAEjEC,QAAAA,OAAO,EAAE;AACP,0BAAgB;AADT,SAFwD;AAKjEC,QAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAeX,aAAf;AAL2D,OAA9D,CAAL,CAOCY,IAPD,CAOMC,GAAG,IAAIA,GAAG,CAACC,IAAJ,EAPb,EAQCF,IARD,CAQM,MAAM;AACVG,QAAAA,KAAK,CAAC,oBAAD,CAAL;AACA,aAAKC,QAAL,CAAc;AACZnB,UAAAA,KAAK,EAAE,EADK;AAEZC,UAAAA,OAAO,EAAE;AAFG,SAAd;AAIAI,QAAAA,KAAK,CAACe,OAAN,CAAcC,IAAd,CAAmB,UAAnB;AACD,OAfD;AAgBD,KA/BgD;;AAAA,SAkCjDC,UAlCiD,GAkCpC,MAAM;AACjB,YAAMC,eAAe,GAAG;AACtBnB,QAAAA,OAAO,EAAE,KAAKC,KAAL,CAAWC,SAAX,CAAqBC,EADR;AAEtBP,QAAAA,KAAK,EAAE,KAAKD,KAAL,CAAWC,KAFI;AAGtBC,QAAAA,OAAO,EAAE,KAAKF,KAAL,CAAWE;AAHE,OAAxB;AAMAO,MAAAA,KAAK,CAAC,sCAAD,EAAyC;AAC5CE,QAAAA,MAAM,EAAE,MADoC;AAE5CC,QAAAA,OAAO,EAAE;AACP,0BAAgB;AADT,SAFmC;AAK5CC,QAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAeS,eAAf;AALsC,OAAzC,CAAL,CAOCR,IAPD,CAOMC,GAAG,IAAIA,GAAG,CAACC,IAAJ,EAPb,EAQCF,IARD,CAQM,MAAM;AACVG,QAAAA,KAAK,CAAC,oBAAD,CAAL;AACA,aAAKC,QAAL,CAAc;AACZnB,UAAAA,KAAK,EAAE,EADK;AAEZC,UAAAA,OAAO,EAAE;AAFG,SAAd;AAID,OAdD;AAeD,KAxDgD;;AAAA,SA0DjDuB,iBA1DiD,GA0D7B,MAAM;AACxBnB,MAAAA,KAAK,CAACe,OAAN,CAAcC,IAAd,CAAmB,SAAnB;AACD,KA5DgD;AAAA;;AAgE/CI,EAAAA,MAAM,GAAG;AACP,wBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADF;AAKD;;AAtE8C,C,CAwEjD;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAGA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAEA;AACA;AACA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA","sourcesContent":["import React, { Component } from \"react\";\nimport Navbar from '../NavBar'\n\nexport default class JournalEdit extends Component {\n    state = {\n      title: \"\",\n      content: \"\"\n    }\n\n\n\n    handlePublish = () => {\n    const updateJouranl = {\n      user_id: this.props.loginUser.id,\n      title: this.state.title,\n      content: this.state.content\n    }\n\n    fetch(`http://localhost:3000/journals/${props.currentJouranl.id}`, {\n      method: \"PATCH\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n      },\n      body: JSON.stringify(updateJouranl),\n    })\n    .then(res => res.json())\n    .then(() => {\n      alert(\"Your edit is saved\")\n      this.setState({\n        title: \"\",\n        content: \"\"\n      })\n      props.history.push('/journal')\n    })\n  }\n\n\n  handleSave = () => {\n    const newJouranlDraft = {\n      user_id: this.props.loginUser.id,\n      title: this.state.title,\n      content: this.state.content\n    }\n\n    fetch(\"http://localhost:3000/journal_drafts\", {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n      },\n      body: JSON.stringify(newJouranlDraft),\n    })\n    .then(res => res.json())\n    .then(() => {\n      alert(\"You draft is saved\")\n      this.setState({\n        title: \"\",\n        content: \"\"\n      })\n    })\n  }\n\n  handleCancelClick = () => {\n    props.history.push('journal')\n  }\n\n\n  \n    render() {\n      return(\n        <div>\n          hello\n        </div>\n      )\n    }\n  }\n  // const handlePublish = () => {\n  //   const updateJouranl = {\n  //     user_id: props.loginUser.id,\n  //     title: title,\n  //     content: content\n  //   }\n\n  //   fetch(`http://localhost:3000/journals/${props.currentJouranl.id}`, {\n  //     method: \"PATCH\",\n  //     headers: {\n  //       \"Content-Type\": \"application/json\",\n  //     },\n  //     body: JSON.stringify(updateJouranl),\n  //   })\n  //   .then(res => res.json())\n  //   .then(() => {\n  //     alert(\"Your edit is saved\")\n  //     props.history.push('/journal')\n  //   })\n  // }\n\n\n  // const handleSave = () => {\n  //   const newJouranlDraft = {\n  //     user_id: props.loginUser.id,\n  //     title: title,\n  //     content: content\n  //   }\n\n  //   fetch(\"http://localhost:3000/journal_drafts\", {\n  //     method: \"POST\",\n  //     headers: {\n  //       \"Content-Type\": \"application/json\",\n  //     },\n  //     body: JSON.stringify(newJouranlDraft),\n  //   })\n  //   .then(res => res.json())\n  //   .then(() => {\n  //     alert(\"You draft is saved\")\n      \n  //   })\n  // }\n\n  // const handleCancelClick = () => {\n  //   props.history.push('journal')\n  // }\n\n\n  //   return (\n  //     <div className=\"journal-edit\">\n  //       {Object.keys(props.loginUser).length > 0 \n  //         ?<div>\n  //         <Navbar />\n  //         <div className=\"editing\"> \n  //                   <input className=\"title\"\n  //                       type=\"text\"\n  //                       value = {title}\n  //                       onChange={(e) => setTitle(e.target.value)} />\n  //                   <h2>Content</h2>\n  //                   <textarea className=\"content\"\n  //                       value = {content}\n  //                       onChange={(e) => setContent(e.target.value)} />\n  //                 <div className=\"btn\">\n  //                     <button className=\"btn-publish\" onClick={() => handlePublish()}>Publish</button>\n  //                     <button className=\"btn-cancel\" onClick={() => handleCancelClick()}>Cancel</button>\n  //                     <button className=\"btn-save\" onClick={() => handleSave()}>Save as Draft</button>\n  //                 </div>\n  //               </div>\n  //           </div>\n  //           :props.history.push('/')    \n  //         }\n  //     </div>\n\n  //   );"]},"metadata":{},"sourceType":"module"}