{"ast":null,"code":"var _jsxFileName = \"/home/lin/phase5/My-Place-Frontend/my-place/src/Component/Photo.js\";\nimport React from \"react\";\nimport { Card, Upload, Modal, Form, Button } from 'antd';\nimport { PlusOutlined } from '@ant-design/icons';\nimport Navbar from './NavBar';\nimport PhotoList from \"./Container/PhotoList\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction getBase64(file) {\n  return new Promise((resolve, reject) => {\n    const reader = new FileReader();\n    reader.readAsDataURL(file);\n\n    reader.onload = () => resolve(reader.result);\n\n    reader.onerror = error => reject(error);\n  });\n}\n\nexport default class Photo extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      photos: [],\n      display: true,\n      previewVisible: false,\n      previewImage: '',\n      previewTitle: '',\n      fileList: [],\n      upFiles: []\n    };\n\n    this.handleDisplay = () => {\n      this.setState({\n        display: !this.state.display\n      });\n    };\n\n    this.onChange = ({\n      target: {\n        value\n      }\n    }) => {\n      this.setState({\n        value\n      });\n    };\n\n    this.handleChange = ({\n      fileList\n    }) => this.setState({\n      fileList\n    });\n\n    this.handleCancel = () => this.setState({\n      previewVisible: false\n    });\n\n    this.handlePreview = async file => {\n      if (!file.url && !file.preview) {\n        file.preview = await getBase64(file.originFileObj);\n      }\n\n      this.setState({\n        previewImage: file.url || file.preview,\n        previewVisible: true,\n        previewTitle: file.name || file.url.substring(file.url.lastIndexOf('/') + 1)\n      });\n    };\n\n    this.beforeUpload = file => {\n      const {\n        upFiles\n      } = this.state;\n      upFiles.push(file);\n      this.setState({\n        upFiles: upFiles\n      });\n    };\n\n    this.handleSubmit = () => {\n      const {\n        upFiles\n      } = this.state;\n      const formData = new FormData();\n      upFiles.forEach(file => {\n        formData.append('image', file);\n        formData.append('name', file.name);\n        formData.append('user_id', this.props.loginUser.id);\n        fetch(\"http://localhost:3000/photoupload\", {\n          method: \"POST\",\n          body: this.state.fileList\n        }).then(res => res.json()).then(() => {\n          this.setState({\n            fileList: [],\n            upFiles: []\n          });\n          this.handleDisplay();\n          this.componentDidMount();\n        });\n      });\n    };\n\n    this.handleDelete = photoObj => {\n      fetch(`http://localhost:3000/photos/${photoObj.id}`, {\n        method: \"DELETE\"\n      }).then(res => res.json()).then(() => {\n        this.componentDidMount();\n      });\n    };\n  }\n\n  componentDidMount() {\n    fetch(\"http://localhost:3000/photos\").then(res => res.json()).then(photos => this.setState({\n      photos\n    }));\n  } // handle diplay photo list\n\n\n  render() {\n    const {\n      previewVisible,\n      previewImage,\n      fileList,\n      previewTitle\n    } = this.state;\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"photo\",\n      children: Object.keys(this.props.loginUser).length > 0 ? /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(Navbar, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 114,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"photo-subnav\",\n          children: [/*#__PURE__*/_jsxDEV(\"li\", {\n            children: \"Album\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 116,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n            children: \"Photos\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 117,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 115,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"photo-btn\",\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => this.handleDisplay(),\n            children: \"Upload Photo\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 120,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            children: \"Create Album\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 121,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 119,\n          columnNumber: 13\n        }, this), this.state.display ? /*#__PURE__*/_jsxDEV(\"div\", {\n          children: this.state.photos.map(photo => {\n            return /*#__PURE__*/_jsxDEV(PhotoList, {\n              photo: photo,\n              handleDelete: this.handleDelete\n            }, photo.id, false, {\n              fileName: _jsxFileName,\n              lineNumber: 126,\n              columnNumber: 28\n            }, this);\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 124,\n          columnNumber: 16\n        }, this) : /*#__PURE__*/_jsxDEV(Form, {\n          children: /*#__PURE__*/_jsxDEV(Card, {\n            title: \"Photo Upload\",\n            children: [/*#__PURE__*/_jsxDEV(Upload, {\n              listType: \"picture-card\",\n              fileList: fileList,\n              multiple: true,\n              onPreview: this.handlePreview,\n              onChange: this.handleChange,\n              beforeUpload: this.beforeUpload,\n              children: [/*#__PURE__*/_jsxDEV(PlusOutlined, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 140,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                style: {\n                  marginTop: 8\n                },\n                children: \"Upload\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 141,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 132,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(Modal, {\n              visible: previewVisible,\n              title: previewTitle,\n              footer: null,\n              onCancel: this.handleCancel,\n              children: /*#__PURE__*/_jsxDEV(\"img\", {\n                src: previewImage,\n                alt: previewTitle,\n                style: {\n                  width: '100%',\n                  height: '100%'\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 149,\n                columnNumber: 21\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 143,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(Button, {\n              onClick: () => this.handleSubmit(),\n              type: \"primary\",\n              children: \"submit\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 155,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 131,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 130,\n          columnNumber: 14\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 113,\n        columnNumber: 12\n      }, this) : this.props.history.push('/')\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 7\n    }, this);\n  }\n\n}","map":{"version":3,"sources":["/home/lin/phase5/My-Place-Frontend/my-place/src/Component/Photo.js"],"names":["React","Card","Upload","Modal","Form","Button","PlusOutlined","Navbar","PhotoList","getBase64","file","Promise","resolve","reject","reader","FileReader","readAsDataURL","onload","result","onerror","error","Photo","Component","state","photos","display","previewVisible","previewImage","previewTitle","fileList","upFiles","handleDisplay","setState","onChange","target","value","handleChange","handleCancel","handlePreview","url","preview","originFileObj","name","substring","lastIndexOf","beforeUpload","push","handleSubmit","formData","FormData","forEach","append","props","loginUser","id","fetch","method","body","then","res","json","componentDidMount","handleDelete","photoObj","render","Object","keys","length","map","photo","marginTop","width","height","history"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport { Card, Upload, Modal, Form, Button } from 'antd'\nimport {  PlusOutlined } from '@ant-design/icons';\nimport Navbar from './NavBar'\nimport PhotoList from \"./Container/PhotoList\";\n\n\nfunction getBase64(file) {\n  return new Promise((resolve, reject) => {\n    const reader = new FileReader();\n    reader.readAsDataURL(file);\n    reader.onload = () => resolve(reader.result);\n    reader.onerror = error => reject(error);\n  });\n}\n\n\nexport default class Photo extends React.Component {\n\n  state = {\n    photos: [],\n    display: true,\n    previewVisible: false,\n    previewImage: '',\n    previewTitle: '',\n    fileList: [], \n    upFiles:[]\n    }\n    componentDidMount() {\n      fetch(\"http://localhost:3000/photos\")\n      .then(res => res.json())\n      .then(photos => this.setState({photos}))\n    }\n\n    // handle diplay photo list\n    handleDisplay = () => {\n      this.setState({\n        display: !this.state.display\n      })\n    }\n\n    //change upload value\n    onChange = ({ target: { value } }) => {\n      this.setState({ value });\n    };\n\n    //handle Onchange of upload\n    handleChange = ({ fileList }) => this.setState({ fileList });\n\n    //handle cancel of upload\n    handleCancel = () => this.setState({ previewVisible: false });\n\n    //handle preview of upload\n    handlePreview = async file => {\n      if (!file.url && !file.preview) {\n        file.preview = await getBase64(file.originFileObj);\n      }\n  \n      this.setState({\n        previewImage: file.url || file.preview,\n        previewVisible: true,\n        previewTitle: file.name || file.url.substring(file.url.lastIndexOf('/') + 1),\n      });\n    };\n\n  \n    beforeUpload = (file) => {\n      const {upFiles} = this.state;\n      upFiles.push(file);\n      this.setState({upFiles: upFiles});\n    }\n\n    //handle submit upload\n    handleSubmit = () => {\n      const {upFiles} = this.state;\n      const formData = new FormData();\n       upFiles.forEach((file) => {\n        formData.append('image', file);\n        formData.append('name', file.name);\n         formData.append('user_id', this.props.loginUser.id);\n        fetch(\"http://localhost:3000/photoupload\", {\n          method: \"POST\",\n          body: this.state.fileList\n        })\n        .then(res => res.json())\n        .then(() =>{\n          this.setState({\n            fileList: [],\n            upFiles: []\n          })\n          this.handleDisplay()\n          this.componentDidMount()\n        })\n      });\n  } \n\n   \n   handleDelete =(photoObj) => {\n    fetch(`http://localhost:3000/photos/${photoObj.id}`, {\n        method: \"DELETE\",\n      })\n      .then(res => res.json())\n      .then(() => {\n        this.componentDidMount()\n      })\n}\n\n    render() {\n      const { previewVisible, previewImage, fileList, previewTitle } = this.state;\n      return (\n      <div className=\"photo\">\n        { Object.keys(this.props.loginUser).length > 0 \n          ?<div>\n            <Navbar />\n            <div className=\"photo-subnav\">\n                <li>Album</li>\n                <li>Photos</li>\n            </div>\n            <div className=\"photo-btn\">\n              <button onClick={() => this.handleDisplay()}>Upload Photo</button>\n              <button>Create Album</button>\n            </div>\n            {this.state.display\n              ?<div>{\n                this.state.photos.map(photo => {\n                    return <PhotoList photo={photo} key={photo.id} handleDelete={this.handleDelete}/>\n                  })\n              }\n              </div>\n            :<Form >\n            <Card title='Photo Upload'>\n                  <Upload\n                    listType='picture-card'\n                    fileList={fileList}\n                    multiple={true}\n                    onPreview={this.handlePreview}\n                    onChange={this.handleChange}\n                    beforeUpload={this.beforeUpload}\n                  >\n                    <PlusOutlined />\n                    <div style={{ marginTop: 8}}>Upload</div>\n                  </Upload>\n                  <Modal\n                      visible={previewVisible}\n                      title={previewTitle}\n                      footer={null}\n                      onCancel={this.handleCancel}\n                  >\n                    <img\n                      src={previewImage}\n                      alt={previewTitle}\n                      style={{ width: '100%', height: '100%'}}\n                    />\n                  </Modal>\n              <Button onClick={() => this.handleSubmit()} type='primary' >submit</Button>\n            </Card>\n            </Form>\n          } \n          </div>\n          :this.props.history.push('/')\n        }\n      </div>\n      )\n    }\n  }\n"]},"metadata":{},"sourceType":"module"}