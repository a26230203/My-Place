{"ast":null,"code":"var _jsxFileName = \"/home/lin/phase5/My-Place-Frontend/my-place/src/Component/Weather.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport { AiOutlineDoubleLeft, AiOutlineDashboard, AiOutlineCloud } from \"react-icons/ai\";\nimport { FiCloudRain } from \"react-icons/fi\";\nimport { WiThermometer, WiStrongWind, WiThermometerInternal } from \"react-icons/wi\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst api = {\n  key: \"56f5e6f96b876ed60f2717fd26dd3b1e\",\n  base: \"https://api.openweathermap.org/data/2.5/\"\n};\n\nfunction Weather() {\n  _s();\n\n  const [query, setQuery] = useState('');\n  const [weather, setWeather] = useState({});\n  const [display, setDisplay] = useState(false);\n  useEffect(() => {\n    fetch(`${api.base}weather?zip=11223&units=metric&APPID=${api.key}`).then(res => res.json()).then(result => {\n      setWeather(result);\n      console.log(result);\n    });\n  }, []); //   const search = evt => {\n  //     if (evt.key === \"Enter\") {\n  //       fetch(`${api.base}weather?q=${query}&units=metric&APPID=${api.key}`)\n  //         .then(res => res.json())\n  //         .then(result => {\n  //           setWeather(result);\n  //           setQuery('');\n  //           console.log(result);\n  //         });\n  //     }\n  //   }\n\n  const dateBuilder = d => {\n    let months = [\"January\", \"February\", \"March\", \"April\", \"May\", \"June\", \"July\", \"August\", \"September\", \"October\", \"November\", \"December\"];\n    let days = [\"Sunday\", \"Monday\", \"Tuesday\", \"Wednesday\", \"Thursday\", \"Friday\", \"Saturday\"];\n    let day = days[d.getDay()];\n    let date = d.getDate();\n    let month = months[d.getMonth()];\n    let year = d.getFullYear();\n    return `${day} ${date} ${month} ${year}`;\n  };\n\n  const handleDisplay = () => {\n    setDisplay(!display);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"weather-info\",\n      style: {\n        height: display ? \"380px\" : \"242.5px\"\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"cond\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"cond-logo\",\n          children: /*#__PURE__*/_jsxDEV(\"img\", {\n            src: weather.weather[0].icon,\n            alt: \"\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 65,\n            columnNumber: 11\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"cond-txt\",\n          children: weather.weather[0].main\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"tmp\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"now-tmp\",\n          children: [weather.main.tmp, /*#__PURE__*/_jsxDEV(\"sup\", {\n            children: \"\\xB0F\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 72,\n            columnNumber: 11\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 9\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"more\",\n        style: {\n          transform: display ? \"rotate(90deg)\" : \"rotate(-90deg\"\n        },\n        children: /*#__PURE__*/_jsxDEV(AiOutlineDoubleLeft, {\n          onClick: () => handleDisplay()\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 9\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 11\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 58,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Weather, \"8szApHPwdu9LtuH/PBj7FWo103w=\");\n\n_c = Weather;\nexport default Weather;\n\nvar _c;\n\n$RefreshReg$(_c, \"Weather\");","map":{"version":3,"sources":["/home/lin/phase5/My-Place-Frontend/my-place/src/Component/Weather.js"],"names":["React","useEffect","useState","AiOutlineDoubleLeft","AiOutlineDashboard","AiOutlineCloud","FiCloudRain","WiThermometer","WiStrongWind","WiThermometerInternal","api","key","base","Weather","query","setQuery","weather","setWeather","display","setDisplay","fetch","then","res","json","result","console","log","dateBuilder","d","months","days","day","getDay","date","getDate","month","getMonth","year","getFullYear","handleDisplay","height","icon","main","tmp","transform"],"mappings":"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","sourcesContent":["  \nimport React, { useEffect, useState } from 'react';\nimport { AiOutlineDoubleLeft, AiOutlineDashboard, AiOutlineCloud } from \"react-icons/ai\";\nimport { FiCloudRain } from \"react-icons/fi\";\nimport { WiThermometer, WiStrongWind, WiThermometerInternal } from \"react-icons/wi\";\n\nconst api = {\n  key: \"56f5e6f96b876ed60f2717fd26dd3b1e\",\n  base: \"https://api.openweathermap.org/data/2.5/\"\n}\n\nfunction Weather() {\n  const [query, setQuery] = useState('');\n  const [weather, setWeather] = useState({});\n  const [display, setDisplay] = useState(false)\n\n\n  useEffect(() => {\n    fetch(`${api.base}weather?zip=11223&units=metric&APPID=${api.key}`)\n        .then(res => res.json())\n        .then(result => {\n          setWeather(result);\n          console.log(result);\n        });\n  },[]) \n\n  \n\n\n//   const search = evt => {\n//     if (evt.key === \"Enter\") {\n//       fetch(`${api.base}weather?q=${query}&units=metric&APPID=${api.key}`)\n//         .then(res => res.json())\n//         .then(result => {\n//           setWeather(result);\n//           setQuery('');\n//           console.log(result);\n//         });\n//     }\n//   }\n\n  const dateBuilder = (d) => {\n    let months = [\"January\", \"February\", \"March\", \"April\", \"May\", \"June\", \"July\", \"August\", \"September\", \"October\", \"November\", \"December\"];\n    let days = [\"Sunday\", \"Monday\", \"Tuesday\", \"Wednesday\", \"Thursday\", \"Friday\", \"Saturday\"];\n\n    let day = days[d.getDay()];\n    let date = d.getDate();\n    let month = months[d.getMonth()];\n    let year = d.getFullYear();\n    return `${day} ${date} ${month} ${year}`\n  }\n\n  const handleDisplay = () => {\n    setDisplay(!display)\n  }\n\n  return (\n    <div >\n          <div\n      className=\"weather-info\"\n      style={{ height: display ? \"380px\" : \"242.5px\" }}\n    >\n      <div className=\"cond\">\n        <div className=\"cond-logo\">\n          <img src={weather.weather[0].icon} alt=\"\" />\n        </div>\n        <div className=\"cond-txt\">{weather.weather[0].main}</div>\n      </div>\n      <div className=\"tmp\">\n        <div className=\"now-tmp\">\n          {weather.main.tmp}\n          <sup>&deg;F</sup>\n        </div>\n      </div>\n      <div\n        className=\"more\"\n        style={{ transform: display ? \"rotate(90deg)\" : \"rotate(-90deg\" }}\n      >\n        <AiOutlineDoubleLeft onClick={() => handleDisplay()} />\n      </div>\n      {/* <div className=\"details\">\n        {details.map((item, index) => (\n          <div key={index} className=\"detail\">\n            <div className=\"icon\">{item.icon}</div>\n            <div className=\"txt\">\n              <div className=\"detail-title\">{item.title}</div>\n              <div className=\"detail-value\">{item.value}</div>\n            </div>\n          </div>\n        ))}\n      </div> */}\n    </div>\n\n\n        {/* <div className=\"search-box\">\n          <input \n            type=\"text\"\n            className=\"search-bar\"\n            placeholder=\"Search...\"\n            onChange={e => setQuery(e.target.value)}\n            value={query}\n            onKeyPress={search}\n          />\n        </div> */}\n        {/* {(typeof weather.main != \"undefined\") ? (\n        <div>\n          <div className=\"location-box\">\n            <div className=\"location\">{weather.name}, {weather.sys.country}</div>\n            <div className=\"date\">{dateBuilder(new Date())}</div>\n          </div>\n          <div className=\"weather-box\">\n            <div className=\"temp\">\n              {Math.round(weather.main.temp)}°c\n            </div>\n            <div className=\"weather\">{weather.weather[0].main}</div>\n            {console.log(weather.weather[0])}\n          </div>\n        </div>\n        ) : ('')} */}\n    </div>\n  );\n}\n\nexport default Weather;"]},"metadata":{},"sourceType":"module"}