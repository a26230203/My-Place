{"ast":null,"code":"var _jsxFileName = \"/home/lin/phase5/My-Place-Frontend/my-place/src/Component/Music.js\";\nimport React, { Component } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst sound = 'https://www.soundhelix.com/examples/mp3/SoundHelix-Song-1.mp3';\nexport default class Music extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      isPause: false,\n      musicList: [{\n        id: \"1\",\n        title: \"打上花火\",\n        info: \"DAOKO,米津玄師\",\n        resource: sound,\n        time: \"04:50\",\n        img: \"http://singerimg.kugou.com/uploadpic/softhead/400/20160913/20160913140233132.jpg\"\n      }],\n      currentMusic: this.state.musicList ? this.state.musicList[0] : {},\n      totalTime: \"00:00\",\n      currentTime: \"00:00\",\n      processItemMove: false,\n      volumeProcessItemMove: false,\n      volumeControl: false,\n      playMode: 1,\n      isMusicListShow: false\n    };\n  }\n\n  static getDerivedStateFromProps(nextProps, prevState) {\n    const {\n      currentMusic,\n      musicList: prevMusicList\n    } = prevState;\n    const {\n      musicList = []\n    } = nextProps; // 判断音乐列表已经不同了\n\n    if (!_.isEqual(musicList, prevMusicList)) {\n      const oldIndex = prevMusicList.findIndex(item => {\n        return currentMusic.id === item.id;\n      });\n      const hasCurrentMusic = musicList.findIndex(item => {\n        return currentMusic.id === item.id;\n      });\n      let newCurrentMusic = musicList[oldIndex] ? musicList[oldIndex] : musicList[0];\n\n      if (musicList.length === 0) {\n        newCurrentMusic = currentMusic;\n      }\n\n      return {\n        musicList,\n        currentMusic: hasCurrentMusic === -1 ? newCurrentMusic : currentMusic\n      };\n    }\n\n    return null;\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"music\",\n      children: \"this is Music page\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 9\n    }, this);\n  }\n\n}","map":{"version":3,"sources":["/home/lin/phase5/My-Place-Frontend/my-place/src/Component/Music.js"],"names":["React","Component","sound","Music","state","isPause","musicList","id","title","info","resource","time","img","currentMusic","totalTime","currentTime","processItemMove","volumeProcessItemMove","volumeControl","playMode","isMusicListShow","getDerivedStateFromProps","nextProps","prevState","prevMusicList","_","isEqual","oldIndex","findIndex","item","hasCurrentMusic","newCurrentMusic","length","render"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;;AAEA,MAAMC,KAAK,GAAG,+DAAd;AAGA,eAAe,MAAMC,KAAN,SAAoBF,SAApB,CAA8B;AAAA;AAAA;AAAA,SAEzCG,KAFyC,GAEjC;AACNC,MAAAA,OAAO,EAAE,KADH;AAENC,MAAAA,SAAS,EAAE,CACT;AACEC,QAAAA,EAAE,EAAE,GADN;AAEEC,QAAAA,KAAK,EAAE,MAFT;AAGEC,QAAAA,IAAI,EAAE,YAHR;AAIEC,QAAAA,QAAQ,EAAER,KAJZ;AAKES,QAAAA,IAAI,EAAE,OALR;AAMEC,QAAAA,GAAG,EACD;AAPJ,OADS,CAFL;AAaNC,MAAAA,YAAY,EAAE,KAAKT,KAAL,CAAWE,SAAX,GAAwB,KAAKF,KAAL,CAAWE,SAAX,CAAqB,CAArB,CAAxB,GAAkD,EAb1D;AAcNQ,MAAAA,SAAS,EAAE,OAdL;AAeNC,MAAAA,WAAW,EAAE,OAfP;AAgBNC,MAAAA,eAAe,EAAE,KAhBX;AAiBNC,MAAAA,qBAAqB,EAAE,KAjBjB;AAkBNC,MAAAA,aAAa,EAAE,KAlBT;AAmBNC,MAAAA,QAAQ,EAAE,CAnBJ;AAoBNC,MAAAA,eAAe,EAAE;AApBX,KAFiC;AAAA;;AA0BT,SAAxBC,wBAAwB,CAACC,SAAD,EAAYC,SAAZ,EAAuB;AACrD,UAAM;AAAEV,MAAAA,YAAF;AAAgBP,MAAAA,SAAS,EAAEkB;AAA3B,QAA6CD,SAAnD;AACA,UAAM;AAAEjB,MAAAA,SAAS,GAAG;AAAd,QAAqBgB,SAA3B,CAFqD,CAGrD;;AACA,QAAI,CAACG,CAAC,CAACC,OAAF,CAAUpB,SAAV,EAAqBkB,aAArB,CAAL,EAA0C;AACxC,YAAMG,QAAQ,GAAGH,aAAa,CAACI,SAAd,CAAwBC,IAAI,IAAI;AAC/C,eAAOhB,YAAY,CAACN,EAAb,KAAoBsB,IAAI,CAACtB,EAAhC;AACD,OAFgB,CAAjB;AAGA,YAAMuB,eAAe,GAAGxB,SAAS,CAACsB,SAAV,CAAoBC,IAAI,IAAI;AAClD,eAAOhB,YAAY,CAACN,EAAb,KAAoBsB,IAAI,CAACtB,EAAhC;AACD,OAFuB,CAAxB;AAGA,UAAIwB,eAAe,GAAGzB,SAAS,CAACqB,QAAD,CAAT,GAClBrB,SAAS,CAACqB,QAAD,CADS,GAElBrB,SAAS,CAAC,CAAD,CAFb;;AAGA,UAAIA,SAAS,CAAC0B,MAAV,KAAqB,CAAzB,EAA4B;AAC1BD,QAAAA,eAAe,GAAGlB,YAAlB;AACD;;AACD,aAAO;AACLP,QAAAA,SADK;AAELO,QAAAA,YAAY,EAAEiB,eAAe,KAAK,CAAC,CAArB,GAAyBC,eAAzB,GAA2ClB;AAFpD,OAAP;AAID;;AACD,WAAO,IAAP;AACD;;AAIDoB,EAAAA,MAAM,GAAG;AACP,wBACE;AAAK,MAAA,SAAS,EAAC,OAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADF;AAMD;;AA5DwC","sourcesContent":["import React, { Component } from \"react\";\n\nconst sound = 'https://www.soundhelix.com/examples/mp3/SoundHelix-Song-1.mp3';\n\n\nexport default class Music extends Component {\n\n    state = {\n      isPause: false,\n      musicList: [\n        {\n          id: \"1\",\n          title: \"打上花火\",\n          info: \"DAOKO,米津玄師\",\n          resource: sound,\n          time: \"04:50\",\n          img:\n            \"http://singerimg.kugou.com/uploadpic/softhead/400/20160913/20160913140233132.jpg\"\n        },\n      ],\n      currentMusic: this.state.musicList ?  this.state.musicList[0] : {},\n      totalTime: \"00:00\",\n      currentTime: \"00:00\",\n      processItemMove: false,\n      volumeProcessItemMove: false,\n      volumeControl: false,\n      playMode: 1,\n      isMusicListShow: false\n     }\n\n\n     static getDerivedStateFromProps(nextProps, prevState) {\n      const { currentMusic, musicList: prevMusicList } = prevState;\n      const { musicList = [] } = nextProps;\n      // 判断音乐列表已经不同了\n      if (!_.isEqual(musicList, prevMusicList)) {\n        const oldIndex = prevMusicList.findIndex(item => {\n          return currentMusic.id === item.id;\n        });\n        const hasCurrentMusic = musicList.findIndex(item => {\n          return currentMusic.id === item.id;\n        });\n        let newCurrentMusic = musicList[oldIndex]\n          ? musicList[oldIndex]\n          : musicList[0];\n        if (musicList.length === 0) {\n          newCurrentMusic = currentMusic;\n        }\n        return {\n          musicList,\n          currentMusic: hasCurrentMusic === -1 ? newCurrentMusic : currentMusic\n        };\n      }\n      return null;\n    }\n\n\n\n    render() {\n      return (\n        <div className=\"music\">\n            this is Music page\n        </div>\n  \n      );\n    }\n  }\n"]},"metadata":{},"sourceType":"module"}