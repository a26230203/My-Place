{"ast":null,"code":"var _jsxFileName = \"/home/lin/phase5/My-Place-Frontend/my-place/src/Component/Convas.js\",\n    _s = $RefreshSig$();\n\nimport React, { useRef, useEffect } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Canvas() {\n  _s();\n\n  let canvasRef = useRef(null);\n  var mouse = {\n    x: undefined,\n    y: undefined\n  };\n  var maxRadius = 40;\n  var minRadius = 5; // useEffect(() => {\n\n  const canvas = canvasRef.current;\n  const c = canvas.getContext('2d');\n  canvas.width = window.innerWidth;\n  canvas.height = window.innerHeight;\n  window.addEventListener('mousemove', e => {\n    mouse.x = e.x;\n    mouse.y = e.y;\n  });\n  window.addEventListener('resize', () => {\n    canvas.width = window.innerWidth;\n    canvas.height = window.innerHeight;\n    circleGenerator();\n  });\n\n  function getRandColor() {\n    let r = 255 * Math.random() | 0,\n        g = 255 * Math.random() | 0,\n        b = 255 * Math.random() | 0;\n    return 'rgb(' + r + ',' + g + ',' + b + ',' + 0.7 + ')';\n  }\n\n  function circle(x, y, dx, dy, radius) {\n    this.x = x;\n    this.y = y;\n    this.dx = dx;\n    this.dy = dy;\n    this.radius = radius;\n    this.minRadius = radius;\n    this.color = getRandColor();\n\n    this.draw = () => {\n      c.beginPath();\n      c.arc(this.x, this.y, this.radius, 0, Math.PI * 2, false);\n      c.fillStyle = this.color;\n      c.fill();\n    };\n\n    this.collision = () => {\n      if (this.x + radius > canvas.width || this.x - this.radius < 0) {\n        this.dx = -this.dx;\n      } else if (this.y + radius > canvas.height || this.y - this.radius < 0) {\n        this.dy = -this.dy;\n      }\n\n      this.x += this.dx;\n      this.y += this.dy;\n\n      if (mouse.x - this.x < 50 && mouse.x - this.x > -50 && mouse.y - this.y < 50 && mouse.y - this.y > -50) {\n        if (this.radius < maxRadius) {\n          this.radius += 1;\n        }\n      } else if (this.radius > this.minRadius) {\n        this.radius -= 1;\n      }\n\n      this.draw();\n    };\n  }\n\n  var circleArray = [];\n\n  function circleGenerator() {\n    for (var i = 0; i < 300; i++) {\n      var radius = Math.random() * 15 + 1;\n      var x = Math.random() * (canvas.width - radius * 2) + radius;\n      var y = Math.random() * (canvas.height - radius * 2) + radius;\n      var dx = Math.random() - 0.5 * 5;\n      var dy = Math.random() - 0.5 * 5;\n      circleArray.push(new circle(x, y, dx, dy, radius));\n    }\n  }\n\n  circleGenerator();\n\n  const animate = () => {\n    requestAnimationFrame(animate);\n    c.clearRect(0, 0, canvas.width, canvas.height);\n\n    for (var i = 0; i < circleArray.length; i++) {\n      circleArray[i].collision();\n    }\n  };\n\n  animate(); // }, [])\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"canvas\",\n    children: /*#__PURE__*/_jsxDEV(\"canvas\", {\n      ref: canvasRef\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 11\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 105,\n    columnNumber: 7\n  }, this);\n}\n\n_s(Canvas, \"hw7YJ5TVw+lAu0tRkzoDS8rL7/E=\");\n\n_c = Canvas;\nexport default Canvas;\n\nvar _c;\n\n$RefreshReg$(_c, \"Canvas\");","map":{"version":3,"sources":["/home/lin/phase5/My-Place-Frontend/my-place/src/Component/Convas.js"],"names":["React","useRef","useEffect","Canvas","canvasRef","mouse","x","undefined","y","maxRadius","minRadius","canvas","current","c","getContext","width","window","innerWidth","height","innerHeight","addEventListener","e","circleGenerator","getRandColor","r","Math","random","g","b","circle","dx","dy","radius","color","draw","beginPath","arc","PI","fillStyle","fill","collision","circleArray","i","push","animate","requestAnimationFrame","clearRect","length"],"mappings":"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","sourcesContent":["import React, {useRef, useEffect } from \"react\";\n\nfunction Canvas() {\n    let canvasRef = useRef(null)\n\n    var mouse = {\n        x: undefined,\n        y: undefined\n    }\n\n    var maxRadius = 40;\n    var minRadius = 5;\n\n    \n    // useEffect(() => {\n        const canvas = canvasRef.current\n        const c = canvas.getContext('2d')\n        \n        canvas.width = window.innerWidth\n        canvas.height = window.innerHeight\n        \n        window.addEventListener('mousemove', (e) => {\n            mouse.x = e.x;\n            mouse.y = e.y\n        })\n        \n        window.addEventListener('resize', () => {\n            canvas.width = window.innerWidth; \n            canvas.height = window.innerHeight;\n            circleGenerator();\n        })\n        \n        function getRandColor() {\n            let r = 255*Math.random()|0,\n                g = 255*Math.random()|0,\n                b = 255*Math.random()|0;\n            return 'rgb(' + r + ',' + g + ',' + b + ',' + 0.7 + ')';\n        }\n        function circle(x, y, dx, dy, radius) {\n            this.x = x;\n            this.y = y;\n            this.dx = dx;\n            this.dy = dy;\n            this.radius = radius;\n            this.minRadius = radius;\n            this.color = getRandColor()\n\n            this.draw = () => {\n                c.beginPath();\n                c.arc(this.x, this.y, this.radius, 0, Math.PI * 2, false)\n                c.fillStyle = this.color\n                c.fill();\n            }\n\n            this.collision = () => {\n                if( this.x + radius > canvas.width || this.x - this.radius < 0) {\n                    this.dx = -this.dx;\n                }else if ( this.y + radius > canvas.height || this.y - this.radius < 0) {\n                    this.dy = -this.dy\n                }\n        \n                this.x += this.dx;\n                this.y += this.dy;\n        \n                if(mouse.x - this.x < 50 && mouse.x - this.x > -50 && mouse.y - this.y < 50 && mouse.y - this.y > -50) {\n                    if( this.radius < maxRadius){\n                        this.radius +=1;\n                    }\n                }else if (this.radius > this.minRadius){ \n                    this.radius -=1;\n                }\n                this.draw();\n            }\n        }\n\n        var circleArray = []\n        function circleGenerator() {\n            for(var i = 0; i < 300; i++) {\n                var radius = Math.random() * 15 + 1;\n                var x = Math.random() * (canvas.width - radius * 2 ) + radius;\n                var y = Math.random() * (canvas.height - radius * 2) + radius;\n                var dx = (Math.random() - 0.5 * 5);\n                var dy = (Math.random() - 0.5 * 5);\n                circleArray.push(new circle(x, y, dx, dy, radius))\n            }\n        }\n\n        circleGenerator();\n\n        const animate =() => {\n            requestAnimationFrame(animate);\n            c.clearRect(0,0,canvas.width,canvas.height);\n        \n            for(var i = 0; i < circleArray.length; i++) {\n                circleArray[i].collision()\n            }\n        }\n        \n        animate()\n    // }, [])\n\n\n\n    return (\n      <div className=\"canvas\">\n          <canvas ref={canvasRef}></canvas>\n      </div>\n\n    );\n  }\n\n  export default Canvas;"]},"metadata":{},"sourceType":"module"}