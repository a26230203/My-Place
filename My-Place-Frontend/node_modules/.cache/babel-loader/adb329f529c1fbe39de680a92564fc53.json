{"ast":null,"code":"var _jsxFileName = \"/home/lin/phase5/My-Place-Frontend/my-place/src/Component/Journal.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport Navbar from './NavBar';\nimport JournalList from './Container/JournalList';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Journal(props) {\n  _s();\n\n  let [display, setDisplay] = useState(true);\n  let [journals, setJournals] = useState([]);\n  let [journalDrafts, setJournalDrafts] = useState([]);\n  let [title, setTitle] = useState(\"\");\n  let [content, setContent] = useState(\"\");\n\n  const handleDisplay = () => {\n    setDisplay(!display);\n  };\n\n  useEffect(() => {\n    fetch(\"http://localhost:3000/journals\").then(res => res.json()).then(journals => setJournals(journals));\n    fetch(\"http://localhost:3000/journal_drafts\").then(res => res.json()).then(journalDrafts => setJournalDrafts(journalDrafts));\n  }, [journals]);\n\n  const handlePublish = () => {\n    const newJouranl = {\n      user_id: props.loginUser.id,\n      title: title,\n      content: content\n    };\n    fetch(\"http://localhost:3000/journals\", {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify(newJouranl)\n    }).then(res => res.json()).then(journalobj => {});\n  };\n\n  const handleDelete = jouranl => {\n    fetch(`http://localhost:3000/journals/${jouranl.id}`, {\n      method: \"DELETE\"\n    }).then(res => res.json).then(() => {\n      alert(\"Your journal is being deleted\");\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: Object.keys(props.loginUser).length > 0 ? /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(Navbar, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"sub navbar\",\n        children: /*#__PURE__*/_jsxDEV(\"li\", {\n          children: [\"Draft(\", journalDrafts.length === 0 ? null : journalDrafts.length - 1, \")\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 19\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 15\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => handleDisplay(),\n        children: \"Write a journal\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 13\n      }, this), display ? /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"journal\",\n        children: journals.length !== 0 ? journals.map(journal => {\n          return /*#__PURE__*/_jsxDEV(JournalList, {\n            journal: journal,\n            handleDelete: handleDelete\n          }, journal.id, false, {\n            fileName: _jsxFileName,\n            lineNumber: 74,\n            columnNumber: 26\n          }, this);\n        }) : /*#__PURE__*/_jsxDEV(\"div\", {\n          children: \"Here is your jourany begin\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 18\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 14\n      }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"New Journal\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"writing\",\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            className: \"title\",\n            placeholder: \"Please enter your title\",\n            type: \"text\",\n            value: title,\n            onChange: e => setTitle(e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 83,\n            columnNumber: 23\n          }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n            children: \"Content\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 88,\n            columnNumber: 23\n          }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n            className: \"content\",\n            placeholder: \"Please enter your content\",\n            value: content,\n            onChange: e => setContent(e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 89,\n            columnNumber: 23\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"btn\",\n            children: [/*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: e => handlePublish(e),\n              children: \"Publish\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 94,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              children: \"Save as Draft\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 95,\n              columnNumber: 25\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 93,\n            columnNumber: 21\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 19\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 14\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 12\n    }, this) : props.history.push('/')\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 60,\n    columnNumber: 7\n  }, this);\n}\n\n_s(Journal, \"OYVrtKdyMTYCR9s7Wu2GWlSF/K8=\");\n\n_c = Journal;\nexport default Journal;\n\nvar _c;\n\n$RefreshReg$(_c, \"Journal\");","map":{"version":3,"sources":["/home/lin/phase5/My-Place-Frontend/my-place/src/Component/Journal.js"],"names":["React","useEffect","useState","Navbar","JournalList","Journal","props","display","setDisplay","journals","setJournals","journalDrafts","setJournalDrafts","title","setTitle","content","setContent","handleDisplay","fetch","then","res","json","handlePublish","newJouranl","user_id","loginUser","id","method","headers","body","JSON","stringify","journalobj","handleDelete","jouranl","alert","Object","keys","length","map","journal","e","target","value","history","push"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from 'react';\nimport Navbar from './NavBar'\nimport JournalList from './Container/JournalList'\n\nfunction Journal(props) {\n\n  let [display, setDisplay] = useState(true)\n  let [journals, setJournals] = useState([])\n  let [journalDrafts, setJournalDrafts] = useState([])\n  let [title, setTitle] = useState(\"\")\n  let [content, setContent] = useState(\"\")\n\n\n  const handleDisplay = ()=> {\n    setDisplay(!display)\n  }\n\n  useEffect(() => {\n    fetch(\"http://localhost:3000/journals\")\n    .then(res => res.json())\n    .then(journals => setJournals(journals))\n\n    fetch(\"http://localhost:3000/journal_drafts\")\n    .then(res => res.json())\n    .then(journalDrafts => setJournalDrafts(journalDrafts))\n  }, [journals])\n\n  const handlePublish = () => {\n    const newJouranl = {\n      user_id: props.loginUser.id,\n      title: title,\n      content: content\n    }\n\n    fetch(\"http://localhost:3000/journals\", {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n      },\n      body: JSON.stringify(newJouranl),\n    })\n    .then(res => res.json())\n    .then(journalobj => {\n    })\n  }\n\n  const handleDelete = (jouranl) => {\n    fetch(`http://localhost:3000/journals/${jouranl.id}`, {\n      method: \"DELETE\"\n    })\n    .then(res => res.json)\n    .then(() => {\n      alert(\"Your journal is being deleted\")\n    })\n  }\n\n\n\n    return (\n      <div>\n        { Object.keys(props.loginUser).length > 0 \n          ?<div>\n            <Navbar />\n              <div className=\"sub navbar\">\n                  <li>Draft({journalDrafts.length === 0 ? null : journalDrafts.length - 1 })</li>\n              </div>\n\n            <button onClick={() => handleDisplay()}>Write a journal</button>\n\n            {display\n            ?<div className=\"journal\">\n                {journals.length !== 0 \n                ? journals.map(journal => {\n                  return <JournalList journal={journal} key={journal.id} handleDelete={handleDelete}/>})\n                :<div>\n                  Here is your jourany begin\n                </div>\n                }\n            </div>\n            :<div>\n                <h2>New Journal</h2>\n                  <div className=\"writing\"> \n                      <input className=\"title\"\n                          placeholder=\"Please enter your title\"\n                          type=\"text\"\n                          value = {title}\n                          onChange={(e) => setTitle(e.target.value)} />\n                      <h2>Content</h2>\n                      <textarea className=\"content\"\n                          placeholder=\"Please enter your content\"\n                          value = {content}\n                          onChange={(e) => setContent(e.target.value)} />\n                    <div className=\"btn\">\n                        <button onClick={(e) => handlePublish(e)}>Publish</button>\n                        <button>Save as Draft</button>\n                    </div>\n                  </div>\n            </div>}\n          </div>\n          :  props.history.push('/')\n        }\n      </div>\n\n    );\n  }\n\n  export default Journal;"]},"metadata":{},"sourceType":"module"}