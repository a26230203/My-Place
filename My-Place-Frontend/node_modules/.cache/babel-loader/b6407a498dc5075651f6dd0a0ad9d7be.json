{"ast":null,"code":"var _jsxFileName = \"/home/lin/phase5/My-Place-Frontend/my-place/src/Component/Photo.js\";\nimport React from \"react\";\nimport { Card, Upload, Modal, Form, Button, Image, Input, Select, message } from 'antd';\nimport { PlusOutlined } from '@ant-design/icons';\nimport Navbar from './NavBar';\nimport PhotoList from \"./Container/PhotoList\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst {\n  Option\n} = Select;\n\nfunction getBase64(file) {\n  return new Promise((resolve, reject) => {\n    const reader = new FileReader();\n    reader.readAsDataURL(file);\n\n    reader.onload = () => resolve(reader.result);\n\n    reader.onerror = error => reject(error);\n  });\n}\n\nexport default class Photo extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      photos: [],\n      album: [],\n      display: true,\n      albumForm: false,\n      previewVisible: false,\n      previewImage: '',\n      previewTitle: '',\n      fileList: [],\n      upFiles: [],\n      albumName: ''\n    };\n\n    this.handlClickPhoto = () => {\n      this.props.history.push('/photo');\n    };\n\n    this.handlClickAlbum = () => {\n      this.props.history.push('/album');\n    };\n\n    this.handleDisplay = () => {\n      this.setState({\n        display: !this.state.display\n      });\n    };\n\n    this.onChange = ({\n      target: {\n        value\n      }\n    }) => {\n      this.setState({\n        value\n      });\n    };\n\n    this.handleChange = ({\n      fileList\n    }) => this.setState({\n      fileList\n    });\n\n    this.handleCancel = () => this.setState({\n      previewVisible: false\n    });\n\n    this.handlePreview = async file => {\n      if (!file.url && !file.preview) {\n        file.preview = await getBase64(file.originFileObj);\n      }\n\n      this.setState({\n        previewImage: file.url || file.preview,\n        previewVisible: true,\n        previewTitle: file.name || file.url.substring(file.url.lastIndexOf('/') + 1)\n      });\n    };\n\n    this.beforeUpload = file => {\n      const {\n        upFiles\n      } = this.state;\n      upFiles.push(file);\n      this.setState({\n        upFiles: upFiles\n      });\n    };\n\n    this.handleSubmit = () => {\n      const {\n        upFiles\n      } = this.state;\n\n      if (this.state.albumName !== \"\") {\n        const findAlbum = this.state.album.find(album => album.name.toLowerCase() == this.state.albumName.toLowerCase());\n        Object.keys(findAlbum).length <= 0;\n\n        if (findAlbum == \"undefined\") {\n          console.log(\"hello\");\n        }\n      } // let formData = new FormData();\n      //  upFiles.forEach((file) => {\n      //   formData.append('image', file);\n      //   formData.append('name', file.name);\n      //    formData.append('user_id', this.props.loginUser.id);\n      //    fetch(\"http://localhost:3000/photoupload\", {\n      //      method: \"POST\",\n      //      body: formData\n      //    })\n      //    .then(res => res.json())\n      //    .then(() => {\n      //      this.componentDidMount()\n      //    })\n      //   });\n      // this.setState({\n      //   fileList: [],\n      //   upFiles: []\n      // })\n      // this.handleDisplay()\n\n    };\n\n    this.handleDelete = photoObj => {\n      fetch(`http://localhost:3000/photos/${photoObj.id}`, {\n        method: \"DELETE\"\n      }).then(res => res.json()).then(() => {\n        this.componentDidMount();\n      });\n    };\n\n    this.handleAlbumName = e => {\n      this.setState({\n        albumName: e.target.value\n      });\n    };\n\n    this.AddPhotoToAlbum = (photoObj, albumId) => {\n      if (albumId == \"\") {\n        this.handleConfirm();\n      } else {\n        fetch(`http://localhost:3000/photos/${photoObj.id}`, {\n          method: \"PATCH\",\n          headers: {\n            \"Content-Type\": \"application/json\"\n          },\n          body: JSON.stringify({\n            album_id: albumId\n          })\n        }).then(res => {\n          message.success('Photo added to album');\n        });\n      }\n    };\n\n    this.handleCreatalbum = () => {\n      this.setState({\n        albumForm: !this.state.albumForm\n      });\n    };\n\n    this.handleConfirm = () => {\n      const newAlbun = {\n        name: this.state.albumName,\n        user_id: this.props.loginUser.id\n      };\n      fetch(\"http://localhost:3000/albums\", {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify(newAlbun)\n      }).then(res => {\n        message.success(' Album is created');\n        this.handleCreatalbum();\n        this.componentDidMount();\n      });\n    };\n  }\n\n  componentDidMount() {\n    fetch(\"http://localhost:3000/photos\").then(res => res.json()).then(photos => this.setState({\n      photos\n    }));\n    fetch(\"http://localhost:3000/albums\").then(res => res.json()).then(album => this.setState({\n      album\n    }));\n  } //go to photo route\n\n\n  render() {\n    const {\n      previewVisible,\n      previewImage,\n      fileList,\n      previewTitle\n    } = this.state;\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"photo\",\n      children: Object.keys(this.props.loginUser).length > 0 ? /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(Navbar, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 194,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"photo-subnav\",\n          children: [/*#__PURE__*/_jsxDEV(\"li\", {\n            onClick: () => this.handlClickPhoto(),\n            children: \"Photos\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 196,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n            onClick: () => this.handlClickAlbum(),\n            children: \"Album\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 197,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 195,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"photo-btn\",\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => this.handleDisplay(),\n            children: \"Upload Photo\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 200,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => this.handleCreatalbum(),\n            children: \"Create Album\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 201,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 199,\n          columnNumber: 13\n        }, this), this.state.albumForm ? /*#__PURE__*/_jsxDEV(Form, {\n          children: [/*#__PURE__*/_jsxDEV(Input, {\n            addonBefore: \"Album Title:\",\n            style: {\n              width: '500px'\n            },\n            value: this.state.albumName,\n            onChange: e => this.handleAlbumName(e)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 205,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            type: \"primary\",\n            shape: \"round\",\n            onClick: () => this.handleConfirm(),\n            children: \"Confirm\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 209,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            type: \"primary\",\n            shape: \"round\",\n            onClick: () => this.handleConfirm(),\n            children: \"Cancel\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 210,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 204,\n          columnNumber: 14\n        }, this) : null, this.state.display ? /*#__PURE__*/_jsxDEV(\"div\", {\n          children: /*#__PURE__*/_jsxDEV(Image.PreviewGroup, {\n            children: this.state.photos.map(photo => {\n              return /*#__PURE__*/_jsxDEV(PhotoList, {\n                photo: photo,\n                handleDelete: this.handleDelete,\n                album: this.state.album,\n                AddPhotoToAlbum: this.AddPhotoToAlbum\n              }, photo.id, false, {\n                fileName: _jsxFileName,\n                lineNumber: 219,\n                columnNumber: 28\n              }, this);\n            })\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 216,\n            columnNumber: 17\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 215,\n          columnNumber: 16\n        }, this) : /*#__PURE__*/_jsxDEV(Form, {\n          children: /*#__PURE__*/_jsxDEV(Card, {\n            title: \"Photo Upload\",\n            children: [/*#__PURE__*/_jsxDEV(Input, {\n              addonBefore: \"Album Title:\",\n              style: {\n                width: '500px'\n              },\n              value: this.state.albumName,\n              placeholder: \"Option\",\n              onChange: e => this.handleAlbumName(e)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 227,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(Upload, {\n              listType: \"picture-card\",\n              fileList: fileList,\n              multiple: true,\n              onPreview: this.handlePreview,\n              onChange: this.handleChange,\n              beforeUpload: this.beforeUpload,\n              children: [/*#__PURE__*/_jsxDEV(PlusOutlined, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 240,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                style: {\n                  marginTop: 8\n                },\n                children: \"Upload\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 241,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 232,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(Modal, {\n              visible: previewVisible,\n              title: previewTitle,\n              footer: null,\n              onCancel: this.handleCancel,\n              children: /*#__PURE__*/_jsxDEV(\"img\", {\n                src: previewImage,\n                alt: previewTitle,\n                style: {\n                  width: '100%',\n                  height: '100%'\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 249,\n                columnNumber: 21\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 243,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(Button, {\n              onClick: () => this.handleSubmit(),\n              type: \"primary\",\n              children: \"submit\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 255,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 226,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 225,\n          columnNumber: 14\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 193,\n        columnNumber: 12\n      }, this) : this.props.history.push('/')\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 191,\n      columnNumber: 7\n    }, this);\n  }\n\n}","map":{"version":3,"sources":["/home/lin/phase5/My-Place-Frontend/my-place/src/Component/Photo.js"],"names":["React","Card","Upload","Modal","Form","Button","Image","Input","Select","message","PlusOutlined","Navbar","PhotoList","Option","getBase64","file","Promise","resolve","reject","reader","FileReader","readAsDataURL","onload","result","onerror","error","Photo","Component","state","photos","album","display","albumForm","previewVisible","previewImage","previewTitle","fileList","upFiles","albumName","handlClickPhoto","props","history","push","handlClickAlbum","handleDisplay","setState","onChange","target","value","handleChange","handleCancel","handlePreview","url","preview","originFileObj","name","substring","lastIndexOf","beforeUpload","handleSubmit","findAlbum","find","toLowerCase","Object","keys","length","console","log","handleDelete","photoObj","fetch","id","method","then","res","json","componentDidMount","handleAlbumName","e","AddPhotoToAlbum","albumId","handleConfirm","headers","body","JSON","stringify","album_id","success","handleCreatalbum","newAlbun","user_id","loginUser","render","width","map","photo","marginTop","height"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport { Card, Upload, Modal, Form, Button, Image, Input, Select, message  } from 'antd'\nimport {  PlusOutlined } from '@ant-design/icons';\nimport Navbar from './NavBar'\nimport PhotoList from \"./Container/PhotoList\";\n\nconst { Option } = Select;\n\nfunction getBase64(file) {\n  return new Promise((resolve, reject) => {\n    const reader = new FileReader();\n    reader.readAsDataURL(file);\n    reader.onload = () => resolve(reader.result);\n    reader.onerror = error => reject(error);\n  });\n}\n\nexport default class Photo extends React.Component {\n\n  state = {\n    photos: [],\n    album: [],\n    display: true,\n    albumForm: false,\n    previewVisible: false,\n    previewImage: '',\n    previewTitle: '',\n    fileList: [], \n    upFiles:[],\n    albumName: '',\n    }\n    componentDidMount() {\n      fetch(\"http://localhost:3000/photos\")\n      .then(res => res.json())\n      .then(photos => this.setState({photos}))\n\n      fetch(\"http://localhost:3000/albums\")\n      .then(res => res.json())\n      .then(album => this.setState({album}))\n    }\n\n    //go to photo route\n    handlClickPhoto = () => {\n      this.props.history.push('/photo')\n    }\n\n\n    //go to album route\n    handlClickAlbum = () => {\n      this.props.history.push('/album')\n    }\n\n    // handle diplay photo list\n    handleDisplay = () => {\n      this.setState({\n        display: !this.state.display\n      })\n    }\n\n    //change upload value\n    onChange = ({ target: { value } }) => {\n      this.setState({ value });\n    };\n\n    //handle Onchange of upload\n    handleChange = ({ fileList }) => this.setState({ fileList });\n\n    //handle cancel of upload\n    handleCancel = () => this.setState({ previewVisible: false });\n\n    //handle preview of uploadalbumName\n    handlePreview = async file => {\n      if (!file.url && !file.preview) {\n        file.preview = await getBase64(file.originFileObj);\n      }\n  \n      this.setState({\n        previewImage: file.url || file.preview,\n        previewVisible: true,\n        previewTitle: file.name || file.url.substring(file.url.lastIndexOf('/') + 1),\n      });\n    };\n\n    beforeUpload = (file) => {\n      const {upFiles} = this.state;\n      upFiles.push(file);\n      this.setState({upFiles: upFiles});\n    }\n\n    //handle submit upload\n    handleSubmit = () => {\n      const {upFiles} = this.state;\n      if(this.state.albumName !== \"\") {\n        const findAlbum = this.state.album.find(album => album.name.toLowerCase() == this.state.albumName.toLowerCase())\n        Object.keys(findAlbum).length <= 0\n        if(findAlbum == \"undefined\") {\n          console.log(\"hello\")\n        }\n      }\n      // let formData = new FormData();\n      //  upFiles.forEach((file) => {\n      //   formData.append('image', file);\n      //   formData.append('name', file.name);\n      //    formData.append('user_id', this.props.loginUser.id);\n      //    fetch(\"http://localhost:3000/photoupload\", {\n      //      method: \"POST\",\n      //      body: formData\n      //    })\n      //    .then(res => res.json())\n      //    .then(() => {\n      //      this.componentDidMount()\n      //    })\n      //   });\n      // this.setState({\n      //   fileList: [],\n      //   upFiles: []\n      // })\n      // this.handleDisplay()\n  } \n\n   //Handle delete photo\n   handleDelete =(photoObj) => {\n    fetch(`http://localhost:3000/photos/${photoObj.id}`, {\n        method: \"DELETE\",\n      })\n      .then(res => res.json())\n      .then(() => {\n        this.componentDidMount()\n      })\n    }\n\n    //Handle albun name \n    handleAlbumName = (e) => {\n        this.setState({\n          albumName: e.target.value\n        })\n    }\n\n    //Add photo to album\n    AddPhotoToAlbum = (photoObj, albumId) => {\n        if(albumId == \"\") {\n          this.handleConfirm()\n        }else{\n            fetch(`http://localhost:3000/photos/${photoObj.id}`, {\n            method: \"PATCH\",\n            headers: {\n              \"Content-Type\": \"application/json\",\n            },\n            body: JSON.stringify({\n              album_id: albumId\n            }),\n          })\n            .then(res => {\n                message.success('Photo added to album');\n            })\n        }\n    }\n\n    //Display album form\n    handleCreatalbum = () => {\n      this.setState({\n        albumForm : !this.state.albumForm\n      })\n    }\n\n    //Create ablum\n    handleConfirm = () => {\n      const newAlbun ={\n        name: this.state.albumName,\n        user_id: this.props.loginUser.id\n      }\n      fetch(\"http://localhost:3000/albums\", {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\",\n        },\n        body: JSON.stringify(newAlbun),\n      })\n      .then(res => {\n        message.success(' Album is created')\n        this.handleCreatalbum()\n        this.componentDidMount()\n      })\n    }\n\n\n\n    render() {\n      const { previewVisible, previewImage, fileList, previewTitle } = this.state;\n      return (\n      <div className=\"photo\">\n        { Object.keys(this.props.loginUser).length > 0 \n          ?<div>\n            <Navbar />\n            <div className=\"photo-subnav\">\n                <li onClick={() => this.handlClickPhoto()}>Photos</li>\n                <li onClick={() => this.handlClickAlbum()}>Album</li>\n            </div>\n            <div className=\"photo-btn\">\n              <button onClick={() => this.handleDisplay()}>Upload Photo</button>\n              <button onClick={() => this.handleCreatalbum()}>Create Album</button>\n            </div>\n            {this.state.albumForm\n            ?<Form>\n              <Input addonBefore=\"Album Title:\" \n              style={{width: '500px'}} \n              value={this.state.albumName}\n              onChange={(e) => this.handleAlbumName(e)}/>\n              <Button type=\"primary\" shape=\"round\" onClick={() => this.handleConfirm()}>Confirm</Button>\n              <Button type=\"primary\" shape=\"round\" onClick={() => this.handleConfirm()}>Cancel</Button>\n            </Form>\n            :null\n          }\n            {this.state.display\n              ?<div>\n                <Image.PreviewGroup>\n                {\n                this.state.photos.map(photo => {\n                    return <PhotoList photo={photo} key={photo.id} handleDelete={this.handleDelete} album={this.state.album} \n                    AddPhotoToAlbum={this.AddPhotoToAlbum}/>\n                  })\n                }\n                 </Image.PreviewGroup>\n              </div>\n            :<Form >\n            <Card title='Photo Upload'>\n                  <Input addonBefore=\"Album Title:\" \n                    style={{width: '500px'}} \n                    value={this.state.albumName}\n                    placeholder=\"Option\"\n                    onChange={(e) => this.handleAlbumName(e)}/>\n                  <Upload\n                    listType='picture-card'\n                    fileList={fileList}\n                    multiple={true}\n                    onPreview={this.handlePreview}\n                    onChange={this.handleChange}\n                    beforeUpload={this.beforeUpload}\n                  >\n                    <PlusOutlined />\n                    <div style={{ marginTop: 8}}>Upload</div>\n                  </Upload>\n                  <Modal\n                      visible={previewVisible}\n                      title={previewTitle}\n                      footer={null}\n                      onCancel={this.handleCancel}\n                  >\n                    <img\n                      src={previewImage}\n                      alt={previewTitle}\n                      style={{ width: '100%', height: '100%'}}\n                    />\n                  </Modal>\n              <Button onClick={() => this.handleSubmit()} type='primary' >submit</Button>\n            </Card>\n            </Form>\n          } \n          </div>\n          :this.props.history.push('/')\n        }\n      </div>\n      )\n    }\n  }\n"]},"metadata":{},"sourceType":"module"}