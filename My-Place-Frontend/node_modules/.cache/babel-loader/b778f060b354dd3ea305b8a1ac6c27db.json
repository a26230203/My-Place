{"ast":null,"code":"var _jsxFileName = \"/home/lin/phase5/My-Place-Frontend/my-place/src/Component/Music.js\";\nimport React, { Component } from \"react\";\nimport _ from \"lodash\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst sound = 'https://www.soundhelix.com/examples/mp3/SoundHelix-Song-1.mp3';\nexport default class Music extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      isPause: false,\n      musicList: [{\n        id: \"1\",\n        title: \"打上花火\",\n        info: \"DAOKO,米津玄師\",\n        resource: sound,\n        time: \"04:50\",\n        img: \"http://singerimg.kugou.com/uploadpic/softhead/400/20160913/20160913140233132.jpg\"\n      }],\n      currentMusic: musicList ? musicList[0] : {},\n      totalTime: \"00:00\",\n      currentTime: \"00:00\",\n      processItemMove: false,\n      volumeProcessItemMove: false,\n      volumeControl: false,\n      playMode: 1,\n      isMusicListShow: false\n    };\n\n    this.getTime = time => {\n      if (time) {\n        const minute = parseInt(time / 60 % 60);\n        const second = parseInt(time % 60);\n        let minuteText = `${minute}`;\n        let secondText = `${second}`;\n\n        if (minute < 10) {\n          minuteText = `0${minute}`;\n        }\n\n        if (second < 10) {\n          secondText = `0${second}`;\n        }\n\n        return `${minuteText}:${secondText}`;\n      } else {\n        return \"00:00\";\n      }\n    };\n\n    this.onPlay = () => {\n      const audio = this.audio;\n      this.setState({\n        isPause: true\n      });\n      audio.play();\n    };\n\n    this.onPause = () => {\n      const audio = this.audio;\n      this.setState({\n        isPause: false\n      });\n      audio.pause();\n    };\n\n    this.onProcessClick = e => {\n      this.setProcess(e, \"click\");\n    };\n\n    this.setProcess = (e, key) => {\n      // 获取当前点击偏移宽度\n      let offsetWidth = e.pageX - this.processPlayed.getBoundingClientRect().left; // 需要限制拖动范围，不能超出左右边界\n\n      if (offsetWidth < 0) {\n        offsetWidth = 0;\n      }\n\n      if (offsetWidth > this.process.offsetWidth) {\n        offsetWidth = this.process.offsetWidth;\n      } // 计算偏移比例\n\n\n      const offsetPercentage = offsetWidth / this.process.offsetWidth; // 计算当前时间\n\n      const currentTime = this.audio.duration * offsetPercentage;\n\n      if (key === \"click\" || key === \"dragMove\") {\n        // 设置当前进度条偏移位置\n        this.processPlayed.style.width = `${offsetWidth}px`;\n        this.processItem.style.left = `${offsetWidth - 4}px`;\n        this.setState({\n          currentTime: this.getTime(currentTime)\n        });\n      } // 设置当前音乐进度 拖拽不需要及时计算播放进度，会导致音乐像快进一样的效果，体验很差，点击进度条是需要及时设置当前播放进度的\n\n\n      if (key === \"dragEnd\" || key === \"click\") {\n        this.audio.currentTime = currentTime;\n      }\n    };\n\n    this.onProcessItemMouseDown = e => {\n      // 阻止事件冒泡\n      e.stopPropagation(); // 按下后置item为可拖动状态\n\n      this.setState({\n        processItemMove: true\n      });\n    };\n\n    this.onProcessItemMouseMove = e => {\n      // 阻止事件冒泡\n      e.stopPropagation();\n      const {\n        processItemMove\n      } = this.state;\n\n      if (processItemMove) {\n        this.setProcess(e, \"dragMove\");\n      }\n    };\n\n    this.onProcessItemMouseUp = e => {\n      const {\n        processItemMove\n      } = this.state; // 阻止事件冒泡\n\n      e.stopPropagation(); // 这里的判断是关键，一定要判断是处于processItemMove=true的状态，表示当前正在拖动进度条，不然会导致mouseUp和onClick事件的传播问题\n\n      if (processItemMove) {\n        this.setState({\n          processItemMove: false\n        }); // 松开后置item为禁止拖动的状态\n\n        this.setProcess(e, \"dragEnd\");\n      }\n    };\n\n    this.endedPlayMusic = () => {\n      const {\n        playMode,\n        currentMusic\n      } = this.state;\n      const {\n        musicList\n      } = this.state;\n\n      if (musicList.length > 0 && currentMusic) {\n        const currentIndex = musicList.findIndex(item => {\n          return item.id === currentMusic.id;\n        }); // 列表循环\n\n        if (playMode === 1) {\n          if (musicList[currentIndex + 1]) {\n            this.setState({\n              currentMusic: musicList[currentIndex + 1]\n            }, () => {\n              this.onSwitchAction();\n            });\n          } else {\n            this.setState({\n              currentMusic: musicList[0]\n            }, () => {\n              this.onSwitchAction();\n            });\n          }\n        } // 列表随机\n        else if (playMode === 2) {\n            const randomIndex = Math.floor(Math.random() * 3 + 1);\n\n            if (musicList[randomIndex + 1]) {\n              this.setState({\n                currentMusic: musicList[randomIndex + 1]\n              }, () => {\n                this.onSwitchAction();\n              });\n            } else {\n              this.setState({\n                currentMusic: musicList[0]\n              }, () => {\n                this.onSwitchAction();\n              });\n            }\n          } // 单曲循环\n          else if (playMode === 3) {\n              this.onSwitchAction();\n            }\n      } else {\n        // 当前播放列表已经空了，则不自动切歌，播放完毕后，直接重置当前的播放的音乐\n        this.onSwitchAction();\n      }\n    };\n\n    this.nextMusic = () => {\n      const {\n        currentMusic\n      } = this.state;\n      const {\n        musicList\n      } = this.state;\n\n      if (musicList.length > 1 && currentMusic) {\n        const currentIndex = musicList.findIndex(item => {\n          return item.id === currentMusic.id;\n        });\n\n        if (musicList[currentIndex + 1]) {\n          this.setState({\n            currentMusic: musicList[currentIndex + 1]\n          }, () => {\n            this.onSwitchAction();\n          });\n        } else {\n          this.setState({\n            currentMusic: musicList[0]\n          }, () => {\n            this.onSwitchAction();\n          });\n        }\n      } else {\n        this.audio.currentTime = 0;\n        this.onSwitchAction();\n      }\n    };\n\n    this.previousMusic = () => {\n      const {\n        currentMusic\n      } = this.state;\n      const {\n        musicList\n      } = this.state;\n\n      if (musicList.length > 1 && currentMusic) {\n        const currentIndex = musicList.findIndex(item => {\n          return item.id === currentMusic.id;\n        });\n\n        if (musicList[currentIndex - 1]) {\n          this.setState({\n            currentMusic: musicList[currentIndex - 1]\n          }, () => {\n            this.onSwitchAction();\n          });\n        } else {\n          this.setState({\n            currentMusic: musicList[musicList.length - 1]\n          }, () => {\n            this.onSwitchAction();\n          });\n        }\n      } else {\n        this.audio.currentTime = 0;\n        this.onSwitchAction();\n      }\n    };\n\n    this.onSwitchAction = () => {\n      const {\n        isPause\n      } = this.state; // 处于暂停标志，则表示正在播放中，则重置进度条后，直接调用播放，否则就只重置进度条，不调用播放\n\n      this.resetProcess();\n\n      if (isPause) {\n        this.onPlay();\n      }\n    };\n\n    this.resetProcess = () => {\n      this.processPlayed.style.width = \"0px\";\n      this.processItem.style.left = \"-4px\";\n    };\n\n    this.onVolumeControl = () => {\n      const {\n        volumeControl\n      } = this.state;\n      this.setState({\n        volumeControl: !volumeControl\n      });\n    };\n\n    this.onVolumeControlHide = () => {\n      const {\n        volumeControl\n      } = this.state;\n\n      if (volumeControl) {\n        this.setState({\n          volumeControl: false\n        });\n      }\n    };\n\n    this.initVolumeProcess = () => {\n      // 获取当前音量条高度\n      const processLength = this.volumeProcess.offsetHeight; // 设置进度条\n\n      this.volumeProcessCurrent.style.height = `${processLength / 2}px`; // 设置进度条item\n\n      this.volumeProcessItem.style.bottom = `${processLength / 2 - 6}px`; // 设置音量\n\n      this.audio.volume = 0.5;\n    };\n\n    this.onVolumeProcessSet = e => {\n      // 获取当前音量条高度\n      const processLength = this.volumeProcess.offsetHeight; // 获取当前点击偏移量\n\n      let volumeOffsetHeight = processLength - (e.pageY - this.volumeProcess.getBoundingClientRect().top); // 当前音量进度比例\n\n      let volumepercentage = 0;\n\n      if (volumeOffsetHeight < 0) {\n        volumeOffsetHeight = 0;\n      }\n\n      if (volumeOffsetHeight > processLength) {\n        volumeOffsetHeight = processLength;\n      }\n\n      volumepercentage = volumeOffsetHeight / processLength; // 设置进度条\n\n      this.volumeProcessCurrent.style.height = `${volumeOffsetHeight}px`; // 设置进度条item\n\n      this.volumeProcessItem.style.bottom = `${volumeOffsetHeight - 6}px`; // 设置音量\n\n      this.audio.volume = volumepercentage;\n    };\n\n    this.onVolumeProcessItemMouseDown = () => {\n      // 设置当前进入可拖动状态\n      this.setState({\n        volumeProcessItemMove: true\n      });\n    };\n\n    this.onVolumeProcessItemMouseUp = e => {\n      const {\n        volumeProcessItemMove\n      } = this.state;\n\n      if (volumeProcessItemMove) {\n        this.setState({\n          volumeProcessItemMove: false\n        });\n      }\n    };\n\n    this.onVolumeProcessItemMove = e => {\n      const {\n        volumeProcessItemMove\n      } = this.state;\n\n      if (volumeProcessItemMove) {\n        this.onVolumeProcessSet(e);\n      }\n    };\n\n    this.onPlayModeChange = () => {\n      const {\n        playMode\n      } = this.state;\n\n      if (playMode === 3) {\n        this.setState({\n          playMode: 1\n        });\n      } else {\n        this.setState({\n          playMode: playMode + 1\n        });\n      }\n    };\n\n    this.onShare = () => {\n      alert(\"分享方法，自定义完善\");\n    };\n\n    this.onFolder = () => {\n      alert(\"加入歌单方法，自定义完善\");\n    };\n\n    this.onMusicList = () => {\n      const {\n        isMusicListShow\n      } = this.state;\n      this.setState({\n        isMusicListShow: !isMusicListShow\n      });\n    };\n\n    this.onCollect = () => {\n      alert(\"收藏方法，自定义完善\");\n    };\n\n    this.onAddFile = (e, item) => {\n      e.stopPropagation();\n      alert(`单首歌加入收藏歌单，自定义完善，歌曲id:${item.id}，歌曲名称:${item.title}`);\n    };\n\n    this.onShareMusic = (e, item) => {\n      e.stopPropagation();\n      alert(`分享指定歌曲，自定义完善，歌曲id:${item.id}，歌曲名称:${item.title}`);\n    };\n\n    this.onUploadMusic = (e, item) => {\n      e.stopPropagation();\n      alert(`下载指定歌曲，自定义完善，歌曲id:${item.id}，歌曲名称:${item.title}`);\n    };\n\n    this.onDeleteMusic = (e, item) => {\n      e.stopPropagation();\n      const {\n        onDeleteMusic\n      } = this.props;\n\n      if (onDeleteMusic) {\n        onDeleteMusic(item.id);\n      }\n    };\n\n    this.onDeleteAllMusic = () => {\n      const {\n        onDeleteAllMusic\n      } = this.props;\n\n      if (onDeleteAllMusic) {\n        onDeleteAllMusic();\n      }\n    };\n\n    this.onMusicListItemClick = id => {\n      const {\n        musicList\n      } = this.state;\n      const {\n        currentMusic\n      } = this.state;\n      const index = musicList.findIndex(item => {\n        return item.id === id;\n      });\n\n      if (index !== -1) {\n        // 当前播放的音乐和点击的音乐相同，则重置播放时间\n        if (currentMusic.id === id) {\n          this.resetProcess();\n          this.audio.currentTime = 0;\n          this.onPlay();\n        } else {\n          this.setState({\n            currentMusic: musicList[index]\n          }, () => {\n            this.resetProcess();\n            this.onPlay();\n          });\n        }\n      }\n    };\n  }\n\n  static getDerivedStateFromProps(nextProps, prevState) {\n    const {\n      currentMusic,\n      musicList: prevMusicList\n    } = prevState;\n    const {\n      musicList = []\n    } = nextProps; // 判断音乐列表已经不同了\n\n    if (!_.isEqual(musicList, prevMusicList)) {\n      const oldIndex = prevMusicList.findIndex(item => {\n        return currentMusic.id === item.id;\n      });\n      const hasCurrentMusic = musicList.findIndex(item => {\n        return currentMusic.id === item.id;\n      });\n      let newCurrentMusic = musicList[oldIndex] ? musicList[oldIndex] : musicList[0];\n\n      if (musicList.length === 0) {\n        newCurrentMusic = currentMusic;\n      }\n\n      return {\n        musicList,\n        currentMusic: hasCurrentMusic === -1 ? newCurrentMusic : currentMusic\n      };\n    }\n\n    return null;\n  }\n\n  componentDidUpdate(prevProps, prevState, snapshot) {\n    // 当前音乐更新了\n    if (prevState.currentMusic.id !== this.state.currentMusic.id) {\n      this.resetProcess();\n\n      if (this.state.isPause) {\n        this.onPlay();\n      }\n    }\n  }\n\n  componentDidMount() {\n    const audio = this.audio; // 这里需要设置audio的canplay事件监听\n\n    audio.addEventListener(\"canplay\", () => {\n      //获取总时间\n      const totalTime = parseInt(audio.duration);\n      this.setState({\n        totalTime: this.getTime(totalTime)\n      });\n    }); // 播放中添加时间变化监听\n\n    audio.addEventListener(\"timeupdate\", () => {\n      const {\n        processItemMove\n      } = this.state; //获取当前播放时间\n\n      const currentTime = parseInt(audio.currentTime); // 缓存对象\n\n      const buffered = audio.buffered; // 当前缓存时间\n\n      let bufferTime = 0;\n\n      if (buffered.length !== 0) {\n        bufferTime = buffered.end(buffered.length - 1);\n      } // 当前缓存缓存宽度计算 500是进度条宽度\n\n\n      const bufferWidth = 500 * (bufferTime / audio.duration); // 当前播放宽度计算 500是进度条宽度\n\n      const playWidth = 500 * (audio.currentTime / audio.duration); // 如果正在拖动进度条的时候，不监听播放进度\n\n      if (!processItemMove) {\n        this.processPlayed.style.width = `${playWidth}px`;\n        this.processItem.style.left = `${playWidth - 4}px`; // 未拖动时根据时间变化设置当前时间\n\n        this.setState({\n          currentTime: this.getTime(currentTime)\n        });\n      }\n\n      this.processBuffered.style.width = `${bufferWidth}px`;\n    }); // 当前音乐播放完毕监听\n\n    audio.addEventListener(\"ended\", () => {\n      this.endedPlayMusic();\n    }); // 初始化音量\n\n    this.initVolumeProcess();\n  } // 秒转换-分:秒的格式\n\n\n  render() {\n    const {\n      currentMusic,\n      isPause,\n      totalTime,\n      currentTime,\n      volumeControl,\n      playMode,\n      isMusicListShow\n    } = this.state;\n    const {\n      title,\n      info,\n      img,\n      resource,\n      id\n    } = currentMusic || {};\n    const {\n      musicList\n    } = this.state;\n    let playModeIcon = \"\";\n\n    switch (playMode) {\n      case 1:\n        playModeIcon = \"icon-circulation-list\";\n        break;\n\n      case 2:\n        playModeIcon = \"icon-circulation-random\";\n        break;\n\n      case 3:\n        playModeIcon = \"icon-circulation-single\";\n        break;\n\n      default:\n        playModeIcon = \"icon-circulation-list\";\n        break;\n    }\n\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"mainLayout\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"mainContent\",\n        onMouseMove: this.onProcessItemMouseMove,\n        onMouseUp: this.onProcessItemMouseUp,\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"playContent\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"left-controler\",\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"icon-prev prev-next-icon\",\n              onClick: this.previousMusic\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 515,\n              columnNumber: 17\n            }, this), isPause ? /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"icon-pause playIcon\",\n              onClick: this.onPause\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 520,\n              columnNumber: 19\n            }, this) : /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"icon-play playIcon\",\n              onClick: this.onPlay\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 522,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"icon-next prev-next-icon\",\n              onClick: this.nextMusic\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 524,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 514,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"main-controler\",\n            children: [/*#__PURE__*/_jsxDEV(\"img\", {\n              src: img,\n              alt: \"\",\n              className: \"thumbnail\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 531,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"music-control\",\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"music-info\",\n                children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"title-info\",\n                  children: title\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 534,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"author-info\",\n                  children: info\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 535,\n                  columnNumber: 21\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 533,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"process-time\",\n                children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"process-wrapper\",\n                  onClick: this.onProcessClick,\n                  ref: ref => this.process = ref,\n                  children: /*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"process\",\n                    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                      className: \"progress-buffered\",\n                      ref: ref => this.processBuffered = ref\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 544,\n                      columnNumber: 25\n                    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                      className: \"progress-played\",\n                      ref: ref => this.processPlayed = ref,\n                      children: /*#__PURE__*/_jsxDEV(\"div\", {\n                        className: \"process-item\",\n                        ref: ref => this.processItem = ref,\n                        onMouseDown: this.onProcessItemMouseDown // onMouseUp={this.onProcessItemMouseUp}\n                        ,\n                        children: /*#__PURE__*/_jsxDEV(\"div\", {\n                          className: \"process-item-inside\"\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 558,\n                          columnNumber: 29\n                        }, this)\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 552,\n                        columnNumber: 27\n                      }, this)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 548,\n                      columnNumber: 25\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 543,\n                    columnNumber: 23\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 538,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"time\",\n                  children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                    className: \"current-time\",\n                    children: currentTime\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 564,\n                    columnNumber: 23\n                  }, this), \"/\", /*#__PURE__*/_jsxDEV(\"span\", {\n                    className: \"total-time\",\n                    children: totalTime\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 565,\n                    columnNumber: 23\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 563,\n                  columnNumber: 21\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 537,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 532,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 530,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"right-folder\",\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"icon-folder folder\",\n              onClick: this.onFolder\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 572,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"icon-share share\",\n              onClick: this.onShare\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 573,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 571,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"right-controler\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"volume-controler\",\n              style: {\n                visibility: volumeControl ? \"visible\" : \"hidden\"\n              },\n              onMouseMove: this.onVolumeProcessItemMove,\n              onMouseUp: this.onVolumeProcessItemMouseUp,\n              children: /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"volume-process\",\n                onClick: this.onVolumeProcessSet,\n                ref: ref => this.volumeProcess = ref,\n                children: /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"volume-current\",\n                  ref: ref => this.volumeProcessCurrent = ref,\n                  children: /*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"volume-item\",\n                    ref: ref => this.volumeProcessItem = ref,\n                    onMouseDown: this.onVolumeProcessItemMouseDown,\n                    onMouseUp: this.onVolumeProcessItemMouseUp,\n                    children: /*#__PURE__*/_jsxDEV(\"div\", {\n                      className: \"volume-item-inside\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 599,\n                      columnNumber: 25\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 593,\n                    columnNumber: 23\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 589,\n                  columnNumber: 21\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 584,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 578,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"icon-volume volume\",\n              onClick: this.onVolumeControl\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 604,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              className: `${playModeIcon} circulation`,\n              onClick: this.onPlayModeChange\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 608,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"icon-list list\",\n              onClick: this.onMusicList\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 612,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 576,\n            columnNumber: 15\n          }, this), isMusicListShow && /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"musicList\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"music-list-head\",\n              children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n                className: \"music-list-head-title\",\n                children: [\"\\u64AD\\u653E\\u5217\\u8868(\", /*#__PURE__*/_jsxDEV(\"span\", {\n                  children: musicList && musicList.length ? musicList.length : 0\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 620,\n                  columnNumber: 23\n                }, this), \")\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 618,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"music-list-head-collect\",\n                onClick: this.onCollect,\n                children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"icon-addfile music-list-common-icon\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 629,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"music-list-common-text\",\n                  children: \"\\u6536\\u85CF\\u5168\\u90E8\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 630,\n                  columnNumber: 23\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 625,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"music-list-head-line\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 632,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"music-list-head-clear\",\n                onClick: this.onDeleteAllMusic,\n                children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"icon-clear music-list-common-icon\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 637,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"music-list-common-text\",\n                  children: \"\\u6E05\\u9664\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 638,\n                  columnNumber: 23\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 633,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                className: \"music-list-head-name\",\n                children: title\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 640,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"music-list-head-close\",\n                children: /*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"icon-close music-list-common-icon\",\n                  onClick: this.onMusicList\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 642,\n                  columnNumber: 23\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 641,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 617,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"music-list-body\",\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"music-list-body-content\",\n                children: /*#__PURE__*/_jsxDEV(\"ul\", {\n                  className: \"music-list-body-ul\",\n                  children: musicList && musicList.length > 0 && musicList.map(item => {\n                    return /*#__PURE__*/_jsxDEV(\"li\", {\n                      className: `music-list-li ${id === item.id && \"music-current\"}`,\n                      onClick: () => this.onMusicListItemClick(item.id),\n                      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                        className: \"col music-list-li-col-1\",\n                        children: id === item.id && /*#__PURE__*/_jsxDEV(\"span\", {\n                          className: \"play-triangle-icon icon-currentPlay\"\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 663,\n                          columnNumber: 37\n                        }, this)\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 661,\n                        columnNumber: 33\n                      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                        className: \"col music-list-li-col-2\",\n                        children: /*#__PURE__*/_jsxDEV(\"span\", {\n                          className: \"music-list-li-text\",\n                          children: item.title\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 667,\n                          columnNumber: 35\n                        }, this)\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 666,\n                        columnNumber: 33\n                      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                        className: \"col music-list-li-col-3\",\n                        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                          className: \"icon-addfile music-list-action-icon\",\n                          onClick: e => this.onAddFile(e, item)\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 672,\n                          columnNumber: 35\n                        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                          className: \"icon-share music-list-action-icon\",\n                          onClick: e => this.onShareMusic(e, item)\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 676,\n                          columnNumber: 35\n                        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                          className: \"icon-download music-list-action-icon\",\n                          onClick: e => this.onUploadMusic(e, item)\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 680,\n                          columnNumber: 35\n                        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                          className: \"icon-clear music-list-action-icon\",\n                          onClick: e => this.onDeleteMusic(e, item)\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 684,\n                          columnNumber: 35\n                        }, this)]\n                      }, void 0, true, {\n                        fileName: _jsxFileName,\n                        lineNumber: 671,\n                        columnNumber: 33\n                      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                        className: \"col music-list-li-col-4\",\n                        children: /*#__PURE__*/_jsxDEV(\"span\", {\n                          className: \"music-list-li-text\",\n                          children: item.info\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 690,\n                          columnNumber: 35\n                        }, this)\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 689,\n                        columnNumber: 33\n                      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                        className: \"col music-list-li-col-5\",\n                        children: /*#__PURE__*/_jsxDEV(\"span\", {\n                          className: \"music-list-li-text\",\n                          children: item.time\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 695,\n                          columnNumber: 35\n                        }, this)\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 694,\n                        columnNumber: 33\n                      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                        className: \"col music-list-li-col-6\",\n                        children: /*#__PURE__*/_jsxDEV(\"span\", {\n                          className: \"icon-link music-list-action-icon\"\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 700,\n                          columnNumber: 35\n                        }, this)\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 699,\n                        columnNumber: 33\n                      }, this)]\n                    }, item.id, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 655,\n                      columnNumber: 31\n                    }, this);\n                  })\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 650,\n                  columnNumber: 23\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 649,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"music-list-body-lyric\",\n                children: \"\\u8FD9\\u91CC\\u662F\\u6B4C\\u8BCD\\u533A\\u57DF\\uFF0C\\u540E\\u671F\\u5B8C\\u5584\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 707,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 648,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 616,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"audio\", {\n            src: resource,\n            ref: ref => this.audio = ref\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 714,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 512,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 507,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 506,\n      columnNumber: 9\n    }, this);\n  }\n\n}","map":{"version":3,"sources":["/home/lin/phase5/My-Place-Frontend/my-place/src/Component/Music.js"],"names":["React","Component","_","sound","Music","state","isPause","musicList","id","title","info","resource","time","img","currentMusic","totalTime","currentTime","processItemMove","volumeProcessItemMove","volumeControl","playMode","isMusicListShow","getTime","minute","parseInt","second","minuteText","secondText","onPlay","audio","setState","play","onPause","pause","onProcessClick","e","setProcess","key","offsetWidth","pageX","processPlayed","getBoundingClientRect","left","process","offsetPercentage","duration","style","width","processItem","onProcessItemMouseDown","stopPropagation","onProcessItemMouseMove","onProcessItemMouseUp","endedPlayMusic","length","currentIndex","findIndex","item","onSwitchAction","randomIndex","Math","floor","random","nextMusic","previousMusic","resetProcess","onVolumeControl","onVolumeControlHide","initVolumeProcess","processLength","volumeProcess","offsetHeight","volumeProcessCurrent","height","volumeProcessItem","bottom","volume","onVolumeProcessSet","volumeOffsetHeight","pageY","top","volumepercentage","onVolumeProcessItemMouseDown","onVolumeProcessItemMouseUp","onVolumeProcessItemMove","onPlayModeChange","onShare","alert","onFolder","onMusicList","onCollect","onAddFile","onShareMusic","onUploadMusic","onDeleteMusic","props","onDeleteAllMusic","onMusicListItemClick","index","getDerivedStateFromProps","nextProps","prevState","prevMusicList","isEqual","oldIndex","hasCurrentMusic","newCurrentMusic","componentDidUpdate","prevProps","snapshot","componentDidMount","addEventListener","buffered","bufferTime","end","bufferWidth","playWidth","processBuffered","render","playModeIcon","ref","visibility","map"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport _ from \"lodash\"\n\nconst sound = 'https://www.soundhelix.com/examples/mp3/SoundHelix-Song-1.mp3';\n\n\nexport default class Music extends Component {\n\n    state = {\n      isPause: false,\n      musicList: [\n        {\n          id: \"1\",\n          title: \"打上花火\",\n          info: \"DAOKO,米津玄師\",\n          resource: sound,\n          time: \"04:50\",\n          img:\n            \"http://singerimg.kugou.com/uploadpic/softhead/400/20160913/20160913140233132.jpg\"\n        },\n      ],\n      currentMusic: musicList ?  musicList[0] : {},\n      totalTime: \"00:00\",\n      currentTime: \"00:00\",\n      processItemMove: false,\n      volumeProcessItemMove: false,\n      volumeControl: false,\n      playMode: 1,\n      isMusicListShow: false\n     }\n\n\n     static getDerivedStateFromProps(nextProps, prevState) {\n      const { currentMusic, musicList: prevMusicList } = prevState;\n      const { musicList = [] } = nextProps;\n      // 判断音乐列表已经不同了\n      if (!_.isEqual(musicList, prevMusicList)) {\n        const oldIndex = prevMusicList.findIndex(item => {\n          return currentMusic.id === item.id;\n        });\n        const hasCurrentMusic = musicList.findIndex(item => {\n          return currentMusic.id === item.id;\n        });\n        let newCurrentMusic = musicList[oldIndex]\n          ? musicList[oldIndex]\n          : musicList[0];\n        if (musicList.length === 0) {\n          newCurrentMusic = currentMusic;\n        }\n        return {\n          musicList,\n          currentMusic: hasCurrentMusic === -1 ? newCurrentMusic : currentMusic\n        };\n      }\n      return null;\n    }\n  \n    componentDidUpdate(prevProps, prevState, snapshot) {\n      // 当前音乐更新了\n      if (prevState.currentMusic.id !== this.state.currentMusic.id) {\n        this.resetProcess();\n        if (this.state.isPause) {\n          this.onPlay();\n        }\n      }\n    }\n  \n    componentDidMount() {\n      const audio = this.audio;\n      // 这里需要设置audio的canplay事件监听\n      audio.addEventListener(\"canplay\", () => {\n        //获取总时间\n        const totalTime = parseInt(audio.duration);\n        this.setState({\n          totalTime: this.getTime(totalTime)\n        });\n      });\n      // 播放中添加时间变化监听\n      audio.addEventListener(\"timeupdate\", () => {\n        const { processItemMove } = this.state;\n        //获取当前播放时间\n        const currentTime = parseInt(audio.currentTime);\n        // 缓存对象\n        const buffered = audio.buffered;\n        // 当前缓存时间\n        let bufferTime = 0;\n        if (buffered.length !== 0) {\n          bufferTime = buffered.end(buffered.length - 1);\n        }\n        // 当前缓存缓存宽度计算 500是进度条宽度\n        const bufferWidth = 500 * (bufferTime / audio.duration);\n        // 当前播放宽度计算 500是进度条宽度\n        const playWidth = 500 * (audio.currentTime / audio.duration);\n        // 如果正在拖动进度条的时候，不监听播放进度\n        if (!processItemMove) {\n          this.processPlayed.style.width = `${playWidth}px`;\n          this.processItem.style.left = `${playWidth - 4}px`;\n          // 未拖动时根据时间变化设置当前时间\n          this.setState({\n            currentTime: this.getTime(currentTime)\n          });\n        }\n        this.processBuffered.style.width = `${bufferWidth}px`;\n      });\n  \n      // 当前音乐播放完毕监听\n      audio.addEventListener(\"ended\", () => {\n        this.endedPlayMusic();\n      });\n      // 初始化音量\n      this.initVolumeProcess();\n    }\n  \n    // 秒转换-分:秒的格式\n    getTime = time => {\n      if (time) {\n        const minute = parseInt((time / 60) % 60);\n        const second = parseInt(time % 60);\n        let minuteText = `${minute}`;\n        let secondText = `${second}`;\n        if (minute < 10) {\n          minuteText = `0${minute}`;\n        }\n        if (second < 10) {\n          secondText = `0${second}`;\n        }\n        return `${minuteText}:${secondText}`;\n      } else {\n        return \"00:00\";\n      }\n    };\n  \n    // 播放\n    onPlay = () => {\n      const audio = this.audio;\n      this.setState({ isPause: true });\n      audio.play();\n    };\n  \n    // 暂停\n    onPause = () => {\n      const audio = this.audio;\n      this.setState({ isPause: false });\n      audio.pause();\n    };\n  \n    // 点击进度条\n    onProcessClick = e => {\n      this.setProcess(e, \"click\");\n    };\n  \n    // 设置进度条进度\n    setProcess = (e, key) => {\n      // 获取当前点击偏移宽度\n      let offsetWidth = e.pageX - this.processPlayed.getBoundingClientRect().left;\n      // 需要限制拖动范围，不能超出左右边界\n      if (offsetWidth < 0) {\n        offsetWidth = 0;\n      }\n      if (offsetWidth > this.process.offsetWidth) {\n        offsetWidth = this.process.offsetWidth;\n      }\n      // 计算偏移比例\n      const offsetPercentage = offsetWidth / this.process.offsetWidth;\n      // 计算当前时间\n      const currentTime = this.audio.duration * offsetPercentage;\n      if (key === \"click\" || key === \"dragMove\") {\n        // 设置当前进度条偏移位置\n        this.processPlayed.style.width = `${offsetWidth}px`;\n        this.processItem.style.left = `${offsetWidth - 4}px`;\n        this.setState({ currentTime: this.getTime(currentTime) });\n      }\n      // 设置当前音乐进度 拖拽不需要及时计算播放进度，会导致音乐像快进一样的效果，体验很差，点击进度条是需要及时设置当前播放进度的\n      if (key === \"dragEnd\" || key === \"click\") {\n        this.audio.currentTime = currentTime;\n      }\n    };\n  \n    //  进度条item MouseDown\n    onProcessItemMouseDown = e => {\n      // 阻止事件冒泡\n      e.stopPropagation();\n      // 按下后置item为可拖动状态\n      this.setState({ processItemMove: true });\n    };\n    //  进度条item MouseMove\n    onProcessItemMouseMove = e => {\n      // 阻止事件冒泡\n      e.stopPropagation();\n      const { processItemMove } = this.state;\n      if (processItemMove) {\n        this.setProcess(e, \"dragMove\");\n      }\n    };\n    //  进度条item MouseUp\n    onProcessItemMouseUp = e => {\n      const { processItemMove } = this.state;\n      // 阻止事件冒泡\n      e.stopPropagation();\n      // 这里的判断是关键，一定要判断是处于processItemMove=true的状态，表示当前正在拖动进度条，不然会导致mouseUp和onClick事件的传播问题\n      if (processItemMove) {\n        this.setState({ processItemMove: false });\n        // 松开后置item为禁止拖动的状态\n        this.setProcess(e, \"dragEnd\");\n      }\n    };\n  \n    // 当前音乐播放结束后下一首音乐处理 根据当前的播放模式决定下一首音乐是什么\n    endedPlayMusic = () => {\n      const { playMode, currentMusic } = this.state;\n      const { musicList } = this.state;\n      if (musicList.length > 0 && currentMusic) {\n        const currentIndex = musicList.findIndex(item => {\n          return item.id === currentMusic.id;\n        });\n        // 列表循环\n        if (playMode === 1) {\n          if (musicList[currentIndex + 1]) {\n            this.setState({ currentMusic: musicList[currentIndex + 1] }, () => {\n              this.onSwitchAction();\n            });\n          } else {\n            this.setState({ currentMusic: musicList[0] }, () => {\n              this.onSwitchAction();\n            });\n          }\n        }\n        // 列表随机\n        else if (playMode === 2) {\n          const randomIndex = Math.floor(Math.random() * 3 + 1);\n          if (musicList[randomIndex + 1]) {\n            this.setState({ currentMusic: musicList[randomIndex + 1] }, () => {\n              this.onSwitchAction();\n            });\n          } else {\n            this.setState({ currentMusic: musicList[0] }, () => {\n              this.onSwitchAction();\n            });\n          }\n        }\n        // 单曲循环\n        else if (playMode === 3) {\n          this.onSwitchAction();\n        }\n      } else {\n        // 当前播放列表已经空了，则不自动切歌，播放完毕后，直接重置当前的播放的音乐\n        this.onSwitchAction();\n      }\n    };\n  \n    // 下一首歌\n    nextMusic = () => {\n      const { currentMusic } = this.state;\n      const { musicList } = this.state;\n      if (musicList.length > 1 && currentMusic) {\n        const currentIndex = musicList.findIndex(item => {\n          return item.id === currentMusic.id;\n        });\n        if (musicList[currentIndex + 1]) {\n          this.setState({ currentMusic: musicList[currentIndex + 1] }, () => {\n            this.onSwitchAction();\n          });\n        } else {\n          this.setState({ currentMusic: musicList[0] }, () => {\n            this.onSwitchAction();\n          });\n        }\n      } else {\n        this.audio.currentTime = 0;\n        this.onSwitchAction();\n      }\n    };\n    // 上一首歌\n    previousMusic = () => {\n      const { currentMusic } = this.state;\n      const { musicList } = this.state;\n      if (musicList.length > 1 && currentMusic) {\n        const currentIndex = musicList.findIndex(item => {\n          return item.id === currentMusic.id;\n        });\n        if (musicList[currentIndex - 1]) {\n          this.setState({ currentMusic: musicList[currentIndex - 1] }, () => {\n            this.onSwitchAction();\n          });\n        } else {\n          this.setState({ currentMusic: musicList[musicList.length - 1] }, () => {\n            this.onSwitchAction();\n          });\n        }\n      } else {\n        this.audio.currentTime = 0;\n        this.onSwitchAction();\n      }\n    };\n  \n    // 切歌后相关操作，如果正在播放中，则切歌后还是会直接播放，如果处于暂停，则切歌后不会直接播放\n    onSwitchAction = () => {\n      const { isPause } = this.state;\n      // 处于暂停标志，则表示正在播放中，则重置进度条后，直接调用播放，否则就只重置进度条，不调用播放\n      this.resetProcess();\n      if (isPause) {\n        this.onPlay();\n      }\n    };\n  \n    // 重新设置当前缓存和播放进度状态，用于切歌后的进度条显示\n    resetProcess = () => {\n      this.processPlayed.style.width = \"0px\";\n      this.processItem.style.left = \"-4px\";\n    };\n  \n    // 音量控制条显示隐藏\n    onVolumeControl = () => {\n      const { volumeControl } = this.state;\n      this.setState({ volumeControl: !volumeControl });\n    };\n  \n    // 隐藏音量设置条\n    onVolumeControlHide = () => {\n      const { volumeControl } = this.state;\n      if (volumeControl) {\n        this.setState({ volumeControl: false });\n      }\n    };\n    // 初始化音量\n    initVolumeProcess = () => {\n      // 获取当前音量条高度\n      const processLength = this.volumeProcess.offsetHeight;\n      // 设置进度条\n      this.volumeProcessCurrent.style.height = `${processLength / 2}px`;\n      // 设置进度条item\n      this.volumeProcessItem.style.bottom = `${processLength / 2 - 6}px`;\n      // 设置音量\n      this.audio.volume = 0.5;\n    };\n  \n    // 音量控制条点击\n    onVolumeProcessSet = e => {\n      // 获取当前音量条高度\n      const processLength = this.volumeProcess.offsetHeight;\n      // 获取当前点击偏移量\n      let volumeOffsetHeight =\n        processLength -\n        (e.pageY - this.volumeProcess.getBoundingClientRect().top);\n      // 当前音量进度比例\n      let volumepercentage = 0;\n      if (volumeOffsetHeight < 0) {\n        volumeOffsetHeight = 0;\n      }\n      if (volumeOffsetHeight > processLength) {\n        volumeOffsetHeight = processLength;\n      }\n      volumepercentage = volumeOffsetHeight / processLength;\n      // 设置进度条\n      this.volumeProcessCurrent.style.height = `${volumeOffsetHeight}px`;\n      // 设置进度条item\n      this.volumeProcessItem.style.bottom = `${volumeOffsetHeight - 6}px`;\n      // 设置音量\n      this.audio.volume = volumepercentage;\n    };\n  \n    // 音量item鼠标按下方法监听\n    onVolumeProcessItemMouseDown = () => {\n      // 设置当前进入可拖动状态\n      this.setState({ volumeProcessItemMove: true });\n    };\n  \n    // 音量item鼠标抬起方法监听\n    onVolumeProcessItemMouseUp = e => {\n      const { volumeProcessItemMove } = this.state;\n      if (volumeProcessItemMove) {\n        this.setState({ volumeProcessItemMove: false });\n      }\n    };\n  \n    // 音量item鼠标拖拽方法监听\n    onVolumeProcessItemMove = e => {\n      const { volumeProcessItemMove } = this.state;\n      if (volumeProcessItemMove) {\n        this.onVolumeProcessSet(e);\n      }\n    };\n  \n    // 设置音乐播放模式\n    onPlayModeChange = () => {\n      const { playMode } = this.state;\n      if (playMode === 3) {\n        this.setState({ playMode: 1 });\n      } else {\n        this.setState({ playMode: playMode + 1 });\n      }\n    };\n  \n    // TODO: 分享\n    onShare = () => {\n      alert(\"分享方法，自定义完善\");\n    };\n    // TODO: 分享\n    onFolder = () => {\n      alert(\"加入歌单方法，自定义完善\");\n    };\n    // 歌单列表控制\n    onMusicList = () => {\n      const { isMusicListShow } = this.state;\n      this.setState({ isMusicListShow: !isMusicListShow });\n    };\n  \n    // TODO: 收藏\n    onCollect = () => {\n      alert(\"收藏方法，自定义完善\");\n    };\n  \n    // TODO: 单首歌加入收藏歌单\n    onAddFile = (e, item) => {\n      e.stopPropagation();\n      alert(\n        `单首歌加入收藏歌单，自定义完善，歌曲id:${item.id}，歌曲名称:${\n          item.title\n        }`\n      );\n    };\n  \n    // TODO: 分享指定歌曲\n    onShareMusic = (e, item) => {\n      e.stopPropagation();\n      alert(\n        `分享指定歌曲，自定义完善，歌曲id:${item.id}，歌曲名称:${item.title}`\n      );\n    };\n  \n    // TODO: 下载指定歌曲\n    onUploadMusic = (e, item) => {\n      e.stopPropagation();\n      alert(\n        `下载指定歌曲，自定义完善，歌曲id:${item.id}，歌曲名称:${item.title}`\n      );\n    };\n  \n    // 删除指定歌曲\n    onDeleteMusic = (e, item) => {\n      e.stopPropagation();\n      const { onDeleteMusic } = this.props;\n      if (onDeleteMusic) {\n        onDeleteMusic(item.id);\n      }\n    };\n  \n    // 删除当前全部歌曲\n    onDeleteAllMusic = () => {\n      const { onDeleteAllMusic } = this.props;\n      if (onDeleteAllMusic) {\n        onDeleteAllMusic();\n      }\n    };\n  \n    // 歌单切歌\n    onMusicListItemClick = id => {\n      const { musicList } = this.state;\n      const { currentMusic } = this.state;\n      const index = musicList.findIndex(item => {\n        return item.id === id;\n      });\n      if (index !== -1) {\n        // 当前播放的音乐和点击的音乐相同，则重置播放时间\n        if (currentMusic.id === id) {\n          this.resetProcess();\n          this.audio.currentTime = 0;\n          this.onPlay();\n        } else {\n          this.setState({ currentMusic: musicList[index] }, () => {\n            this.resetProcess();\n            this.onPlay();\n          });\n        }\n      }\n    };\n  \n    render() {\n      const {\n        currentMusic,\n        isPause,\n        totalTime,\n        currentTime,\n        volumeControl,\n        playMode,\n        isMusicListShow\n      } = this.state;\n      const { title, info, img, resource, id } = currentMusic || {};\n      const { musicList } = this.state;\n      let playModeIcon = \"\";\n      switch (playMode) {\n        case 1:\n          playModeIcon = \"icon-circulation-list\";\n          break;\n        case 2:\n          playModeIcon = \"icon-circulation-random\";\n          break;\n        case 3:\n          playModeIcon = \"icon-circulation-single\";\n          break;\n        default:\n          playModeIcon = \"icon-circulation-list\";\n          break;\n      }\n      return (\n        <div className=\"mainLayout\">\n          <div\n            className=\"mainContent\"\n            onMouseMove={this.onProcessItemMouseMove}\n            onMouseUp={this.onProcessItemMouseUp}\n          >\n            <div className=\"playContent\">\n              {/* 左侧控制器，播放，上一首，下一首 */}\n              <div className=\"left-controler\">\n                <span\n                  className=\"icon-prev prev-next-icon\"\n                  onClick={this.previousMusic}\n                />\n                {isPause ? (\n                  <span className=\"icon-pause playIcon\" onClick={this.onPause} />\n                ) : (\n                  <span className=\"icon-play playIcon\" onClick={this.onPlay} />\n                )}\n                <span\n                  className=\"icon-next prev-next-icon\"\n                  onClick={this.nextMusic}\n                />\n              </div>\n              {/* 主播放界面，缩略图，作者信息，进度条等 */}\n              <div className=\"main-controler\">\n                <img src={img} alt=\"\" className=\"thumbnail\" />\n                <div className=\"music-control\">\n                  <div className=\"music-info\">\n                    <span className=\"title-info\">{title}</span>\n                    <span className=\"author-info\">{info}</span>\n                  </div>\n                  <div className=\"process-time\">\n                    <div\n                      className=\"process-wrapper\"\n                      onClick={this.onProcessClick}\n                      ref={ref => (this.process = ref)}\n                    >\n                      <div className=\"process\">\n                        <div\n                          className=\"progress-buffered\"\n                          ref={ref => (this.processBuffered = ref)}\n                        />\n                        <div\n                          className=\"progress-played\"\n                          ref={ref => (this.processPlayed = ref)}\n                        >\n                          <div\n                            className=\"process-item\"\n                            ref={ref => (this.processItem = ref)}\n                            onMouseDown={this.onProcessItemMouseDown}\n                            // onMouseUp={this.onProcessItemMouseUp}\n                          >\n                            <div className=\"process-item-inside\" />\n                          </div>\n                        </div>\n                      </div>\n                    </div>\n                    <div className=\"time\">\n                      <span className=\"current-time\">{currentTime}</span>/\n                      <span className=\"total-time\">{totalTime}</span>\n                    </div>\n                  </div>\n                </div>\n              </div>\n              {/* 右侧加入歌单和分享 */}\n              <div className=\"right-folder\">\n                <span className=\"icon-folder folder\" onClick={this.onFolder} />\n                <span className=\"icon-share share\" onClick={this.onShare} />\n              </div>\n              {/* 右侧音量调节，循环调节，歌单查看 */}\n              <div className=\"right-controler\">\n                {/* 音量控制条，这里采用的是style控制，因为需要获取到音量条的ref，如果不存在这个节点，就获取不到ref*/}\n                <div\n                  className=\"volume-controler\"\n                  style={{ visibility: volumeControl ? \"visible\" : \"hidden\" }}\n                  onMouseMove={this.onVolumeProcessItemMove}\n                  onMouseUp={this.onVolumeProcessItemMouseUp}\n                >\n                  <div\n                    className=\"volume-process\"\n                    onClick={this.onVolumeProcessSet}\n                    ref={ref => (this.volumeProcess = ref)}\n                  >\n                    <div\n                      className=\"volume-current\"\n                      ref={ref => (this.volumeProcessCurrent = ref)}\n                    >\n                      <div\n                        className=\"volume-item\"\n                        ref={ref => (this.volumeProcessItem = ref)}\n                        onMouseDown={this.onVolumeProcessItemMouseDown}\n                        onMouseUp={this.onVolumeProcessItemMouseUp}\n                      >\n                        <div className=\"volume-item-inside\" />\n                      </div>\n                    </div>\n                  </div>\n                </div>\n                <span\n                  className=\"icon-volume volume\"\n                  onClick={this.onVolumeControl}\n                />\n                <span\n                  className={`${playModeIcon} circulation`}\n                  onClick={this.onPlayModeChange}\n                />\n                <span className=\"icon-list list\" onClick={this.onMusicList} />\n              </div>\n              {/* 歌单组件 */}\n              {isMusicListShow && (\n                <div className=\"musicList\">\n                  <div className=\"music-list-head\">\n                    <h4 className=\"music-list-head-title\">\n                      播放列表(\n                      <span>\n                        {musicList && musicList.length ? musicList.length : 0}\n                      </span>\n                      )\n                    </h4>\n                    <span\n                      className=\"music-list-head-collect\"\n                      onClick={this.onCollect}\n                    >\n                      <span className=\"icon-addfile music-list-common-icon\" />\n                      <span className=\"music-list-common-text\">收藏全部</span>\n                    </span>\n                    <span className=\"music-list-head-line\" />\n                    <span\n                      className=\"music-list-head-clear\"\n                      onClick={this.onDeleteAllMusic}\n                    >\n                      <span className=\"icon-clear music-list-common-icon\" />\n                      <span className=\"music-list-common-text\">清除</span>\n                    </span>\n                    <p className=\"music-list-head-name\">{title}</p>\n                    <span className=\"music-list-head-close\">\n                      <span\n                        className=\"icon-close music-list-common-icon\"\n                        onClick={this.onMusicList}\n                      />\n                    </span>\n                  </div>\n                  <div className=\"music-list-body\">\n                    <div className=\"music-list-body-content\">\n                      <ul className=\"music-list-body-ul\">\n                        {musicList &&\n                          musicList.length > 0 &&\n                          musicList.map(item => {\n                            return (\n                              <li\n                                className={`music-list-li ${id === item.id &&\n                                  \"music-current\"}`}\n                                onClick={() => this.onMusicListItemClick(item.id)}\n                                key={item.id}\n                              >\n                                <div className=\"col music-list-li-col-1\">\n                                  {id === item.id && (\n                                    <span className=\"play-triangle-icon icon-currentPlay\" />\n                                  )}\n                                </div>\n                                <div className=\"col music-list-li-col-2\">\n                                  <span className=\"music-list-li-text\">\n                                    {item.title}\n                                  </span>\n                                </div>\n                                <div className=\"col music-list-li-col-3\">\n                                  <span\n                                    className=\"icon-addfile music-list-action-icon\"\n                                    onClick={e => this.onAddFile(e, item)}\n                                  />\n                                  <span\n                                    className=\"icon-share music-list-action-icon\"\n                                    onClick={e => this.onShareMusic(e, item)}\n                                  />\n                                  <span\n                                    className=\"icon-download music-list-action-icon\"\n                                    onClick={e => this.onUploadMusic(e, item)}\n                                  />\n                                  <span\n                                    className=\"icon-clear music-list-action-icon\"\n                                    onClick={e => this.onDeleteMusic(e, item)}\n                                  />\n                                </div>\n                                <div className=\"col music-list-li-col-4\">\n                                  <span className=\"music-list-li-text\">\n                                    {item.info}\n                                  </span>\n                                </div>\n                                <div className=\"col music-list-li-col-5\">\n                                  <span className=\"music-list-li-text\">\n                                    {item.time}\n                                  </span>\n                                </div>\n                                <div className=\"col music-list-li-col-6\">\n                                  <span className=\"icon-link music-list-action-icon\" />\n                                </div>\n                              </li>\n                            );\n                          })}\n                      </ul>\n                    </div>\n                    <div className=\"music-list-body-lyric\">\n                      这里是歌词区域，后期完善\n                    </div>\n                  </div>\n                </div>\n              )}\n              {/* 播放器基础组件 */}\n              <audio src={resource} ref={ref => (this.audio = ref)} />\n            </div>\n          </div>\n        </div>\n      );\n    }\n  }\n"]},"metadata":{},"sourceType":"module"}