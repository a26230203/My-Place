{"ast":null,"code":"var _jsxFileName = \"/home/lin/phase5/My-Place-Frontend/my-place/src/Component/Login.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport Canvas from \"./Convas\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Login(props) {\n  _s();\n\n  let [username, setUsername] = useState(\"\");\n  let [password, setPassword] = useState(\"\"); // let canvasRef = useRef(null)\n  // var mouse = {\n  //     x: undefined,\n  //     y: undefined\n  // }\n  // var maxRadius = 40;\n  // var minRadius = 5;\n  // useEffect(() => {\n  //     const canvas = canvasRef.current\n  //     const c = canvas.getContext('2d')\n  //     canvas.width = window.innerWidth\n  //     canvas.height = window.innerHeight\n  //     window.addEventListener('mousemove', (e) => {\n  //         mouse.x = e.x;\n  //         mouse.y = e.y\n  //     })\n  //     window.addEventListener('resize', () => {\n  //         canvas.width = window.innerWidth; \n  //         canvas.height = window.innerHeight;\n  //         circleGenerator();\n  //     })\n  //     function getRandColor() {\n  //         let r = 255*Math.random()|0,\n  //             g = 255*Math.random()|0,\n  //             b = 255*Math.random()|0;\n  //         return 'rgb(' + r + ',' + g + ',' + b + ',' + 0.7 + ')';\n  //     }\n  //     function circle(x, y, dx, dy, radius) {\n  //         this.x = x;\n  //         this.y = y;\n  //         this.dx = dx;\n  //         this.dy = dy;\n  //         this.radius = radius;\n  //         this.minRadius = radius;\n  //         this.color = getRandColor()\n  //         this.draw = () => {\n  //             c.beginPath();\n  //             c.arc(this.x, this.y, this.radius, 0, Math.PI * 2, false)\n  //             c.fillStyle = this.color\n  //             c.fill();\n  //         }\n  //         this.collision = () => {\n  //             if( this.x + radius > canvas.width || this.x - this.radius < 0) {\n  //                 this.dx = -this.dx;\n  //             }else if ( this.y + radius > canvas.height || this.y - this.radius < 0) {\n  //                 this.dy = -this.dy\n  //             }\n  //             this.x += this.dx;\n  //             this.y += this.dy;\n  //             if(mouse.x - this.x < 50 && mouse.x - this.x > -50 && mouse.y - this.y < 50 && mouse.y - this.y > -50) {\n  //                 if( this.radius < maxRadius){\n  //                     this.radius +=1;\n  //                 }\n  //             }else if (this.radius > this.minRadius){ \n  //                 this.radius -=1;\n  //             }\n  //             this.draw();\n  //         }\n  //     }\n  //     var circleArray = []\n  //     function circleGenerator() {\n  //         for(var i = 0; i < 300; i++) {\n  //             var radius = Math.random() * 15 + 1;\n  //             var x = Math.random() * (canvas.width - radius * 2 ) + radius;\n  //             var y = Math.random() * (canvas.height - radius * 2) + radius;\n  //             var dx = (Math.random() - 0.5 * 5);\n  //             var dy = (Math.random() - 0.5 * 5);\n  //             circleArray.push(new circle(x, y, dx, dy, radius))\n  //         }\n  //     }\n  //     circleGenerator();\n  //     const animate =() => {\n  //         requestAnimationFrame(animate);\n  //         c.clearRect(0,0,canvas.width,canvas.height);\n  //         for(var i = 0; i < circleArray.length; i++) {\n  //             circleArray[i].collision()\n  //         }\n  //     }\n  //     animate()\n  // }, [])\n\n  const handleSignupClick = () => {\n    props.history.push(\"/signup\");\n  };\n\n  const handleLogin = () => {};\n\n  return /*#__PURE__*/_jsxDEV(\"body\", {\n    className: \"login-page\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"switch\",\n      children: /*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Sign up\\uFF1F\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 117,\n        columnNumber: 37\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 117,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"checkbox\",\n      id: \"change\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 118,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n      for: \"change\",\n      onClick: () => handleSignupClick(),\n      children: \"Sign up\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 119,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"login\",\n      children: /*#__PURE__*/_jsxDEV(\"form\", {\n        className: \"login\",\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          children: \"Welcome Back\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 122,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          value: username,\n          placeholder: \"Please enter your username\",\n          onChange: e => setUsername(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 123,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"password\",\n          value: password,\n          placeholder: \"Please enter your password\",\n          onChange: e => setPassword(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 124,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"submit\",\n          className: \"btn\",\n          value: \"Login\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 125,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 121,\n        columnNumber: 21\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 120,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 116,\n    columnNumber: 9\n  }, this);\n}\n\n_s(Login, \"Lrw7JeD9zj6OUWhT/IH4OIvPKEk=\");\n\n_c = Login;\nexport default Login;\n\nvar _c;\n\n$RefreshReg$(_c, \"Login\");","map":{"version":3,"sources":["/home/lin/phase5/My-Place-Frontend/my-place/src/Component/Login.js"],"names":["React","useState","Canvas","Login","props","username","setUsername","password","setPassword","handleSignupClick","history","push","handleLogin","e","target","value"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAOC,MAAP,MAAmB,UAAnB;;;AAEA,SAASC,KAAT,CAAgBC,KAAhB,EAAuB;AAAA;;AAEnB,MAAI,CAACC,QAAD,EAAWC,WAAX,IAA0BL,QAAQ,CAAC,EAAD,CAAtC;AACA,MAAI,CAACM,QAAD,EAAWC,WAAX,IAA0BP,QAAQ,CAAC,EAAD,CAAtC,CAHmB,CAKnB;AAEA;AACA;AACA;AACA;AAEA;AACA;AAGA;AACA;AACA;AAEA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;;AAEA,QAAMQ,iBAAiB,GAAG,MAAM;AAC5BL,IAAAA,KAAK,CAACM,OAAN,CAAcC,IAAd,CAAmB,SAAnB;AACH,GAFD;;AAIA,QAAMC,WAAW,GAAG,MAAM,CAEzB,CAFD;;AAIA,sBACI;AAAM,IAAA,SAAS,EAAC,YAAhB;AAAA,4BACI;AAAK,MAAA,SAAS,EAAC,QAAf;AAAA,6BAAwB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAxB;AAAA;AAAA;AAAA;AAAA,YADJ,eAEI;AAAO,MAAA,IAAI,EAAC,UAAZ;AAAuB,MAAA,EAAE,EAAC;AAA1B;AAAA;AAAA;AAAA;AAAA,YAFJ,eAGI;AAAO,MAAA,GAAG,EAAC,QAAX;AAAoB,MAAA,OAAO,EAAE,MAAMH,iBAAiB,EAApD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAHJ,eAIQ;AAAK,MAAA,SAAS,EAAC,OAAf;AAAA,6BACI;AAAM,QAAA,SAAS,EAAC,OAAhB;AAAA,gCACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADJ,eAEI;AAAO,UAAA,IAAI,EAAC,MAAZ;AAAmB,UAAA,KAAK,EAAEJ,QAA1B;AAAoC,UAAA,WAAW,EAAC,4BAAhD;AAA6E,UAAA,QAAQ,EAAGQ,CAAD,IAAOP,WAAW,CAACO,CAAC,CAACC,MAAF,CAASC,KAAV;AAAzG;AAAA;AAAA;AAAA;AAAA,gBAFJ,eAGI;AAAO,UAAA,IAAI,EAAC,UAAZ;AAAuB,UAAA,KAAK,EAAER,QAA9B;AAAwC,UAAA,WAAW,EAAC,4BAApD;AAAiF,UAAA,QAAQ,EAAGM,CAAD,IAAOL,WAAW,CAACK,CAAC,CAACC,MAAF,CAASC,KAAV;AAA7G;AAAA;AAAA;AAAA;AAAA,gBAHJ,eAII;AAAO,UAAA,IAAI,EAAC,QAAZ;AAAqB,UAAA,SAAS,EAAC,KAA/B;AAAqC,UAAA,KAAK,EAAC;AAA3C;AAAA;AAAA;AAAA;AAAA,gBAJJ;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,YAJR;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAiBH;;GAhIQZ,K;;KAAAA,K;AAkIT,eAAeA,KAAf","sourcesContent":["import React, { useState } from \"react\";\nimport Canvas from \"./Convas\";\n\nfunction Login (props) {\n\n    let [username, setUsername] = useState(\"\")\n    let [password, setPassword] = useState(\"\")\n\n    // let canvasRef = useRef(null)\n\n    // var mouse = {\n    //     x: undefined,\n    //     y: undefined\n    // }\n\n    // var maxRadius = 40;\n    // var minRadius = 5;\n\n    \n    // useEffect(() => {\n    //     const canvas = canvasRef.current\n    //     const c = canvas.getContext('2d')\n        \n    //     canvas.width = window.innerWidth\n    //     canvas.height = window.innerHeight\n        \n    //     window.addEventListener('mousemove', (e) => {\n    //         mouse.x = e.x;\n    //         mouse.y = e.y\n    //     })\n        \n    //     window.addEventListener('resize', () => {\n    //         canvas.width = window.innerWidth; \n    //         canvas.height = window.innerHeight;\n    //         circleGenerator();\n    //     })\n        \n    //     function getRandColor() {\n    //         let r = 255*Math.random()|0,\n    //             g = 255*Math.random()|0,\n    //             b = 255*Math.random()|0;\n    //         return 'rgb(' + r + ',' + g + ',' + b + ',' + 0.7 + ')';\n    //     }\n    //     function circle(x, y, dx, dy, radius) {\n    //         this.x = x;\n    //         this.y = y;\n    //         this.dx = dx;\n    //         this.dy = dy;\n    //         this.radius = radius;\n    //         this.minRadius = radius;\n    //         this.color = getRandColor()\n\n    //         this.draw = () => {\n    //             c.beginPath();\n    //             c.arc(this.x, this.y, this.radius, 0, Math.PI * 2, false)\n    //             c.fillStyle = this.color\n    //             c.fill();\n    //         }\n\n    //         this.collision = () => {\n    //             if( this.x + radius > canvas.width || this.x - this.radius < 0) {\n    //                 this.dx = -this.dx;\n    //             }else if ( this.y + radius > canvas.height || this.y - this.radius < 0) {\n    //                 this.dy = -this.dy\n    //             }\n        \n    //             this.x += this.dx;\n    //             this.y += this.dy;\n        \n    //             if(mouse.x - this.x < 50 && mouse.x - this.x > -50 && mouse.y - this.y < 50 && mouse.y - this.y > -50) {\n    //                 if( this.radius < maxRadius){\n    //                     this.radius +=1;\n    //                 }\n    //             }else if (this.radius > this.minRadius){ \n    //                 this.radius -=1;\n    //             }\n    //             this.draw();\n    //         }\n    //     }\n\n    //     var circleArray = []\n    //     function circleGenerator() {\n    //         for(var i = 0; i < 300; i++) {\n    //             var radius = Math.random() * 15 + 1;\n    //             var x = Math.random() * (canvas.width - radius * 2 ) + radius;\n    //             var y = Math.random() * (canvas.height - radius * 2) + radius;\n    //             var dx = (Math.random() - 0.5 * 5);\n    //             var dy = (Math.random() - 0.5 * 5);\n    //             circleArray.push(new circle(x, y, dx, dy, radius))\n    //         }\n    //     }\n\n    //     circleGenerator();\n\n    //     const animate =() => {\n    //         requestAnimationFrame(animate);\n    //         c.clearRect(0,0,canvas.width,canvas.height);\n        \n    //         for(var i = 0; i < circleArray.length; i++) {\n    //             circleArray[i].collision()\n    //         }\n    //     }\n        \n    //     animate()\n    // }, [])\n\n    const handleSignupClick = () => {\n        props.history.push(\"/signup\")\n    }\n\n    const handleLogin = () => {\n\n    }\n\n    return (\n        <body className=\"login-page\">\n            <div className=\"switch\"><h2>Sign up？</h2></div>\n            <input type=\"checkbox\" id=\"change\" />\n            <label for=\"change\" onClick={() => handleSignupClick()}>Sign up</label>\n                <div className=\"login\">\n                    <form className=\"login\">\n                        <h1>Welcome Back</h1>\n                        <input type=\"text\" value={username} placeholder=\"Please enter your username\" onChange={(e) => setUsername(e.target.value)} /> \n                        <input type=\"password\" value={password} placeholder=\"Please enter your password\" onChange={(e) => setPassword(e.target.value)}/>\n                        <input type=\"submit\" className=\"btn\" value=\"Login\"/>\n                    </form>\n                </div>\n            {/* <canvas ref={canvasRef}></canvas> */}\n        </body>\n    ) \n\n}\n\nexport default Login;"]},"metadata":{},"sourceType":"module"}