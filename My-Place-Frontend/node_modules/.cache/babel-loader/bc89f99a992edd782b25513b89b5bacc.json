{"ast":null,"code":"var _jsxFileName = \"/home/lin/phase5/My-Place-Frontend/my-place/src/Component/test.js\";\nimport React from 'react';\nimport { Form, Input, Upload, Icon, Modal } from 'antd';\nimport { connect } from 'dva';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst FormItem = Form.Item;\nconst {\n  TextArea\n} = Input;\n\nfunction getBase64(file) {\n  return new Promise((resolve, reject) => {\n    const reader = new FileReader();\n    reader.readAsDataURL(file);\n\n    reader.onload = () => resolve(reader.result);\n\n    reader.onerror = error => reject(error);\n  });\n}\n\nclass AddMa extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      value: '',\n      previewVisible: false,\n      previewImage: '',\n      fileList: []\n    };\n\n    this.onChange = ({\n      target: {\n        value\n      }\n    }) => {\n      this.setState({\n        value\n      });\n    };\n\n    this.handleCancel = () => this.setState({\n      previewVisible: false\n    });\n\n    this.handlePreview = async file => {\n      if (!file.url && !file.preview) {\n        file.preview = await getBase64(file.originFileObj);\n      }\n\n      this.setState({\n        previewImage: file.url || file.preview,\n        previewVisible: true\n      });\n      console.log(file);\n    };\n\n    this.handleChange = ({\n      fileList\n    }) => this.setState({\n      fileList: fileList\n    });\n\n    this.beforeUpload = file => {\n      this.setState({\n        fileList: [this.state.fileList, file]\n      });\n      return false;\n    };\n  }\n\n  render() {\n    const {\n      previewVisible,\n      previewImage,\n      fileList,\n      value\n    } = this.state;\n\n    const uploadButton = /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(Icon, {\n        type: \"plus\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"ant-upload-text\",\n        children: \"Upload\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }, this);\n\n    const {\n      getFieldDecorator\n    } = this.props.form;\n    const formItemLayout = {\n      labelCol: {\n        span: 8\n      },\n      wrapperCol: {\n        span: 10\n      }\n    };\n    const props = {\n      fileList\n    };\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(Form, {\n        children: [/*#__PURE__*/_jsxDEV(FormItem, { ...formItemLayout,\n          label: \"\\u73B0\\u573A\\u56FE\\u7247\",\n          children: getFieldDecorator('fileList', {\n            initialValue: this.props.tAccessory,\n            valuePropName: 'file'\n          })( /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(Upload, {\n              name: \"file\",\n              ...props,\n              listType: \"picture-card\",\n              onPreview: this.handlePreview,\n              onChange: this.handleChange,\n              fileList: fileList,\n              accept: \".jpg,.png,.gif,.jpeg\",\n              beforeUpload: this.beforeUpload,\n              children: this.props.tAccessory >= 6 ? null : uploadButton\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 64,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(Modal, {\n              visible: previewVisible,\n              footer: null,\n              onCancel: this.handleCancel,\n              children: /*#__PURE__*/_jsxDEV(\"img\", {\n                alt: \"example\",\n                style: {\n                  width: '100%'\n                },\n                src: previewImage\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 75,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 74,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 63,\n            columnNumber: 15\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 11\n        }, this), \"//\\u8FD9\\u91CC\\u662F\\u591A\\u4E2A\\u4E0A\\u4F20\\u83B7\\u53D6\\u5230\\u7684PhotoList\", /*#__PURE__*/_jsxDEV(FormItem, { ...formItemLayout,\n          children: getFieldDecorator('file', {\n            initialValue: this.props.tAccessory,\n            valuePropName: 'file'\n          })( /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"hidden\",\n            name: \"img\",\n            multiple: \"multiple\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 84,\n            columnNumber: 15\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nfunction mapStateToProps(state) {\n  const {\n    csIntro,\n    arPicture,\n    tCsInfo,\n    modelResult,\n    tAccessory\n  } = state.cusy;\n  return {\n    csIntro,\n    arPicture,\n    tCsInfo,\n    modelResult,\n    tAccessory\n  };\n}\n\nexport default connect(mapStateToProps)(Form.create()(AddMa));","map":{"version":3,"sources":["/home/lin/phase5/My-Place-Frontend/my-place/src/Component/test.js"],"names":["React","Form","Input","Upload","Icon","Modal","connect","FormItem","Item","TextArea","getBase64","file","Promise","resolve","reject","reader","FileReader","readAsDataURL","onload","result","onerror","error","AddMa","Component","state","value","previewVisible","previewImage","fileList","onChange","target","setState","handleCancel","handlePreview","url","preview","originFileObj","console","log","handleChange","beforeUpload","render","uploadButton","getFieldDecorator","props","form","formItemLayout","labelCol","span","wrapperCol","initialValue","tAccessory","valuePropName","width","mapStateToProps","csIntro","arPicture","tCsInfo","modelResult","cusy","create"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { Form, Input,Upload,Icon,Modal} from 'antd';\nimport { connect } from 'dva';\nconst FormItem = Form.Item;\nconst { TextArea } = Input;\nfunction getBase64(file) {\n  return new Promise((resolve, reject) => {\n    const reader = new FileReader();\n    reader.readAsDataURL(file);\n    reader.onload = () => resolve(reader.result);\n    reader.onerror = error => reject(error);\n  });\n}\nclass AddMa extends React.Component {\n  state = {\n    value: '',\n    previewVisible: false,\n    previewImage: '',\n    fileList:[],\n  };\n  onChange = ({ target: { value } }) => {\n    this.setState({ value });\n  };\n//场地图片\n  handleCancel = () => this.setState({ previewVisible: false });\n  handlePreview = async file => {\n    if (!file.url && !file.preview) {\n      file.preview = await getBase64(file.originFileObj);\n    }\n    this.setState({\n      previewImage: file.url || file.preview,\n      previewVisible: true,\n    });\n    console.log(file);\n  };\n  handleChange = ({ fileList }) => this.setState({ fileList:fileList });\n  beforeUpload=(file)=>{\n      this.setState(({\n        fileList: [this.state.fileList, file],\n      }));\n    return false;\n  }\n  render() {\n    const { previewVisible, previewImage, fileList,value} = this.state;\n    const uploadButton = (\n      <div>\n        <Icon type=\"plus\" />\n        <div className=\"ant-upload-text\">Upload</div>\n      </div>\n    );\n    const { getFieldDecorator } = this.props.form;\n    const formItemLayout = {\n      labelCol: { span: 8 },\n      wrapperCol: { span: 10 },\n    };\n    const props={fileList};\n    return (\n      <div>\n        <Form>\n          <FormItem{...formItemLayout} label=\"现场图片\">\n            {getFieldDecorator('fileList',{initialValue:this.props.tAccessory,valuePropName: 'file'})\n            (\n              <div >\n                <Upload name=\"file\" {...props}\n                        listType=\"picture-card\"\n                        onPreview={this.handlePreview}\n                        onChange={this.handleChange}\n                        fileList={fileList}\n                        accept=\".jpg,.png,.gif,.jpeg\"\n                        beforeUpload={this.beforeUpload}\n                >\n                  {this.props.tAccessory >= 6 ? null : uploadButton}\n                </Upload>\n                <Modal visible={previewVisible} footer={null} onCancel={this.handleCancel}>\n                  <img alt=\"example\" style={{ width: '100%' }} src={previewImage} />\n                </Modal>\n              </div>\n            )}</FormItem>\n            \n    \t\t//这里是多个上传获取到的PhotoList    \n          <FormItem{...formItemLayout} >\n            {getFieldDecorator('file',{initialValue:this.props.tAccessory,valuePropName: 'file'})\n            (\n              <input type=\"hidden\" name=\"img\" multiple=\"multiple\"  />\n            )}</FormItem>\n        </Form>\n      </div>\n    );\n  }\n}\n\nfunction mapStateToProps(state) {\n  const {csIntro,arPicture,tCsInfo,modelResult,tAccessory} = state.cusy;\n  return {csIntro,arPicture,tCsInfo,modelResult,tAccessory};\n}\n\n\nexport default connect(mapStateToProps)(Form.create()(AddMa));\n"]},"metadata":{},"sourceType":"module"}