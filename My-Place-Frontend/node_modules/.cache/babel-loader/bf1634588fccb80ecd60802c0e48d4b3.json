{"ast":null,"code":"var _jsxFileName = \"/home/lin/phase5/My-Place-Frontend/my-place/src/Component/Photo.js\";\nimport React from \"react\";\nimport { Card, Upload, Modal, Form, Button, Image, Input, Select } from 'antd';\nimport { PlusOutlined } from '@ant-design/icons';\nimport Navbar from './NavBar';\nimport PhotoList from \"./Container/PhotoList\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst {\n  Option\n} = Select;\n\nfunction getBase64(file) {\n  return new Promise((resolve, reject) => {\n    const reader = new FileReader();\n    reader.readAsDataURL(file);\n\n    reader.onload = () => resolve(reader.result);\n\n    reader.onerror = error => reject(error);\n  });\n}\n\nexport default class Photo extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      photos: [],\n      album: [],\n      display: true,\n      albumForm: false,\n      previewVisible: false,\n      previewImage: '',\n      previewTitle: '',\n      fileList: [],\n      upFiles: [],\n      albumName: ''\n    };\n\n    this.handleDisplay = () => {\n      this.setState({\n        display: !this.state.display\n      });\n    };\n\n    this.onChange = ({\n      target: {\n        value\n      }\n    }) => {\n      this.setState({\n        value\n      });\n    };\n\n    this.handleChange = ({\n      fileList\n    }) => this.setState({\n      fileList\n    });\n\n    this.handleCancel = () => this.setState({\n      previewVisible: false\n    });\n\n    this.handlePreview = async file => {\n      if (!file.url && !file.preview) {\n        file.preview = await getBase64(file.originFileObj);\n      }\n\n      this.setState({\n        previewImage: file.url || file.preview,\n        previewVisible: true,\n        previewTitle: file.name || file.url.substring(file.url.lastIndexOf('/') + 1)\n      });\n    };\n\n    this.beforeUpload = file => {\n      const {\n        upFiles\n      } = this.state;\n      upFiles.push(file);\n      this.setState({\n        upFiles: upFiles\n      });\n    };\n\n    this.handleSubmit = () => {\n      const {\n        upFiles\n      } = this.state;\n      let formData = new FormData();\n      upFiles.forEach(file => {\n        formData.append('image', file);\n        formData.append('name', file.name);\n        formData.append('user_id', this.props.loginUser.id);\n        fetch(\"http://localhost:3000/photoupload\", {\n          method: \"POST\",\n          body: formData\n        }).then(res => res.json()).then(() => {\n          this.componentDidMount();\n        });\n      });\n      this.setState({\n        fileList: [],\n        upFiles: []\n      });\n      this.handleDisplay();\n    };\n\n    this.handleDelete = photoObj => {\n      fetch(`http://localhost:3000/photos/${photoObj.id}`, {\n        method: \"DELETE\"\n      }).then(res => res.json()).then(() => {\n        this.componentDidMount();\n      });\n    };\n\n    this.AddPhotoToAlbum = (photoObj, albumId) => {\n      console.log(albumId); //   fetch(`http://localhost:3000/photos/${photoObj.id}`, {\n      //   method: \"PATCH\",\n      //   headers: {\n      //     \"Content-Type\": \"application/json\",\n      //   },\n      //   body: JSON.stringify({\n      //     album_id: \"\"\n      //   }),\n      // })\n    };\n\n    this.handleCreatalbum = () => {\n      this.setState({\n        albumForm: !this.state.albumForm\n      });\n    };\n\n    this.handleConfirm = () => {\n      const newAlbun = {\n        name: this.state.albumName,\n        user_id: this.props.loginUser.id\n      };\n      fetch(\"http://localhost:3000/albums\", {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify(newAlbun)\n      }).then(res => res.json());\n      this.handleCreatalbum();\n      this.componentDidMount();\n    };\n  }\n\n  componentDidMount() {\n    fetch(\"http://localhost:3000/photos\").then(res => res.json()).then(photos => this.setState({\n      photos\n    }));\n    fetch(\"http://localhost:3000/albums\").then(res => res.json()).then(album => this.setState({\n      album\n    }));\n  } // handle diplay photo list\n\n\n  render() {\n    const {\n      previewVisible,\n      previewImage,\n      fileList,\n      previewTitle\n    } = this.state;\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"photo\",\n      children: Object.keys(this.props.loginUser).length > 0 ? /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(Navbar, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 163,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"photo-subnav\",\n          children: [/*#__PURE__*/_jsxDEV(\"li\", {\n            children: \"Album\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 165,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n            children: \"Photos\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 166,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 164,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"photo-btn\",\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => this.handleDisplay(),\n            children: \"Upload Photo\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 169,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => this.handleCreatalbum(),\n            children: \"Create Album\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 170,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 168,\n          columnNumber: 13\n        }, this), this.state.albumForm ? /*#__PURE__*/_jsxDEV(Form, {\n          children: [/*#__PURE__*/_jsxDEV(Input, {\n            addonBefore: \"Album Title:\",\n            style: {\n              width: '500px'\n            },\n            value: this.state.albumName,\n            onChange: e => this.handleAlbumName(e)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 174,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            type: \"primary\",\n            shape: \"round\",\n            onClick: () => this.handleConfirm(),\n            children: \"Confirm\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 178,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 173,\n          columnNumber: 14\n        }, this) : null, this.state.display ? /*#__PURE__*/_jsxDEV(\"div\", {\n          children: /*#__PURE__*/_jsxDEV(Image.PreviewGroup, {\n            children: this.state.photos.map(photo => {\n              return /*#__PURE__*/_jsxDEV(PhotoList, {\n                photo: photo,\n                handleDelete: this.handleDelete,\n                album: this.state.album,\n                AddPhotoToAlbum: this.AddPhotoToAlbum\n              }, photo.id, false, {\n                fileName: _jsxFileName,\n                lineNumber: 187,\n                columnNumber: 28\n              }, this);\n            })\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 184,\n            columnNumber: 17\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 183,\n          columnNumber: 16\n        }, this) : /*#__PURE__*/_jsxDEV(Form, {\n          children: /*#__PURE__*/_jsxDEV(Card, {\n            title: \"Photo Upload\",\n            children: [/*#__PURE__*/_jsxDEV(Upload, {\n              listType: \"picture-card\",\n              fileList: fileList,\n              multiple: true,\n              onPreview: this.handlePreview,\n              onChange: this.handleChange,\n              beforeUpload: this.beforeUpload,\n              children: [/*#__PURE__*/_jsxDEV(PlusOutlined, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 203,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                style: {\n                  marginTop: 8\n                },\n                children: \"Upload\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 204,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 195,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(Modal, {\n              visible: previewVisible,\n              title: previewTitle,\n              footer: null,\n              onCancel: this.handleCancel,\n              children: /*#__PURE__*/_jsxDEV(\"img\", {\n                src: previewImage,\n                alt: previewTitle,\n                style: {\n                  width: '100%',\n                  height: '100%'\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 212,\n                columnNumber: 21\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 206,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(Button, {\n              onClick: () => this.handleSubmit(),\n              type: \"primary\",\n              children: \"submit\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 218,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 194,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 193,\n          columnNumber: 14\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 162,\n        columnNumber: 12\n      }, this) : this.props.history.push('/')\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 160,\n      columnNumber: 7\n    }, this);\n  }\n\n}","map":{"version":3,"sources":["/home/lin/phase5/My-Place-Frontend/my-place/src/Component/Photo.js"],"names":["React","Card","Upload","Modal","Form","Button","Image","Input","Select","PlusOutlined","Navbar","PhotoList","Option","getBase64","file","Promise","resolve","reject","reader","FileReader","readAsDataURL","onload","result","onerror","error","Photo","Component","state","photos","album","display","albumForm","previewVisible","previewImage","previewTitle","fileList","upFiles","albumName","handleDisplay","setState","onChange","target","value","handleChange","handleCancel","handlePreview","url","preview","originFileObj","name","substring","lastIndexOf","beforeUpload","push","handleSubmit","formData","FormData","forEach","append","props","loginUser","id","fetch","method","body","then","res","json","componentDidMount","handleDelete","photoObj","AddPhotoToAlbum","albumId","console","log","handleCreatalbum","handleConfirm","newAlbun","user_id","headers","JSON","stringify","render","Object","keys","length","width","e","handleAlbumName","map","photo","marginTop","height","history"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport { Card, Upload, Modal, Form, Button, Image, Input, Select  } from 'antd'\nimport {  PlusOutlined } from '@ant-design/icons';\nimport Navbar from './NavBar'\nimport PhotoList from \"./Container/PhotoList\";\n\nconst { Option } = Select;\n\nfunction getBase64(file) {\n  return new Promise((resolve, reject) => {\n    const reader = new FileReader();\n    reader.readAsDataURL(file);\n    reader.onload = () => resolve(reader.result);\n    reader.onerror = error => reject(error);\n  });\n}\n\nexport default class Photo extends React.Component {\n\n  state = {\n    photos: [],\n    album: [],\n    display: true,\n    albumForm: false,\n    previewVisible: false,\n    previewImage: '',\n    previewTitle: '',\n    fileList: [], \n    upFiles:[],\n    albumName: '',\n    }\n    componentDidMount() {\n      fetch(\"http://localhost:3000/photos\")\n      .then(res => res.json())\n      .then(photos => this.setState({photos}))\n\n      fetch(\"http://localhost:3000/albums\")\n      .then(res => res.json())\n      .then(album => this.setState({album}))\n    }\n\n    // handle diplay photo list\n    handleDisplay = () => {\n      this.setState({\n        display: !this.state.display\n      })\n    }\n\n    //change upload value\n    onChange = ({ target: { value } }) => {\n      this.setState({ value });\n    };\n\n    //handle Onchange of upload\n    handleChange = ({ fileList }) => this.setState({ fileList });\n\n    //handle cancel of upload\n    handleCancel = () => this.setState({ previewVisible: false });\n\n    //handle preview of upload\n    handlePreview = async file => {\n      if (!file.url && !file.preview) {\n        file.preview = await getBase64(file.originFileObj);\n      }\n  \n      this.setState({\n        previewImage: file.url || file.preview,\n        previewVisible: true,\n        previewTitle: file.name || file.url.substring(file.url.lastIndexOf('/') + 1),\n      });\n    };\n\n  \n    beforeUpload = (file) => {\n      const {upFiles} = this.state;\n      upFiles.push(file);\n      this.setState({upFiles: upFiles});\n    }\n\n    //handle submit upload\n    handleSubmit = () => {\n      const {upFiles} = this.state;\n      let formData = new FormData();\n       upFiles.forEach((file) => {\n        formData.append('image', file);\n        formData.append('name', file.name);\n         formData.append('user_id', this.props.loginUser.id);\n         fetch(\"http://localhost:3000/photoupload\", {\n           method: \"POST\",\n           body: formData\n         })\n         .then(res => res.json())\n         .then(() => {\n           this.componentDidMount()\n         })\n        });\n      this.setState({\n        fileList: [],\n        upFiles: []\n      })\n      this.handleDisplay()\n  } \n\n   //Handle delete photo\n   handleDelete =(photoObj) => {\n    fetch(`http://localhost:3000/photos/${photoObj.id}`, {\n        method: \"DELETE\",\n      })\n      .then(res => res.json())\n      .then(() => {\n        this.componentDidMount()\n      })\n    }\n\n    //Add photo to album\n    AddPhotoToAlbum = (photoObj, albumId) => {\n        console.log(albumId);\n\n    //   fetch(`http://localhost:3000/photos/${photoObj.id}`, {\n    //   method: \"PATCH\",\n    //   headers: {\n    //     \"Content-Type\": \"application/json\",\n    //   },\n    //   body: JSON.stringify({\n    //     album_id: \"\"\n    //   }),\n    // })\n    }\n\n    //Display album form\n    handleCreatalbum = () => {\n      this.setState({\n        albumForm : !this.state.albumForm\n      })\n    }\n\n    //Create ablum\n    handleConfirm = () => {\n      const newAlbun ={\n        name: this.state.albumName,\n        user_id: this.props.loginUser.id\n      }\n      fetch(\"http://localhost:3000/albums\", {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\",\n        },\n        body: JSON.stringify(newAlbun),\n      })\n      .then(res => res.json())\n      this.handleCreatalbum()\n      this.componentDidMount()\n    }\n\n\n\n    render() {\n      const { previewVisible, previewImage, fileList, previewTitle } = this.state;\n      return (\n      <div className=\"photo\">\n        { Object.keys(this.props.loginUser).length > 0 \n          ?<div>\n            <Navbar />\n            <div className=\"photo-subnav\">\n                <li>Album</li>\n                <li>Photos</li>\n            </div>\n            <div className=\"photo-btn\">\n              <button onClick={() => this.handleDisplay()}>Upload Photo</button>\n              <button onClick={() => this.handleCreatalbum()}>Create Album</button>\n            </div>\n            {this.state.albumForm\n            ?<Form>\n              <Input addonBefore=\"Album Title:\" \n              style={{width: '500px'}} \n              value={this.state.albumName}\n              onChange={(e) => this.handleAlbumName(e)}/>\n              <Button type=\"primary\" shape=\"round\" onClick={() => this.handleConfirm()}>Confirm</Button>\n            </Form>\n            :null\n          }\n            {this.state.display\n              ?<div>\n                <Image.PreviewGroup>\n                {\n                this.state.photos.map(photo => {\n                    return <PhotoList photo={photo} key={photo.id} handleDelete={this.handleDelete} album={this.state.album} \n                    AddPhotoToAlbum={this.AddPhotoToAlbum}/>\n                  })\n                }\n                 </Image.PreviewGroup>\n              </div>\n            :<Form >\n            <Card title='Photo Upload'>\n                  <Upload\n                    listType='picture-card'\n                    fileList={fileList}\n                    multiple={true}\n                    onPreview={this.handlePreview}\n                    onChange={this.handleChange}\n                    beforeUpload={this.beforeUpload}\n                  >\n                    <PlusOutlined />\n                    <div style={{ marginTop: 8}}>Upload</div>\n                  </Upload>\n                  <Modal\n                      visible={previewVisible}\n                      title={previewTitle}\n                      footer={null}\n                      onCancel={this.handleCancel}\n                  >\n                    <img\n                      src={previewImage}\n                      alt={previewTitle}\n                      style={{ width: '100%', height: '100%'}}\n                    />\n                  </Modal>\n              <Button onClick={() => this.handleSubmit()} type='primary' >submit</Button>\n            </Card>\n            </Form>\n          } \n          </div>\n          :this.props.history.push('/')\n        }\n      </div>\n      )\n    }\n  }\n"]},"metadata":{},"sourceType":"module"}