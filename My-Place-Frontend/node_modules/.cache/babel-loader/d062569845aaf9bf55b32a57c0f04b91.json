{"ast":null,"code":"/**\n * Copyright (c) Tiny Technologies, Inc. All rights reserved.\n * Licensed under the LGPL or a commercial license.\n * For LGPL see License.txt in the project root for license information.\n * For commercial licenses see https://www.tiny.cloud/\n *\n * Version: 5.8.2 (2021-06-23)\n */\n(function () {\n  'use strict';\n\n  var global = tinymce.util.Tools.resolve('tinymce.PluginManager');\n\n  var setContent = function (editor, html) {\n    editor.focus();\n    editor.undoManager.transact(function () {\n      editor.setContent(html);\n    });\n    editor.selection.setCursorLocation();\n    editor.nodeChanged();\n  };\n\n  var getContent = function (editor) {\n    return editor.getContent({\n      source_view: true\n    });\n  };\n\n  var open = function (editor) {\n    var editorContent = getContent(editor);\n    editor.windowManager.open({\n      title: 'Source Code',\n      size: 'large',\n      body: {\n        type: 'panel',\n        items: [{\n          type: 'textarea',\n          name: 'code'\n        }]\n      },\n      buttons: [{\n        type: 'cancel',\n        name: 'cancel',\n        text: 'Cancel'\n      }, {\n        type: 'submit',\n        name: 'save',\n        text: 'Save',\n        primary: true\n      }],\n      initialData: {\n        code: editorContent\n      },\n      onSubmit: function (api) {\n        setContent(editor, api.getData().code);\n        api.close();\n      }\n    });\n  };\n\n  var register = function (editor) {\n    editor.addCommand('mceCodeEditor', function () {\n      open(editor);\n    });\n  };\n\n  var register$1 = function (editor) {\n    editor.ui.registry.addButton('code', {\n      icon: 'sourcecode',\n      tooltip: 'Source code',\n      onAction: function () {\n        return open(editor);\n      }\n    });\n    editor.ui.registry.addMenuItem('code', {\n      icon: 'sourcecode',\n      text: 'Source code',\n      onAction: function () {\n        return open(editor);\n      }\n    });\n  };\n\n  function Plugin() {\n    global.add('code', function (editor) {\n      register(editor);\n      register$1(editor);\n      return {};\n    });\n  }\n\n  Plugin();\n})();","map":{"version":3,"sources":["/home/lin/phase5/My-Place-Frontend/my-place/node_modules/tinymce/plugins/code/plugin.js"],"names":["global","tinymce","util","Tools","resolve","setContent","editor","html","focus","undoManager","transact","selection","setCursorLocation","nodeChanged","getContent","source_view","open","editorContent","windowManager","title","size","body","type","items","name","buttons","text","primary","initialData","code","onSubmit","api","getData","close","register","addCommand","register$1","ui","registry","addButton","icon","tooltip","onAction","addMenuItem","Plugin","add"],"mappings":"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","sourcesContent":["/**\n * Copyright (c) Tiny Technologies, Inc. All rights reserved.\n * Licensed under the LGPL or a commercial license.\n * For LGPL see License.txt in the project root for license information.\n * For commercial licenses see https://www.tiny.cloud/\n *\n * Version: 5.8.2 (2021-06-23)\n */\n(function () {\n    'use strict';\n\n    var global = tinymce.util.Tools.resolve('tinymce.PluginManager');\n\n    var setContent = function (editor, html) {\n      editor.focus();\n      editor.undoManager.transact(function () {\n        editor.setContent(html);\n      });\n      editor.selection.setCursorLocation();\n      editor.nodeChanged();\n    };\n    var getContent = function (editor) {\n      return editor.getContent({ source_view: true });\n    };\n\n    var open = function (editor) {\n      var editorContent = getContent(editor);\n      editor.windowManager.open({\n        title: 'Source Code',\n        size: 'large',\n        body: {\n          type: 'panel',\n          items: [{\n              type: 'textarea',\n              name: 'code'\n            }]\n        },\n        buttons: [\n          {\n            type: 'cancel',\n            name: 'cancel',\n            text: 'Cancel'\n          },\n          {\n            type: 'submit',\n            name: 'save',\n            text: 'Save',\n            primary: true\n          }\n        ],\n        initialData: { code: editorContent },\n        onSubmit: function (api) {\n          setContent(editor, api.getData().code);\n          api.close();\n        }\n      });\n    };\n\n    var register = function (editor) {\n      editor.addCommand('mceCodeEditor', function () {\n        open(editor);\n      });\n    };\n\n    var register$1 = function (editor) {\n      editor.ui.registry.addButton('code', {\n        icon: 'sourcecode',\n        tooltip: 'Source code',\n        onAction: function () {\n          return open(editor);\n        }\n      });\n      editor.ui.registry.addMenuItem('code', {\n        icon: 'sourcecode',\n        text: 'Source code',\n        onAction: function () {\n          return open(editor);\n        }\n      });\n    };\n\n    function Plugin () {\n      global.add('code', function (editor) {\n        register(editor);\n        register$1(editor);\n        return {};\n      });\n    }\n\n    Plugin();\n\n}());\n"]},"metadata":{},"sourceType":"script"}