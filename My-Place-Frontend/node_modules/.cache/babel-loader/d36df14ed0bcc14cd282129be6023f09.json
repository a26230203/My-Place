{"ast":null,"code":"var _jsxFileName = \"/home/lin/phase5/My-Place-Frontend/my-place/src/Component/test.js\";\nimport { Upload } from 'antd';\nimport React, { Component } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass PicturesWall extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      previewVisible: false,\n      previewImage: '',\n      fileList: [],\n      upFiles: []\n    };\n\n    this.handleCancel = () => {\n      this.setState({\n        previewVisible: false\n      });\n    };\n\n    this.handlePreview = async file => {\n      if (!file.url && !file.preview) {\n        file.preview = await getBase64(file.originFileObj);\n      }\n\n      this.setState({\n        previewImage: file.url || file.preview,\n        previewVisible: true\n      });\n    };\n\n    this.handleChange = info => {\n      this.setState({\n        fileList: info.fileList\n      });\n    };\n\n    this.beforeUpload = file => {\n      const {\n        upFiles\n      } = this.state;\n      upFiles.push(file);\n      this.setState({\n        upFiles: upFiles\n      });\n    };\n\n    this.addOk = () => {\n      const {\n        upFiles,\n        id\n      } = this.state;\n      const formData = new FormData();\n      upFiles.forEach(file => {\n        formData.append('file', file);\n      });\n      formData.append('id', id);\n      this.props.dispatch({\n        type: 'upload/upImage',\n        payload: {\n          formData: formData\n        }\n      });\n    };\n  }\n\n  render() {\n    const {\n      previewVisible,\n      previewImage,\n      fileList\n    } = this.state;\n\n    const uploadButton = /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(Icon, {\n        type: \"plus\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"ant-upload-text\",\n        children: \"Upload\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 7\n    }, this);\n\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(Button, {\n        type: \"primary\",\n        onClick: this.addOk(),\n        children: \"\\u786E\\u8BA4\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Upload, {\n        accept: \".png,,jpg,.jpeg,.pdf\",\n        listType: \"picture-card\",\n        multiple: true,\n        fileList: fileList,\n        onChange: this.handleChange,\n        onPreview: this.handlePreview,\n        beforeUpload: this.beforeUpload,\n        children: fileList.length > 10 ? null : uploadButton\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Modal, {\n        visble: previewVisible,\n        footer: null,\n        onCancel: this.handleCancel(),\n        children: /*#__PURE__*/_jsxDEV(\"img\", {\n          alt: \"example\",\n          style: {\n            width: '100%'\n          },\n          src: previewImage\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nfunction getBase64(file) {\n  return new Promise((resolve, reject) => {\n    const reader = new FileReader();\n    reader.readAsDataURL(file);\n\n    reader.onload = () => resolve(reader.result);\n\n    reader.onerror = error => reject(error);\n  });\n}","map":{"version":3,"sources":["/home/lin/phase5/My-Place-Frontend/my-place/src/Component/test.js"],"names":["Upload","React","Component","PicturesWall","constructor","props","state","previewVisible","previewImage","fileList","upFiles","handleCancel","setState","handlePreview","file","url","preview","getBase64","originFileObj","handleChange","info","beforeUpload","push","addOk","id","formData","FormData","forEach","append","dispatch","type","payload","render","uploadButton","length","width","Promise","resolve","reject","reader","FileReader","readAsDataURL","onload","result","onerror","error"],"mappings":"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","sourcesContent":["import {Upload} from 'antd';\nimport React, { Component } from \"react\";\n\nclass PicturesWall extends React.Component{\n  constructor(props){\n    super(props);\n  }\n  state = {\n    previewVisible:false,\n    previewImage:'',\n    fileList:[],\n    upFiles:[]\n  };\n  \n  handleCancel=()=>{\n    this.setState({previewVisible:false});\n  }\n  \n  handlePreview = async file =>{\n    if(!file.url && !file.preview){\n      file.preview = await getBase64(file.originFileObj);\n    }\n    this.setState({\n      previewImage: file.url || file.preview,\n      previewVisible: true\n    });\n  }\n  \n  handleChange = (info) => {\n    this.setState({fileList: info.fileList});\n  }\n  \n  beforeUpload = (file) => {\n    const {upFiles} = this.state;\n    upFiles.push(file);\n    this.setState({upFiles: upFiles});\n  }\n  \n  addOk = () => {\n    const {upFiles, id} = this.state;\n    const formData = new FormData();\n    upFiles.forEach((file) => {\n      formData.append('file', file);\n    });\n    formData.append('id', id);\n    this.props.dispatch({\n      type: 'upload/upImage',\n      payload: {formData: formData}\n    })\n  }\n  \n  render() {\n    const {previewVisible, previewImage, fileList} = this.state;\n    const uploadButton = (\n      <div>\n        <Icon type=\"plus\" />\n        <div className=\"ant-upload-text\">Upload</div>\n      </div>\n    )\n    return (\n      <div>\n        <Button type=\"primary\" onClick={this.addOk()}>чбошод</Button>\n        <Upload\n          accept=\".png,,jpg,.jpeg,.pdf\"\n          listType=\"picture-card\"\n          multiple={true}\n          fileList={fileList}\n          onChange={this.handleChange}\n          onPreview={this.handlePreview}\n          beforeUpload={this.beforeUpload}\n        >\n          {fileList.length >10 ? null : uploadButton}\n        </Upload>\n        <Modal visble={previewVisible} footer={null} onCancel={this.handleCancel()}>\n          <img alt=\"example\" style={{width:'100%'}} src={previewImage}/>\n        </Modal>\n      </div>\n    )\n  }\n}\n\nfunction getBase64(file){\n  return new Promise((resolve, reject) => {\n    const reader = new FileReader();\n    reader.readAsDataURL(file);\n    reader.onload = () => resolve(reader.result);\n    reader.onerror = error => reject(error);\n  });\n}\n"]},"metadata":{},"sourceType":"module"}