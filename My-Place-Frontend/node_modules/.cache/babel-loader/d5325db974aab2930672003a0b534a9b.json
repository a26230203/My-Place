{"ast":null,"code":"var _jsxFileName = \"/home/lin/phase5/My-Place-Frontend/my-place/src/Component/Sticky.js\";\nimport React, { Component } from \"react\";\nimport { Select } from 'antd';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default class Sticky extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      userTyping: \"\",\n      stickies: [],\n      colors: \"\"\n    };\n\n    this.generatorSticky = text => {\n      const maxWidth = window.innerWidth;\n      const maxHeight = window.innerHeight;\n      let randX = parseInt((maxWidth - 250) * Math.random(), 10);\n      let randY = parseInt((maxHeight - 350) * Math.random(), 10);\n      let background = this.state.color;\n      let rotate = Math.floor(Math.random() * 20);\n      let note = {\n        text,\n        background,\n        top: randY,\n        left: randX,\n        rotate: rotate\n      };\n      return note;\n    };\n\n    this.addStikcy = e => {\n      e.preventDefault();\n      let newSticky = this.generatorSticky(e.target[0].value);\n      this.setState({\n        stickies: [...this.state.stickies, newSticky]\n      });\n      console.log(this.state.stickies);\n    };\n\n    this.handleSelectChange = e => {\n      this.setState({\n        colors: e.target.value\n      });\n    };\n\n    this.handleOnchange = e => {\n      this.setState({\n        userTyping: e.target.value\n      });\n    };\n  }\n\n  render() {\n    const colors = ['#96C2F1', '#D5F1BB', '#E3E197', '#F8B3D0', '#FFCC00'];\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [\"This is sticky page\", /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: e => this.addStikcy(e),\n        className: \"sticky\",\n        children: [/*#__PURE__*/_jsxDEV(Select, {\n          defaultValue: \"#FFCC00\",\n          style: {\n            width: 120\n          },\n          onChange: e => this.handleSelectChange(e),\n          children: [/*#__PURE__*/_jsxDEV(Option, {\n            value: \"#96C2F1\",\n            children: \"Blue\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 62,\n            columnNumber: 23\n          }, this), /*#__PURE__*/_jsxDEV(Option, {\n            value: \"#D5F1BB\",\n            children: \"Green\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 63,\n            columnNumber: 23\n          }, this), /*#__PURE__*/_jsxDEV(Option, {\n            value: \"#E3E197\",\n            children: \"Yellow\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 64,\n            columnNumber: 23\n          }, this), /*#__PURE__*/_jsxDEV(Option, {\n            value: \"#FFCC00\",\n            children: \"Orange\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 65,\n            columnNumber: 23\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n          placeholder: \"Wirte your memo here!\",\n          style: {\n            backgroundColor: `${this.state.color}`\n          },\n          value: this.state.userTyping,\n          onChange: e => this.handleOnchange(e)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          children: \"Add New\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 17\n      }, this), this.state.stickies.map(sticky => {\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"post\",\n          style: {\n            backgroundColor: `${sticky.background}`,\n            top: `${sticky.top}px`,\n            left: `${sticky.letf}px`\n          },\n          children: /*#__PURE__*/_jsxDEV(\"pre\", {\n            className: \"post-text\",\n            children: sticky.text\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 78,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 31\n        }, this);\n      })]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 13\n    }, this);\n  }\n\n}","map":{"version":3,"sources":["/home/lin/phase5/My-Place-Frontend/my-place/src/Component/Sticky.js"],"names":["React","Component","Select","Sticky","state","userTyping","stickies","colors","generatorSticky","text","maxWidth","window","innerWidth","maxHeight","innerHeight","randX","parseInt","Math","random","randY","background","color","rotate","floor","note","top","left","addStikcy","e","preventDefault","newSticky","target","value","setState","console","log","handleSelectChange","handleOnchange","render","width","backgroundColor","map","sticky","letf"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport { Select } from 'antd';\n\n\nexport default class Sticky extends Component{\n\n    state = {\n        userTyping: \"\",\n        stickies: [],\n        colors: \"\"\n\n    }\n\n    generatorSticky = (text) => {\n        const maxWidth = window.innerWidth\n        const maxHeight = window.innerHeight\n        let randX = parseInt((maxWidth - 250) * Math.random(), 10)\n        let randY = parseInt((maxHeight - 350) * Math.random(), 10)\n        let background = this.state.color\n        let rotate = Math.floor(Math.random() * 20)\n        let note = {\n            text,\n            background,\n            top: randY,\n            left: randX,\n            rotate: rotate\n        }\n        return note\n    }\n\n\n    addStikcy = (e) => {\n        e.preventDefault()\n        let newSticky = this.generatorSticky(e.target[0].value)\n\n        this.setState({\n            stickies: [...this.state.stickies, newSticky]\n        })\n        console.log(this.state.stickies)\n    }\n\n    handleSelectChange = (e) => {\n        this.setState({\n            colors: e.target.value\n        })\n    }\n\n    handleOnchange = (e) => {\n        this.setState({\n            userTyping: e.target.value\n        })\n    }\n\n    render() {\n        const colors = ['#96C2F1', '#D5F1BB', '#E3E197', '#F8B3D0', '#FFCC00']\n        return(\n            <div>\n                This is sticky page\n\n                <form onSubmit={(e) => this.addStikcy(e)} className=\"sticky\">\n                    <Select defaultValue='#FFCC00' style={{ width: 120 }} onChange={(e) => this.handleSelectChange(e)}>\n                      <Option value='#96C2F1'>Blue</Option>\n                      <Option value='#D5F1BB'>Green</Option>\n                      <Option value='#E3E197'>Yellow</Option>\n                      <Option value='#FFCC00'>Orange</Option>\n                    </Select> \n                      \n                    <textarea placeholder=\"Wirte your memo here!\"\n                    style={{backgroundColor: `${this.state.color}`}} \n                    value={this.state.userTyping}\n                    onChange={(e) => this.handleOnchange(e)}></textarea>\n                    <button>Add New</button>\n                </form>\n\n                  {this.state.stickies.map(sticky => {\n                       return <div className=\"post\" style={{backgroundColor:`${sticky.background}`, top:`${sticky.top}px`,\n                        left: `${sticky.letf}px` } }>\n                        <pre  className=\"post-text\">{sticky.text}</pre> \n                        </div>\n                  })}\n            </div>\n        )\n    }\n}"]},"metadata":{},"sourceType":"module"}