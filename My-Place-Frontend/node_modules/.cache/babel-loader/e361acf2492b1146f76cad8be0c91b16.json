{"ast":null,"code":"var _jsxFileName = \"/home/lin/phase5/My-Place-Frontend/my-place/src/Component/Container/AlbumDetail.js\",\n    _s = $RefreshSig$();\n\nimport { Image, message, Select } from 'antd';\nimport { DeleteFilled, FolderAddFilled, CloseCircleFilled } from '@ant-design/icons';\nimport { useEffect, useState } from 'react';\nimport PhotoList from './PhotoList';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst {\n  Option\n} = Select;\n\nfunction AlbumDetail(props) {\n  _s();\n\n  const [photos, setPhotos] = useState([]);\n  useEffect(() => {\n    fetch(\"http://localhost:3000/photos\").then(res => res.json()).then(photos => setPhotos(photos));\n  }, []);\n  const albumPhoto = photos.filter(photo => photo.album_id == props.album.id);\n\n  const handleRemoveFromAblum = photoObj => {\n    fetch(`http://localhost:3000/removealbum`, {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify(photoObj)\n    }).then(res => {\n      message.info(\"Photo removed from curren ablum\");\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"photo-List\",\n    children: /*#__PURE__*/_jsxDEV(Image.PreviewGroup, {\n      children: albumPhoto.map(photo => {\n        return /*#__PURE__*/_jsxDEV(PhotoList, {\n          photo: photo,\n          handleRemoveFromAblum: handleRemoveFromAblum\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 36,\n          columnNumber: 28\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 33,\n    columnNumber: 7\n  }, this);\n}\n\n_s(AlbumDetail, \"rNJeiEBnoDDbCNHI2MVPxiP450E=\");\n\n_c = AlbumDetail;\nexport default AlbumDetail;\n\nvar _c;\n\n$RefreshReg$(_c, \"AlbumDetail\");","map":{"version":3,"sources":["/home/lin/phase5/My-Place-Frontend/my-place/src/Component/Container/AlbumDetail.js"],"names":["Image","message","Select","DeleteFilled","FolderAddFilled","CloseCircleFilled","useEffect","useState","PhotoList","Option","AlbumDetail","props","photos","setPhotos","fetch","then","res","json","albumPhoto","filter","photo","album_id","album","id","handleRemoveFromAblum","photoObj","method","headers","body","JSON","stringify","info","map"],"mappings":";;;AAAA,SAASA,KAAT,EAAgBC,OAAhB,EAAyBC,MAAzB,QAAwC,MAAxC;AACA,SAASC,YAAT,EAAuBC,eAAvB,EAAwCC,iBAAxC,QAAgE,mBAAhE;AACA,SAASC,SAAT,EAAoBC,QAApB,QAAoC,OAApC;AACA,OAAOC,SAAP,MAAsB,aAAtB;;AAEA,MAAM;AAAEC,EAAAA;AAAF,IAAaP,MAAnB;;AACA,SAASQ,WAAT,CAAqBC,KAArB,EAA4B;AAAA;;AAE3B,QAAM,CAACC,MAAD,EAASC,SAAT,IAAsBN,QAAQ,CAAC,EAAD,CAApC;AAEAD,EAAAA,SAAS,CAAC,MAAM;AACbQ,IAAAA,KAAK,CAAC,8BAAD,CAAL,CACCC,IADD,CACMC,GAAG,IAAIA,GAAG,CAACC,IAAJ,EADb,EAECF,IAFD,CAEMH,MAAM,IAAIC,SAAS,CAACD,MAAD,CAFzB;AAGD,GAJO,EAIL,EAJK,CAAT;AAMA,QAAMM,UAAU,GAAGN,MAAM,CAACO,MAAP,CAAcC,KAAK,IAAIA,KAAK,CAACC,QAAN,IAAkBV,KAAK,CAACW,KAAN,CAAYC,EAArD,CAAnB;;AAEA,QAAMC,qBAAqB,GAAGC,QAAD,IAAc;AACtCX,IAAAA,KAAK,CAAE,mCAAF,EAAsC;AACzCY,MAAAA,MAAM,EAAE,MADiC;AAEzCC,MAAAA,OAAO,EAAE;AACP,wBAAgB;AADT,OAFgC;AAKzCC,MAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAeL,QAAf;AALmC,KAAtC,CAAL,CAOCV,IAPD,CAOMC,GAAG,IAAI;AACTf,MAAAA,OAAO,CAAC8B,IAAR,CAAa,iCAAb;AACH,KATD;AAUD,GAXJ;;AAaG,sBACE;AAAK,IAAA,SAAS,EAAC,YAAf;AAAA,2BACM,QAAC,KAAD,CAAO,YAAP;AAAA,gBACKb,UAAU,CAACc,GAAX,CAAeZ,KAAK,IAAI;AACrB,4BAAO,QAAC,SAAD;AAAW,UAAA,KAAK,EAAEA,KAAlB;AAAyB,UAAA,qBAAqB,EAAEI;AAAhD;AAAA;AAAA;AAAA;AAAA,gBAAP;AACH,OAFA;AADL;AAAA;AAAA;AAAA;AAAA;AADN;AAAA;AAAA;AAAA;AAAA,UADF;AAWD;;GApCMd,W;;KAAAA,W;AAsCP,eAAeA,WAAf","sourcesContent":["import { Image, message, Select  } from 'antd';\nimport { DeleteFilled, FolderAddFilled, CloseCircleFilled} from '@ant-design/icons';\nimport { useEffect, useState } from 'react';\nimport PhotoList from './PhotoList';\n\nconst { Option } = Select;\nfunction AlbumDetail(props) {\n\n const [photos, setPhotos] = useState([])\n\n useEffect(() => {\n    fetch(\"http://localhost:3000/photos\")\n    .then(res => res.json())\n    .then(photos => setPhotos(photos))\n  }, [])\n  \n const albumPhoto = photos.filter(photo => photo.album_id == props.album.id)\n \n const handleRemoveFromAblum =(photoObj) => {\n      fetch(`http://localhost:3000/removealbum`, {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\",\n        },\n        body: JSON.stringify(photoObj)\n      })\n      .then(res => {\n          message.info(\"Photo removed from curren ablum\")\n      })\n    }\n\n    return (\n      <div className=\"photo-List\">\n            <Image.PreviewGroup>\n                {albumPhoto.map(photo => {\n                    return <PhotoList photo={photo} handleRemoveFromAblum={handleRemoveFromAblum}/> \n                })\n                }\n            </Image.PreviewGroup>\n\n      </div>\n    );\n  }\n\n  export default AlbumDetail;"]},"metadata":{},"sourceType":"module"}