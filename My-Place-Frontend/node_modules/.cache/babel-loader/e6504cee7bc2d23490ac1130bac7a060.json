{"ast":null,"code":"var _jsxFileName = \"/home/lin/phase5/My-Place-Frontend/my-place/src/Component/Container/JouranlEdit.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport Navbar from '../NavBar';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction JournalEdit(props) {\n  _s();\n\n  let [title, setTitle] = useState(props.currentJouranl.title);\n  let [content, setContent] = useState(props.currentJouranl.content);\n\n  const handlePublish = () => {\n    const updateJouranl = {\n      user_id: props.loginUser.id,\n      title: title,\n      content: content\n    };\n    fetch(`http://localhost:3000/journals/${props.currentJouranl.id}`, {\n      method: \"PATCH\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify(updateJouranl)\n    }).then(res => res.json()).then(() => {\n      alert(\"Your edit is saved\");\n      props.history.push('/journal');\n    });\n  };\n\n  const handleSave = () => {\n    const newJouranlDraft = {\n      user_id: props.loginUser.id,\n      title: title,\n      content: content\n    };\n    fetch(\"http://localhost:3000/journal_drafts\", {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify(newJouranlDraft)\n    }).then(res => res.json()).then(() => {\n      alert(\"You draft is saved\");\n    });\n  };\n\n  const handleCancelClick = () => {\n    props.history.push('journal');\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"journal-edit\",\n    children: Object.keys(props.loginUser).length > 0 ? /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(Navbar, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"editing\",\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          className: \"title\",\n          type: \"text\",\n          value: title,\n          onChange: e => setTitle(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"Content\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n          className: \"content\",\n          value: content,\n          onChange: e => setContent(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"btn\",\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => handlePublish(),\n            children: \"Publish\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 72,\n            columnNumber: 23\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => handleCancelClick(),\n            children: \"Cancel\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 73,\n            columnNumber: 23\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => handleSave(),\n            children: \"Save as Draft\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 74,\n            columnNumber: 23\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 19\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 12\n    }, this) : props.history.push('/')\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 58,\n    columnNumber: 7\n  }, this);\n}\n\n_s(JournalEdit, \"k7Kxe4k5VKDSKucSO20t6yfP41Y=\");\n\n_c = JournalEdit;\nexport default JournalEdit;\n\nvar _c;\n\n$RefreshReg$(_c, \"JournalEdit\");","map":{"version":3,"sources":["/home/lin/phase5/My-Place-Frontend/my-place/src/Component/Container/JouranlEdit.js"],"names":["React","useState","Navbar","JournalEdit","props","title","setTitle","currentJouranl","content","setContent","handlePublish","updateJouranl","user_id","loginUser","id","fetch","method","headers","body","JSON","stringify","then","res","json","alert","history","push","handleSave","newJouranlDraft","handleCancelClick","Object","keys","length","e","target","value"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\nimport Navbar from '../NavBar'\n\nfunction JournalEdit(props) {\n  \n  let [title, setTitle] = useState(props.currentJouranl.title)\n  let [content, setContent] = useState(props.currentJouranl.content)\n\n\n  const handlePublish = () => {\n    const updateJouranl = {\n      user_id: props.loginUser.id,\n      title: title,\n      content: content\n    }\n\n    fetch(`http://localhost:3000/journals/${props.currentJouranl.id}`, {\n      method: \"PATCH\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n      },\n      body: JSON.stringify(updateJouranl),\n    })\n    .then(res => res.json())\n    .then(() => {\n      alert(\"Your edit is saved\")\n      props.history.push('/journal')\n    })\n  }\n\n\n  const handleSave = () => {\n    const newJouranlDraft = {\n      user_id: props.loginUser.id,\n      title: title,\n      content: content\n    }\n\n    fetch(\"http://localhost:3000/journal_drafts\", {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n      },\n      body: JSON.stringify(newJouranlDraft),\n    })\n    .then(res => res.json())\n    .then(() => {\n      alert(\"You draft is saved\")\n    })\n  }\n\n  const handleCancelClick = () => {\n    props.history.push('journal')\n  }\n\n\n    return (\n      <div className=\"journal-edit\">\n        {Object.keys(props.loginUser).length > 0 \n          ?<div>\n          <Navbar />\n          <div className=\"editing\"> \n                    <input className=\"title\"\n                        type=\"text\"\n                        value = {title}\n                        onChange={(e) => setTitle(e.target.value)} />\n                    <h2>Content</h2>\n                    <textarea className=\"content\"\n                        value = {content}\n                        onChange={(e) => setContent(e.target.value)} />\n                  <div className=\"btn\">\n                      <button onClick={() => handlePublish()}>Publish</button>\n                      <button onClick={() => handleCancelClick()}>Cancel</button>\n                      <button onClick={() => handleSave()}>Save as Draft</button>\n                  </div>\n                </div>\n            </div>\n            :props.history.push('/')    \n          }\n      </div>\n\n    );\n  }\n\n  export default JournalEdit;"]},"metadata":{},"sourceType":"module"}