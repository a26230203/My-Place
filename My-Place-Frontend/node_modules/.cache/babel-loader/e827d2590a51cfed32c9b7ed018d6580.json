{"ast":null,"code":"var _jsxFileName = \"/home/lin/phase5/My-Place-Frontend/my-place/src/Component/Album.js\";\nimport React from \"react\";\nimport { Form, Button, message, Input } from 'antd';\nimport Navbar from './NavBar';\nimport AlbumList from './Container/AlbumList';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default class Album extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      photos: [],\n      album: [],\n      albumForm: false,\n      albumName: '',\n      displayDetail: false\n    };\n\n    this.handlClickPhoto = () => {\n      this.props.history.push('/photo');\n    };\n\n    this.handlClickAlbum = () => {\n      this.props.history.push('/album');\n    };\n\n    this.handleCreatalbum = () => {\n      this.setState({\n        albumForm: !this.state.albumForm\n      });\n    };\n\n    this.handleAlbumName = e => {\n      this.setState({\n        albumName: e.target.value\n      });\n    };\n\n    this.handleConfirm = () => {\n      const newAlbun = {\n        name: this.state.albumName,\n        user_id: this.props.loginUser.id\n      };\n      fetch(\"http://localhost:3000/albums\", {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify(newAlbun)\n      }).then(res => {\n        message.success(' Album is created');\n        this.handleCreatalbum();\n        this.componentDidMount();\n      });\n    };\n\n    this.handleClickCoverAlbum = () => {\n      this.setState({\n        displayDetail: !this.state.displayDetail\n      });\n    };\n\n    this.handleDelete = albumObj => {\n      fetch(`http://localhost:3000/albums/${albumObj.id}`, {\n        method: \"DELETE\"\n      }).then(res => res.json());\n      fetch(`http://localhost:3000/photoalbum`, {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify({\n          album_id: albumObj.id\n        })\n      }).then(() => {\n        this.componentDidMount();\n      });\n    };\n  }\n\n  componentDidMount() {\n    fetch(\"http://localhost:3000/photos\").then(res => res.json()).then(photos => this.setState({\n      photos\n    }));\n    fetch(\"http://localhost:3000/albums\").then(res => res.json()).then(album => this.setState({\n      album\n    }));\n  } //go to photo route\n\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"photo\",\n      children: Object.keys(this.props.loginUser).length > 0 ? /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(Navbar, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 105,\n          columnNumber: 13\n        }, this), this.state.displayDetail ? null : /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"photo-subnav\",\n            children: [/*#__PURE__*/_jsxDEV(\"li\", {\n              onClick: () => this.handlClickPhoto(),\n              children: \"Photos\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 110,\n              columnNumber: 23\n            }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n              onClick: () => this.handlClickAlbum(),\n              children: \"Album\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 111,\n              columnNumber: 23\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 109,\n            columnNumber: 19\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"photo-btn\",\n            children: /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: () => this.handleCreatalbum(),\n              children: \"Create Album\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 115,\n              columnNumber: 21\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 113,\n            columnNumber: 19\n          }, this), this.state.album.map(album => {\n            return /*#__PURE__*/_jsxDEV(AlbumList, {\n              loginUser: this.props.loginUser,\n              photos: this.state.photos,\n              album: album,\n              handleDelete: this.handleDelete\n            }, album.id, false, {\n              fileName: _jsxFileName,\n              lineNumber: 118,\n              columnNumber: 33\n            }, this);\n          })]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 108,\n          columnNumber: 16\n        }, this), this.state.albumForm ? /*#__PURE__*/_jsxDEV(Form, {\n          children: [/*#__PURE__*/_jsxDEV(Input, {\n            addonBefore: \"Album Title:\",\n            style: {\n              width: '500px'\n            },\n            value: this.state.albumName,\n            onChange: e => this.handleAlbumName(e)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 125,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            type: \"primary\",\n            shape: \"round\",\n            onClick: () => this.handleConfirm(),\n            children: \"Confirm\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 129,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            type: \"primary\",\n            shape: \"round\",\n            onClick: () => this.handleConfirm(),\n            children: \"Cancel\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 130,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 124,\n          columnNumber: 14\n        }, this) : null]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 12\n      }, this) : this.props.history.push('/')\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 7\n    }, this);\n  }\n\n}","map":{"version":3,"sources":["/home/lin/phase5/My-Place-Frontend/my-place/src/Component/Album.js"],"names":["React","Form","Button","message","Input","Navbar","AlbumList","Album","Component","state","photos","album","albumForm","albumName","displayDetail","handlClickPhoto","props","history","push","handlClickAlbum","handleCreatalbum","setState","handleAlbumName","e","target","value","handleConfirm","newAlbun","name","user_id","loginUser","id","fetch","method","headers","body","JSON","stringify","then","res","success","componentDidMount","handleClickCoverAlbum","handleDelete","albumObj","json","album_id","render","Object","keys","length","map","width"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport {  Form, Button, message, Input } from 'antd'\nimport Navbar from './NavBar'\nimport AlbumList from './Container/AlbumList'\n\n\nexport default class Album extends React.Component {\n\n  state = {\n    photos: [],\n    album: [],\n    albumForm: false,\n    albumName: '',\n    displayDetail: false\n    }\n\n    componentDidMount() {\n      fetch(\"http://localhost:3000/photos\")\n      .then(res => res.json())\n      .then(photos => this.setState({photos}))\n\n      fetch(\"http://localhost:3000/albums\")\n      .then(res => res.json())\n      .then(album => this.setState({album}))\n    }\n\n    //go to photo route\n    handlClickPhoto = () => {\n      this.props.history.push('/photo')\n    }\n\n    //go to album route\n    handlClickAlbum = () => {\n      this.props.history.push('/album')\n    }\n\n    //Display album form\n    handleCreatalbum = () => {\n      this.setState({\n        albumForm : !this.state.albumForm\n      })\n    }\n\n    //Handle albun name \n    handleAlbumName = (e) => {\n      this.setState({\n        albumName: e.target.value\n      })\n    }\n\n    //Create ablum\n    handleConfirm = () => {\n      const newAlbun ={\n        name: this.state.albumName,\n        user_id: this.props.loginUser.id\n      }\n      fetch(\"http://localhost:3000/albums\", {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\",\n        },\n        body: JSON.stringify(newAlbun),\n      })\n      .then(res => {\n        message.success(' Album is created')\n        this.handleCreatalbum()\n        this.componentDidMount()\n      })\n    }\n\n    //See album detail\n    handleClickCoverAlbum = () => {\n      this.setState({\n        displayDetail: !this.state.displayDetail\n      })\n    } \n   \n\n    //Delete album\n    handleDelete =(albumObj) => {\n      fetch(`http://localhost:3000/albums/${albumObj.id}`, {\n          method: \"DELETE\",\n        })\n        .then(res => res.json())\n\n        fetch(`http://localhost:3000/photoalbum`, {\n          method: \"POST\",\n          headers: {\n            \"Content-Type\": \"application/json\",\n          },\n          body: JSON.stringify({\n            album_id: albumObj.id\n          })\n        })  \n        .then(() => {\n          this.componentDidMount()\n        })\n      }\n\n    render() {\n      return (\n      <div className=\"photo\">\n        { Object.keys(this.props.loginUser).length > 0 \n          ?<div>\n            <Navbar />\n            {this.state.displayDetail\n              ?null\n              :<div> \n                  <div className=\"photo-subnav\">\n                      <li onClick={() => this.handlClickPhoto()}>Photos</li>\n                      <li onClick={() => this.handlClickAlbum()}>Album</li>\n                  </div>\n                  <div className=\"photo-btn\">\n\n                    <button onClick={() => this.handleCreatalbum()}>Create Album</button>\n                  </div>\n                      {this.state.album.map(album => {\n                        return  <AlbumList key={album.id} loginUser={this.props.loginUser} photos={this.state.photos} album={album} handleDelete={this.handleDelete}/>\n                      })\n                      }\n                </div>  \n            }     \n            {this.state.albumForm\n            ?<Form>\n              <Input addonBefore=\"Album Title:\" \n              style={{width: '500px'}} \n              value={this.state.albumName}\n              onChange={(e) => this.handleAlbumName(e)}/>\n              <Button type=\"primary\" shape=\"round\" onClick={() => this.handleConfirm()}>Confirm</Button>\n              <Button type=\"primary\" shape=\"round\" onClick={() => this.handleConfirm()}>Cancel</Button>\n            </Form>\n            :null\n          }\n\n          </div>\n          :this.props.history.push('/')\n        }\n      </div>\n      )\n    }\n  }"]},"metadata":{},"sourceType":"module"}