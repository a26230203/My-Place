{"ast":null,"code":"var _jsxFileName = \"/home/lin/phase5/My-Place-Frontend/my-place/src/Component/Album.js\";\nimport React from \"react\";\nimport { Form, Button, Image, Input } from 'antd';\nimport Navbar from './NavBar';\nimport AlbumList from './Container/AlbumList';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default class Album extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      photos: [],\n      album: [],\n      albumForm: false,\n      albumName: ''\n    };\n\n    this.handlClickPhoto = () => {\n      this.props.history.push('/photo');\n    };\n\n    this.handlClickAlbum = () => {\n      this.props.history.push('/album');\n    };\n\n    this.handleCreatalbum = () => {\n      this.setState({\n        albumForm: !this.state.albumForm\n      });\n    };\n\n    this.handleAlbumName = e => {\n      this.setState({\n        albumName: e.target.value\n      });\n    };\n\n    this.handleConfirm = () => {\n      const newAlbun = {\n        name: this.state.albumName,\n        user_id: this.props.loginUser.id\n      };\n      fetch(\"http://localhost:3000/albums\", {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify(newAlbun)\n      }).then(res => res.json());\n      this.handleCreatalbum();\n      this.componentDidMount();\n    };\n\n    this.handleDelete = albumObj => {\n      fetch(`http://localhost:3000/albums/${albumObj.id}`, {\n        method: \"DELETE\"\n      }).then(res => res.json()).then(() => {\n        this.componentDidMount();\n      });\n    };\n  }\n\n  componentDidMount() {\n    fetch(\"http://localhost:3000/photos\").then(res => res.json()).then(photos => this.setState({\n      photos\n    }));\n    fetch(\"http://localhost:3000/albums\").then(res => res.json()).then(album => this.setState({\n      album\n    }));\n  } //go to photo route\n\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"photo\",\n      children: Object.keys(this.props.loginUser).length > 0 ? /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(Navbar, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"photo-subnav\",\n          children: [/*#__PURE__*/_jsxDEV(\"li\", {\n            onClick: () => this.handlClickPhoto(),\n            children: \"Photos\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 85,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n            onClick: () => this.handlClickAlbum(),\n            children: \"Album\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 86,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"photo-btn\",\n          children: /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => this.handleCreatalbum(),\n            children: \"Create Album\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 90,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 88,\n          columnNumber: 13\n        }, this), this.state.album.map(album => {\n          return /*#__PURE__*/_jsxDEV(AlbumList, {\n            loginUser: this.props.loginUser,\n            photos: this.state.photos,\n            album: album,\n            handleDelete: this.handleDelete\n          }, album.id, false, {\n            fileName: _jsxFileName,\n            lineNumber: 93,\n            columnNumber: 28\n          }, this);\n        }), this.state.albumForm ? /*#__PURE__*/_jsxDEV(Form, {\n          children: [/*#__PURE__*/_jsxDEV(Input, {\n            addonBefore: \"Album Title:\",\n            style: {\n              width: '500px'\n            },\n            value: this.state.albumName,\n            onChange: e => this.handleAlbumName(e)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 98,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            type: \"primary\",\n            shape: \"round\",\n            onClick: () => this.handleConfirm(),\n            children: \"Confirm\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 102,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            type: \"primary\",\n            shape: \"round\",\n            onClick: () => this.handleConfirm(),\n            children: \"Cancel\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 103,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 97,\n          columnNumber: 14\n        }, this) : null]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 12\n      }, this) : this.props.history.push('/')\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 7\n    }, this);\n  }\n\n}","map":{"version":3,"sources":["/home/lin/phase5/My-Place-Frontend/my-place/src/Component/Album.js"],"names":["React","Form","Button","Image","Input","Navbar","AlbumList","Album","Component","state","photos","album","albumForm","albumName","handlClickPhoto","props","history","push","handlClickAlbum","handleCreatalbum","setState","handleAlbumName","e","target","value","handleConfirm","newAlbun","name","user_id","loginUser","id","fetch","method","headers","body","JSON","stringify","then","res","json","componentDidMount","handleDelete","albumObj","render","Object","keys","length","map","width"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAAUC,IAAV,EAAgBC,MAAhB,EAAwBC,KAAxB,EAA+BC,KAA/B,QAA4C,MAA5C;AACA,OAAOC,MAAP,MAAmB,UAAnB;AACA,OAAOC,SAAP,MAAsB,uBAAtB;;AAGA,eAAe,MAAMC,KAAN,SAAoBP,KAAK,CAACQ,SAA1B,CAAoC;AAAA;AAAA;AAAA,SAEjDC,KAFiD,GAEzC;AACNC,MAAAA,MAAM,EAAE,EADF;AAENC,MAAAA,KAAK,EAAE,EAFD;AAGNC,MAAAA,SAAS,EAAE,KAHL;AAINC,MAAAA,SAAS,EAAE;AAJL,KAFyC;;AAAA,SAoB/CC,eApB+C,GAoB7B,MAAM;AACtB,WAAKC,KAAL,CAAWC,OAAX,CAAmBC,IAAnB,CAAwB,QAAxB;AACD,KAtB8C;;AAAA,SAyB/CC,eAzB+C,GAyB7B,MAAM;AACtB,WAAKH,KAAL,CAAWC,OAAX,CAAmBC,IAAnB,CAAwB,QAAxB;AACD,KA3B8C;;AAAA,SA8B/CE,gBA9B+C,GA8B5B,MAAM;AACvB,WAAKC,QAAL,CAAc;AACZR,QAAAA,SAAS,EAAG,CAAC,KAAKH,KAAL,CAAWG;AADZ,OAAd;AAGD,KAlC8C;;AAAA,SAqC/CS,eArC+C,GAqC5BC,CAAD,IAAO;AACvB,WAAKF,QAAL,CAAc;AACZP,QAAAA,SAAS,EAAES,CAAC,CAACC,MAAF,CAASC;AADR,OAAd;AAGD,KAzC8C;;AAAA,SA2C/CC,aA3C+C,GA2C/B,MAAM;AACpB,YAAMC,QAAQ,GAAE;AACdC,QAAAA,IAAI,EAAE,KAAKlB,KAAL,CAAWI,SADH;AAEde,QAAAA,OAAO,EAAE,KAAKb,KAAL,CAAWc,SAAX,CAAqBC;AAFhB,OAAhB;AAIAC,MAAAA,KAAK,CAAC,8BAAD,EAAiC;AACpCC,QAAAA,MAAM,EAAE,MAD4B;AAEpCC,QAAAA,OAAO,EAAE;AACP,0BAAgB;AADT,SAF2B;AAKpCC,QAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAeV,QAAf;AAL8B,OAAjC,CAAL,CAOCW,IAPD,CAOMC,GAAG,IAAIA,GAAG,CAACC,IAAJ,EAPb;AAQA,WAAKpB,gBAAL;AACA,WAAKqB,iBAAL;AACD,KA1D8C;;AAAA,SA6D5CC,YA7D4C,GA6D7BC,QAAD,IAAc;AACzBX,MAAAA,KAAK,CAAE,gCAA+BW,QAAQ,CAACZ,EAAG,EAA7C,EAAgD;AACjDE,QAAAA,MAAM,EAAE;AADyC,OAAhD,CAAL,CAGGK,IAHH,CAGQC,GAAG,IAAIA,GAAG,CAACC,IAAJ,EAHf,EAIGF,IAJH,CAIQ,MAAM;AACV,aAAKG,iBAAL;AACD,OANH;AAOC,KArEwC;AAAA;;AAS/CA,EAAAA,iBAAiB,GAAG;AAClBT,IAAAA,KAAK,CAAC,8BAAD,CAAL,CACCM,IADD,CACMC,GAAG,IAAIA,GAAG,CAACC,IAAJ,EADb,EAECF,IAFD,CAEM3B,MAAM,IAAI,KAAKU,QAAL,CAAc;AAACV,MAAAA;AAAD,KAAd,CAFhB;AAIAqB,IAAAA,KAAK,CAAC,8BAAD,CAAL,CACCM,IADD,CACMC,GAAG,IAAIA,GAAG,CAACC,IAAJ,EADb,EAECF,IAFD,CAEM1B,KAAK,IAAI,KAAKS,QAAL,CAAc;AAACT,MAAAA;AAAD,KAAd,CAFf;AAGD,GAjB8C,CAmB/C;;;AAoDAgC,EAAAA,MAAM,GAAG;AACP,wBACA;AAAK,MAAA,SAAS,EAAC,OAAf;AAAA,gBACIC,MAAM,CAACC,IAAP,CAAY,KAAK9B,KAAL,CAAWc,SAAvB,EAAkCiB,MAAlC,GAA2C,CAA3C,gBACC;AAAA,gCACC,QAAC,MAAD;AAAA;AAAA;AAAA;AAAA,gBADD,eAEC;AAAK,UAAA,SAAS,EAAC,cAAf;AAAA,kCACI;AAAI,YAAA,OAAO,EAAE,MAAM,KAAKhC,eAAL,EAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADJ,eAEI;AAAI,YAAA,OAAO,EAAE,MAAM,KAAKI,eAAL,EAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,gBAFD,eAMC;AAAK,UAAA,SAAS,EAAC,WAAf;AAAA,iCAEE;AAAQ,YAAA,OAAO,EAAE,MAAM,KAAKC,gBAAL,EAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAFF;AAAA;AAAA;AAAA;AAAA,gBAND,EAUO,KAAKV,KAAL,CAAWE,KAAX,CAAiBoC,GAAjB,CAAqBpC,KAAK,IAAI;AAC7B,8BAAQ,QAAC,SAAD;AAA0B,YAAA,SAAS,EAAE,KAAKI,KAAL,CAAWc,SAAhD;AAA2D,YAAA,MAAM,EAAE,KAAKpB,KAAL,CAAWC,MAA9E;AAAsF,YAAA,KAAK,EAAEC,KAA7F;AAAoG,YAAA,YAAY,EAAE,KAAK8B;AAAvH,aAAgB9B,KAAK,CAACmB,EAAtB;AAAA;AAAA;AAAA;AAAA,kBAAR;AACD,SAFA,CAVP,EAcE,KAAKrB,KAAL,CAAWG,SAAX,gBACA,QAAC,IAAD;AAAA,kCACC,QAAC,KAAD;AAAO,YAAA,WAAW,EAAC,cAAnB;AACA,YAAA,KAAK,EAAE;AAACoC,cAAAA,KAAK,EAAE;AAAR,aADP;AAEA,YAAA,KAAK,EAAE,KAAKvC,KAAL,CAAWI,SAFlB;AAGA,YAAA,QAAQ,EAAGS,CAAD,IAAO,KAAKD,eAAL,CAAqBC,CAArB;AAHjB;AAAA;AAAA;AAAA;AAAA,kBADD,eAKC,QAAC,MAAD;AAAQ,YAAA,IAAI,EAAC,SAAb;AAAuB,YAAA,KAAK,EAAC,OAA7B;AAAqC,YAAA,OAAO,EAAE,MAAM,KAAKG,aAAL,EAApD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBALD,eAMC,QAAC,MAAD;AAAQ,YAAA,IAAI,EAAC,SAAb;AAAuB,YAAA,KAAK,EAAC,OAA7B;AAAqC,YAAA,OAAO,EAAE,MAAM,KAAKA,aAAL,EAApD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAND;AAAA;AAAA;AAAA;AAAA;AAAA,gBADA,GASA,IAvBF;AAAA;AAAA;AAAA;AAAA;AAAA,cADD,GA4BC,KAAKV,KAAL,CAAWC,OAAX,CAAmBC,IAAnB,CAAwB,GAAxB;AA7BL;AAAA;AAAA;AAAA;AAAA,YADA;AAkCD;;AA1G8C","sourcesContent":["import React from \"react\";\nimport {  Form, Button, Image, Input } from 'antd'\nimport Navbar from './NavBar'\nimport AlbumList from './Container/AlbumList'\n\n\nexport default class Album extends React.Component {\n\n  state = {\n    photos: [],\n    album: [],\n    albumForm: false,\n    albumName: '',\n    }\n\n    componentDidMount() {\n      fetch(\"http://localhost:3000/photos\")\n      .then(res => res.json())\n      .then(photos => this.setState({photos}))\n\n      fetch(\"http://localhost:3000/albums\")\n      .then(res => res.json())\n      .then(album => this.setState({album}))\n    }\n\n    //go to photo route\n    handlClickPhoto = () => {\n      this.props.history.push('/photo')\n    }\n\n    //go to album route\n    handlClickAlbum = () => {\n      this.props.history.push('/album')\n    }\n\n    //Display album form\n    handleCreatalbum = () => {\n      this.setState({\n        albumForm : !this.state.albumForm\n      })\n    }\n\n    //Handle albun name \n    handleAlbumName = (e) => {\n      this.setState({\n        albumName: e.target.value\n      })\n    }\n    //Create ablum\n    handleConfirm = () => {\n      const newAlbun ={\n        name: this.state.albumName,\n        user_id: this.props.loginUser.id\n      }\n      fetch(\"http://localhost:3000/albums\", {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\",\n        },\n        body: JSON.stringify(newAlbun),\n      })\n      .then(res => res.json())\n      this.handleCreatalbum()\n      this.componentDidMount()\n    }\n\n      //Delete album\n       handleDelete =(albumObj) => {\n          fetch(`http://localhost:3000/albums/${albumObj.id}`, {\n              method: \"DELETE\",\n            })\n            .then(res => res.json())\n            .then(() => {\n              this.componentDidMount()\n            })\n          }\n\n    render() {\n      return (\n      <div className=\"photo\">\n        { Object.keys(this.props.loginUser).length > 0 \n          ?<div>\n            <Navbar />\n            <div className=\"photo-subnav\">\n                <li onClick={() => this.handlClickPhoto()}>Photos</li>\n                <li onClick={() => this.handlClickAlbum()}>Album</li>\n            </div>\n            <div className=\"photo-btn\">\n\n              <button onClick={() => this.handleCreatalbum()}>Create Album</button>\n            </div>\n                 {this.state.album.map(album => {\n                   return  <AlbumList key={album.id} loginUser={this.props.loginUser} photos={this.state.photos} album={album} handleDelete={this.handleDelete}/>\n                 })\n                 }\n            {this.state.albumForm\n            ?<Form>\n              <Input addonBefore=\"Album Title:\" \n              style={{width: '500px'}} \n              value={this.state.albumName}\n              onChange={(e) => this.handleAlbumName(e)}/>\n              <Button type=\"primary\" shape=\"round\" onClick={() => this.handleConfirm()}>Confirm</Button>\n              <Button type=\"primary\" shape=\"round\" onClick={() => this.handleConfirm()}>Cancel</Button>\n            </Form>\n            :null\n          }\n\n          </div>\n          :this.props.history.push('/')\n        }\n      </div>\n      )\n    }\n  }"]},"metadata":{},"sourceType":"module"}