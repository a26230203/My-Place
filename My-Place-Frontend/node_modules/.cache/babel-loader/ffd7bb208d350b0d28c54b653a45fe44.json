{"ast":null,"code":"var _jsxFileName = \"/home/lin/phase5/My-Place-Frontend/my-place/src/Component/Convas.js\",\n    _s = $RefreshSig$();\n\nimport React, { useRef, useEffect } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Canvas(props) {\n  _s();\n\n  let canvasRef = useRef(null);\n  useEffect(() => {\n    const canvas = canvasRef.current;\n    const c = canvas.getContext('2d');\n    canvas.width = window.innerWidth;\n    canvas.height = window.innerHeight;\n    var mouse = {\n      x: undefined,\n      y: undefined\n    };\n    var maxRadius = 40;\n    var minRadius = 15;\n    window.addEventListener('mousemove', e => {\n      mouse.x = e.x;\n      mouse.y = e.y;\n    });\n    window.addEventListener('resize', () => {\n      canvas.width = window.innerWidth;\n      canvas.height = window.innerHeight;\n      circleGenerator();\n    });\n\n    function getRandColor() {\n      let r = 255 * Math.random() | 0,\n          g = 255 * Math.random() | 0,\n          b = 255 * Math.random() | 0;\n      return 'rgb(' + r + ',' + g + ',' + b + ',' + 0.7 + ')';\n    }\n\n    function circle(x, y, dx, dy, radius) {\n      this.x = x;\n      this.y = y;\n      this.dx = dx;\n      this.dy = dy;\n      this.radius = radius;\n      this.minRadius = radius;\n      this.color = getRandColor();\n\n      this.draw = () => {\n        c.beginPath();\n        c.arc(this.x, this.y, this.radius, 0, Math.PI * 2, false);\n        c.fillStyle = this.color;\n        c.fill();\n      };\n\n      this.collision = () => {\n        if (this.x + radius > canvas.width || this.x - this.radius < 0) {\n          this.dx = -this.dx;\n        } else if (this.y + radius > canvas.height || this.y - this.radius < 0) {\n          this.dy = -this.dy;\n        }\n\n        this.x += this.dx;\n        this.y += this.dy;\n\n        if (mouse.x - this.x < 50 && mouse.x - this.x > -50 && mouse.y - this.y < 50 && mouse.y - this.y > -50) {\n          if (this.radius < maxRadius) {\n            this.radius += 1;\n          }\n        } else if (this.radius > minRadius) {\n          this.radius -= 1;\n        }\n\n        this.draw();\n      };\n    }\n\n    var circleArray = [];\n\n    function circleGenerator() {\n      for (var i = 0; i < 200; i++) {\n        var radius = Math.random() * 15 + 1;\n        var x = Math.random() * (canvas.width - radius * 2) + radius;\n        var y = Math.random() * (canvas.height - radius * 2) + radius;\n        var dx = Math.random() - 0.5 * 5;\n        var dy = Math.random() - 0.5 * 5;\n        circleArray.push(new circle(x, y, dx, dy, radius));\n      }\n    }\n\n    circleGenerator();\n\n    const animate = () => {\n      requestAnimationFrame(animate);\n      c.clearRect(0, 0, canvas.width, canvas.height);\n\n      for (var i = 0; i < circleArray.length; i++) {\n        circleArray[i].collision();\n      }\n    };\n\n    animate();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"canvas\",\n    children: /*#__PURE__*/_jsxDEV(\"canvas\", {\n      ref: canvasRef\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 11\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 105,\n    columnNumber: 7\n  }, this);\n}\n\n_s(Canvas, \"UJgi7ynoup7eqypjnwyX/s32POg=\");\n\n_c = Canvas;\nexport default Canvas;\n\nvar _c;\n\n$RefreshReg$(_c, \"Canvas\");","map":{"version":3,"sources":["/home/lin/phase5/My-Place-Frontend/my-place/src/Component/Convas.js"],"names":["React","useRef","useEffect","Canvas","props","canvasRef","canvas","current","c","getContext","width","window","innerWidth","height","innerHeight","mouse","x","undefined","y","maxRadius","minRadius","addEventListener","e","circleGenerator","getRandColor","r","Math","random","g","b","circle","dx","dy","radius","color","draw","beginPath","arc","PI","fillStyle","fill","collision","circleArray","i","push","animate","requestAnimationFrame","clearRect","length"],"mappings":"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","sourcesContent":["import React, {useRef, useEffect } from \"react\";\n\nfunction Canvas(props) {\n     let canvasRef = useRef(null)\n\n     \n     useEffect(() => {\n         const canvas = canvasRef.current\n         const c = canvas.getContext('2d')\n         \n         canvas.width = window.innerWidth\n         canvas.height = window.innerHeight\n         \n         var mouse = {\n             x: undefined,\n             y: undefined\n         }\n     \n         var maxRadius = 40;\n         var minRadius = 15;\n         \n        window.addEventListener('mousemove', (e) => {\n            mouse.x = e.x;\n            mouse.y = e.y\n        })\n        \n        window.addEventListener('resize', () => {\n            canvas.width = window.innerWidth; \n            canvas.height = window.innerHeight;\n            circleGenerator();\n        })\n        \n        function getRandColor() {\n            let r = 255*Math.random()|0,\n                g = 255*Math.random()|0,\n                b = 255*Math.random()|0;\n            return 'rgb(' + r + ',' + g + ',' + b + ',' + 0.7 + ')';\n        }\n        function circle(x, y, dx, dy, radius) {\n            this.x = x;\n            this.y = y;\n            this.dx = dx;\n            this.dy = dy;\n            this.radius = radius;\n            this.minRadius = radius;\n            this.color = getRandColor()\n\n            this.draw = () => {\n                c.beginPath();\n                c.arc(this.x, this.y, this.radius, 0, Math.PI * 2, false)\n                c.fillStyle = this.color\n                c.fill();\n            }\n\n            this.collision = () => {\n                if( this.x + radius > canvas.width || this.x - this.radius < 0) {\n                    this.dx = -this.dx;\n                }else if ( this.y + radius > canvas.height || this.y - this.radius < 0) {\n                    this.dy = -this.dy\n                }\n        \n                this.x += this.dx;\n                this.y += this.dy;\n        \n                if(mouse.x - this.x < 50 && mouse.x - this.x > -50 && mouse.y - this.y < 50 && mouse.y - this.y > -50) {\n                    if( this.radius < maxRadius){\n                        this.radius +=1;\n                    }\n                }else if (this.radius > minRadius){ \n                    this.radius -=1;\n                }\n                this.draw();\n            }\n        }\n\n        var circleArray = []\n        function circleGenerator() {\n            for(var i = 0; i < 200; i++) {\n                var radius = Math.random() * 15 + 1;\n                var x = Math.random() * (canvas.width - radius * 2 ) + radius;\n                var y = Math.random() * (canvas.height - radius * 2) + radius;\n                var dx = (Math.random() - 0.5 * 5);\n                var dy = (Math.random() - 0.5 * 5);\n                circleArray.push(new circle(x, y, dx, dy, radius))\n            }\n        }\n\n        circleGenerator();\n\n        const animate =() => {\n            requestAnimationFrame(animate);\n            c.clearRect(0,0,canvas.width,canvas.height);\n        \n            for(var i = 0; i < circleArray.length; i++) {\n                circleArray[i].collision()\n            }\n        }\n        \n        animate()\n    }, [])\n\n\n\n    return (\n      <div className=\"canvas\">\n          <canvas ref={canvasRef}></canvas>\n      </div>\n\n    );\n  }\n\n  export default Canvas;"]},"metadata":{},"sourceType":"module"}